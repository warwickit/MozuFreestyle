
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;

namespace Mozu.Api.Resources.Platform
{
	/// <summary>
	/// platform/extensions related resources. DOCUMENT_HERE 
	/// </summary>
	public partial class TenantExtensionsResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		
		public TenantExtensionsResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		public TenantExtensionsResource CloneWithApiContext(Action<IApiContext> contextModification) 
		{
			return new TenantExtensionsResource(_apiContext.CloneWith(contextModification));
		}

				
		/// <summary>
		/// platform-extensions Get GetExtensions description DOCUMENT_HERE 
		/// </summary>
		/// <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.InstalledApplications.TenantExtensions"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var tenantextensions = new TenantExtensions();
		///   var tenantExtensions = tenantextensions.GetExtensions( responseFields);
		/// </code>
		/// </example>
		[Obsolete("This method is obsolete; use the async method instead")]
		public virtual Mozu.Api.Contracts.InstalledApplications.TenantExtensions GetExtensions(string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.InstalledApplications.TenantExtensions> response;
			var client = Mozu.Api.Clients.Platform.TenantExtensionsClient.GetExtensionsClient( responseFields);
			client.WithContext(_apiContext);
			response = client.Execute();
			return response.Result();

		}

		/// <summary>
		/// platform-extensions Get GetExtensions description DOCUMENT_HERE 
		/// </summary>
		/// <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.InstalledApplications.TenantExtensions"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var tenantextensions = new TenantExtensions();
		///   var tenantExtensions = await tenantextensions.GetExtensionsAsync( responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.InstalledApplications.TenantExtensions> GetExtensionsAsync(string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.InstalledApplications.TenantExtensions> response;
			var client = Mozu.Api.Clients.Platform.TenantExtensionsClient.GetExtensionsClient( responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync();
			return await response.ResultAsync();

		}

		/// <summary>
		/// platform-extensions Put UpdateExtensions description DOCUMENT_HERE 
		/// </summary>
		/// <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
		/// <param name="extensions">Mozu.InstalledApplications.Contracts.TenantExtensions ApiType DOCUMENT_HERE </param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.InstalledApplications.TenantExtensions"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var tenantextensions = new TenantExtensions();
		///   var tenantExtensions = tenantextensions.UpdateExtensions( extensions,  responseFields);
		/// </code>
		/// </example>
		[Obsolete("This method is obsolete; use the async method instead")]
		public virtual Mozu.Api.Contracts.InstalledApplications.TenantExtensions UpdateExtensions(Mozu.Api.Contracts.InstalledApplications.TenantExtensions extensions, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.InstalledApplications.TenantExtensions> response;
			var client = Mozu.Api.Clients.Platform.TenantExtensionsClient.UpdateExtensionsClient( extensions,  responseFields);
			client.WithContext(_apiContext);
			response = client.Execute();
			return response.Result();

		}

		/// <summary>
		/// platform-extensions Put UpdateExtensions description DOCUMENT_HERE 
		/// </summary>
		/// <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
		/// <param name="extensions">Mozu.InstalledApplications.Contracts.TenantExtensions ApiType DOCUMENT_HERE </param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.InstalledApplications.TenantExtensions"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var tenantextensions = new TenantExtensions();
		///   var tenantExtensions = await tenantextensions.UpdateExtensionsAsync( extensions,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.InstalledApplications.TenantExtensions> UpdateExtensionsAsync(Mozu.Api.Contracts.InstalledApplications.TenantExtensions extensions, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.InstalledApplications.TenantExtensions> response;
			var client = Mozu.Api.Clients.Platform.TenantExtensionsClient.UpdateExtensionsClient( extensions,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync();
			return await response.ResultAsync();

		}


	}

}


