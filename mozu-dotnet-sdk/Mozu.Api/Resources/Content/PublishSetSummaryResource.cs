
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;

namespace Mozu.Api.Resources.Content
{
	/// <summary>
	/// content/publishsets related resources. DOCUMENT_HERE 
	/// </summary>
	public partial class PublishSetSummaryResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		
		public PublishSetSummaryResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		public PublishSetSummaryResource CloneWithApiContext(Action<IApiContext> contextModification) 
		{
			return new PublishSetSummaryResource(_apiContext.CloneWith(contextModification));
		}

				
		/// <summary>
		/// Returns a List of current Publishing sets with counts of drafts in each
		/// </summary>
		/// <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
		/// <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
		/// <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.PublishSetSummaryPagedCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var publishsetsummary = new PublishSetSummary();
		///   var publishSetSummaryPagedCollection = publishsetsummary.GetPublishSets( pageSize,  startIndex,  responseFields);
		/// </code>
		/// </example>
		[Obsolete("This method is obsolete; use the async method instead")]
		public virtual Mozu.Api.Contracts.Content.PublishSetSummaryPagedCollection GetPublishSets(int? pageSize =  null, int? startIndex =  null, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.Content.PublishSetSummaryPagedCollection> response;
			var client = Mozu.Api.Clients.Content.PublishSetSummaryClient.GetPublishSetsClient( pageSize,  startIndex,  responseFields);
			client.WithContext(_apiContext);
			response = client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Returns a List of current Publishing sets with counts of drafts in each
		/// </summary>
		/// <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
		/// <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
		/// <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.PublishSetSummaryPagedCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var publishsetsummary = new PublishSetSummary();
		///   var publishSetSummaryPagedCollection = await publishsetsummary.GetPublishSetsAsync( pageSize,  startIndex,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Content.PublishSetSummaryPagedCollection> GetPublishSetsAsync(int? pageSize =  null, int? startIndex =  null, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.Content.PublishSetSummaryPagedCollection> response;
			var client = Mozu.Api.Clients.Content.PublishSetSummaryClient.GetPublishSetsClient( pageSize,  startIndex,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync();
			return await response.ResultAsync();

		}

		/// <summary>
		/// Retrieve a paged collection of publish set Items.
		/// </summary>
		/// <param name="code">User-defined code that uniqely identifies the channel group.</param>
		/// <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
		/// <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
		/// <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var publishsetsummary = new PublishSetSummary();
		///   var documentDraftSummaryPagedCollection = publishsetsummary.GetPublishSetItems( code,  pageSize,  startIndex,  responseFields);
		/// </code>
		/// </example>
		[Obsolete("This method is obsolete; use the async method instead")]
		public virtual Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection GetPublishSetItems(string code, int? pageSize =  null, int? startIndex =  null, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection> response;
			var client = Mozu.Api.Clients.Content.PublishSetSummaryClient.GetPublishSetItemsClient( code,  pageSize,  startIndex,  responseFields);
			client.WithContext(_apiContext);
			response = client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieve a paged collection of publish set Items.
		/// </summary>
		/// <param name="code">User-defined code that uniqely identifies the channel group.</param>
		/// <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
		/// <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
		/// <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var publishsetsummary = new PublishSetSummary();
		///   var documentDraftSummaryPagedCollection = await publishsetsummary.GetPublishSetItemsAsync( code,  pageSize,  startIndex,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection> GetPublishSetItemsAsync(string code, int? pageSize =  null, int? startIndex =  null, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection> response;
			var client = Mozu.Api.Clients.Content.PublishSetSummaryClient.GetPublishSetItemsClient( code,  pageSize,  startIndex,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync();
			return await response.ResultAsync();

		}

		/// <summary>
		/// Adds a set of documents by id to a publish set
		/// </summary>
		/// <param name="code">User-defined code that uniqely identifies the channel group.</param>
		/// <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
		/// <param name="shouldDiscard"></param>
		/// <returns>
		/// object
		/// </returns>
		/// <example>
		/// <code>
		///   var publishsetsummary = new PublishSetSummary();
		///   var object = publishsetsummary.DeletePublishSet( code,  shouldDiscard,  responseFields);
		/// </code>
		/// </example>
		[Obsolete("This method is obsolete; use the async method instead")]
		public virtual object DeletePublishSet(string code, bool? shouldDiscard =  null, string responseFields =  null)
		{
			MozuClient<object> response;
			var client = Mozu.Api.Clients.Content.PublishSetSummaryClient.DeletePublishSetClient( code,  shouldDiscard,  responseFields);
			client.WithContext(_apiContext);
			response = client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Adds a set of documents by id to a publish set
		/// </summary>
		/// <param name="code">User-defined code that uniqely identifies the channel group.</param>
		/// <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
		/// <param name="shouldDiscard"></param>
		/// <returns>
		/// object
		/// </returns>
		/// <example>
		/// <code>
		///   var publishsetsummary = new PublishSetSummary();
		///   var object = await publishsetsummary.DeletePublishSetAsync( code,  shouldDiscard,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<object> DeletePublishSetAsync(string code, bool? shouldDiscard =  null, string responseFields =  null)
		{
			MozuClient<object> response;
			var client = Mozu.Api.Clients.Content.PublishSetSummaryClient.DeletePublishSetClient( code,  shouldDiscard,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync();
			return await response.ResultAsync();

		}

		/// <summary>
		/// Adds a set of documents by id to a publish set
		/// </summary>
		/// <param name="code">User-defined code that uniqely identifies the channel group.</param>
		/// <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
		/// <param name="itemsToPublish">Mozu.Content.Contracts.AddOrDeletePublishItem ApiType DOCUMENT_HERE </param>
		/// <returns>
		/// object
		/// </returns>
		/// <example>
		/// <code>
		///   var publishsetsummary = new PublishSetSummary();
		///   var object = publishsetsummary.AddPublishSetItems( itemsToPublish,  code,  responseFields);
		/// </code>
		/// </example>
		[Obsolete("This method is obsolete; use the async method instead")]
		public virtual object AddPublishSetItems(List<Mozu.Api.Contracts.Content.AddOrDeletePublishItem> itemsToPublish, string code, string responseFields =  null)
		{
			MozuClient<object> response;
			var client = Mozu.Api.Clients.Content.PublishSetSummaryClient.AddPublishSetItemsClient( itemsToPublish,  code,  responseFields);
			client.WithContext(_apiContext);
			response = client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Adds a set of documents by id to a publish set
		/// </summary>
		/// <param name="code">User-defined code that uniqely identifies the channel group.</param>
		/// <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
		/// <param name="itemsToPublish">Mozu.Content.Contracts.AddOrDeletePublishItem ApiType DOCUMENT_HERE </param>
		/// <returns>
		/// object
		/// </returns>
		/// <example>
		/// <code>
		///   var publishsetsummary = new PublishSetSummary();
		///   var object = await publishsetsummary.AddPublishSetItemsAsync( itemsToPublish,  code,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<object> AddPublishSetItemsAsync(List<Mozu.Api.Contracts.Content.AddOrDeletePublishItem> itemsToPublish, string code, string responseFields =  null)
		{
			MozuClient<object> response;
			var client = Mozu.Api.Clients.Content.PublishSetSummaryClient.AddPublishSetItemsClient( itemsToPublish,  code,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync();
			return await response.ResultAsync();

		}


	}

}


