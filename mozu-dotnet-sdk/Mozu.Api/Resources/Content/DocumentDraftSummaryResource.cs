
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;

namespace Mozu.Api.Resources.Content
{
	/// <summary>
	/// Use the document publishing subresource to manage and publish document drafts in the Content service.
	/// </summary>
	public partial class DocumentDraftSummaryResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		
		public DocumentDraftSummaryResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		public DocumentDraftSummaryResource CloneWithApiContext(Action<IApiContext> contextModification) 
		{
			return new DocumentDraftSummaryResource(_apiContext.CloneWith(contextModification));
		}

				
		/// <summary>
		/// Retrieves a list of the documents currently in draft state, according to any defined filter and sort criteria.
		/// </summary>
		/// <param name="documentLists">List of document lists that contain documents to delete.</param>
		/// <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
		/// <param name="responseFields">Use this field to include those fields which are not included by default.</param>
		/// <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var documentdraftsummary = new DocumentDraftSummary();
		///   var documentDraftSummaryPagedCollection = documentdraftsummary.ListDocumentDraftSummaries( pageSize,  startIndex,  documentLists,  responseFields);
		/// </code>
		/// </example>
		[Obsolete("This method is obsolete; use the async method instead")]
		public virtual Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection ListDocumentDraftSummaries(int? pageSize =  null, int? startIndex =  null, string documentLists =  null, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection> response;
			var client = Mozu.Api.Clients.Content.DocumentDraftSummaryClient.ListDocumentDraftSummariesClient( pageSize,  startIndex,  documentLists,  responseFields);
			client.WithContext(_apiContext);
			response = client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves a list of the documents currently in draft state, according to any defined filter and sort criteria.
		/// </summary>
		/// <param name="documentLists">List of document lists that contain documents to delete.</param>
		/// <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
		/// <param name="responseFields">Use this field to include those fields which are not included by default.</param>
		/// <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var documentdraftsummary = new DocumentDraftSummary();
		///   var documentDraftSummaryPagedCollection = await documentdraftsummary.ListDocumentDraftSummariesAsync( pageSize,  startIndex,  documentLists,  responseFields);
		/// </code>
		/// </example>
		public virtual async Task<Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection> ListDocumentDraftSummariesAsync(int? pageSize =  null, int? startIndex =  null, string documentLists =  null, string responseFields =  null)
		{
			MozuClient<Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection> response;
			var client = Mozu.Api.Clients.Content.DocumentDraftSummaryClient.ListDocumentDraftSummariesClient( pageSize,  startIndex,  documentLists,  responseFields);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync();
			return await response.ResultAsync();

		}

		/// <summary>
		/// Deletes the drafts of the specified documents. Published documents cannot be deleted.
		/// </summary>
		/// <param name="documentLists">List of document lists that contain documents to delete.</param>
		/// <param name="documentIds">Unique identifiers of the documents to delete.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var documentdraftsummary = new DocumentDraftSummary();
		///   documentdraftsummary.DeleteDocumentDrafts( documentIds,  documentLists);
		/// </code>
		/// </example>
		[Obsolete("This method is obsolete; use the async method instead")]
		public virtual void DeleteDocumentDrafts(List<string> documentIds, string documentLists =  null)
		{
			MozuClient response;
			var client = Mozu.Api.Clients.Content.DocumentDraftSummaryClient.DeleteDocumentDraftsClient( documentIds,  documentLists);
			client.WithContext(_apiContext);
			response = client.Execute();

		}

		/// <summary>
		/// Deletes the drafts of the specified documents. Published documents cannot be deleted.
		/// </summary>
		/// <param name="documentLists">List of document lists that contain documents to delete.</param>
		/// <param name="documentIds">Unique identifiers of the documents to delete.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var documentdraftsummary = new DocumentDraftSummary();
		///   await documentdraftsummary.DeleteDocumentDraftsAsync( documentIds,  documentLists);
		/// </code>
		/// </example>
		public virtual async Task DeleteDocumentDraftsAsync(List<string> documentIds, string documentLists =  null)
		{
			MozuClient response;
			var client = Mozu.Api.Clients.Content.DocumentDraftSummaryClient.DeleteDocumentDraftsClient( documentIds,  documentLists);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync();

		}

		/// <summary>
		/// Publish one or more document drafts to live content on the site.
		/// </summary>
		/// <param name="documentLists">List of document lists that contain documents to delete.</param>
		/// <param name="documentIds">Unique identifiers of the documents to delete.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var documentdraftsummary = new DocumentDraftSummary();
		///   documentdraftsummary.PublishDocuments( documentIds,  documentLists);
		/// </code>
		/// </example>
		[Obsolete("This method is obsolete; use the async method instead")]
		public virtual void PublishDocuments(List<string> documentIds, string documentLists =  null)
		{
			MozuClient response;
			var client = Mozu.Api.Clients.Content.DocumentDraftSummaryClient.PublishDocumentsClient( documentIds,  documentLists);
			client.WithContext(_apiContext);
			response = client.Execute();

		}

		/// <summary>
		/// Publish one or more document drafts to live content on the site.
		/// </summary>
		/// <param name="documentLists">List of document lists that contain documents to delete.</param>
		/// <param name="documentIds">Unique identifiers of the documents to delete.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var documentdraftsummary = new DocumentDraftSummary();
		///   await documentdraftsummary.PublishDocumentsAsync( documentIds,  documentLists);
		/// </code>
		/// </example>
		public virtual async Task PublishDocumentsAsync(List<string> documentIds, string documentLists =  null)
		{
			MozuClient response;
			var client = Mozu.Api.Clients.Content.DocumentDraftSummaryClient.PublishDocumentsClient( documentIds,  documentLists);
			client.WithContext(_apiContext);
			response = await client.ExecuteAsync();

		}


	}

}


