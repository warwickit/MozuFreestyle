
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using Mozu.Api.Contracts.Core;
using Mozu.Api.Contracts.Tenant;

namespace Mozu.Api.Contracts.AdminUser
{
		///
		///	Properties of the authentication ticket to be used in user claims with the Mozu API.
		///
		public class TenantAdminUserAuthTicket
		{
			///
			///Alphanumeric string used to authenticate the user in API request headers. The token stores an encrypted list of the application's configured behaviors and authenticates the application.
			///
			public string AccessToken { get; set; }

			///
			///The date and time the user access token expires. If the token will expire, a new token will need to be generated and assigned to the account to continue and restore access to the store, data, and account.
			///
			public DateTime AccessTokenExpiration { get; set; }

			///
			///Collection of tenants for which the user authentication ticket grants access.
			///
			public List<Tenant.Tenant> AvailableTenants { get; set; }

			///
			///Date and time when the entity was created, represented in UTC Date/Time.
			///
			public DateTime CreatedOn { get; set; }

			///
			///Collection of behaviors encrypted in the developer account authentication ticket. Behaviors are granted to users as part of the role assigned for the given developer account.
			///
			public List<int> GrantedBehaviors { get; set; }

			///
			///Alphanumeric string used for access tokens. This token refreshes access for accounts by generating a new developer or application account authentication ticket after an access token expires.
			///
			public string RefreshToken { get; set; }

			///
			///The date and time the developer account or application refresh token expires.
			///
			public DateTime RefreshTokenExpiration { get; set; }

			///
			///Tenant information associated with the user authentication ticket or domain lookup service result.
			///
			public Tenant.Tenant Tenant { get; set; }

			///
			///User information associated with the authentication ticket.
			///
			public UserProfile User { get; set; }

		}

}