
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

using Mozu.Api.Contracts.Core;

namespace Mozu.Api.Contracts.ProductAdmin
{
		///
		///	Name of the discount added and applied to a shopping cart and order for a shopper's purchase. 
		///
		public class Discount
		{
			///
			///The integer amount of the discount. For example, an entry of "10" could represent a discount of $10.00 or a discount of 10%, depending on the type.
			///
			public decimal? Amount { get; set; }

			///
			///The type of discount amount, such as an amount or a percentage.
			///
			public string AmountType { get; set; }

			///
			///Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
			///
			public AuditInfo AuditInfo { get; set; }

			///
			///Signifies that the discount is not referenced and can be hard deleted
			///
			public bool CanBeDeleted { get; set; }

			///
			///List of conditions that must be met for the discount to apply.
			///
			public DiscountCondition Conditions { get; set; }

			///
			///Complex type that contains content for a language specified by LocaleCode.
			///
			public DiscountLocalizedContent Content { get; set; }

			///
			///The number of times this discount has been redeemed.
			///
			public int? CurrentRedemptionCount { get; set; }

			///
			///Determines whether or not a discount applies to a items with a sale price. Applicable on order and line item discounts. For line items, when this is true, the discount will be disqualified. For order level discounts, when true, the discount will not be applied to those items have a sale price.
			///
			public bool? DoesNotApplyToProductsWithSalePrice { get; set; }

			///
			///If true, this discount does not apply to a line item product with a defined sale price. The default is false, which applies the discount to products with and without defined sale prices.
			///
			public bool? DoesNotApplyToSalePrice { get; set; }

			///
			///Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
			///
			public int? Id { get; set; }

			///
			///Maximum impact this discount can apply on a single order. Must be either null or greater than zero.
			///
			public decimal? MaximumDiscountImpactPerOrder { get; set; }

			///
			///Maximum impact this discount can apply on a single line item. Must be either null or greater than zero.
			///
			public decimal? MaximumDiscountImpactPerRedemption { get; set; }

			///
			///Maximum number of redemptions allowed per order. If null, defaults to unlimited.
			///
			public int? MaximumRedemptionsPerOrder { get; set; }

			///
			///The maximum number of times an individual shopper can redeem the discount.
			///
			public int? MaximumUsesPerUser { get; set; }

			///
			///The scope to which the discount applies, which is "Order" for order discounts or "LineItem" for individual product discounts.
			///
			public string Scope { get; set; }

			///
			///The current status of an object. This status is specific to the object including payment (New, Authorized, Captured, Declined, Failed, Voided, Credited, CheckRequested, or RolledBack), discount (Active, Scheduled, or Expired), returns (ReturnAuthorized), tenant, package (Fulfilled or NotFulfilled), application, master and product catalogs, orders (Pending, Submitted, Processing, Pending Review, Closed, or Canceled), and order validation results (Pass, Fail, Error, or Review).
			///
			public string Status { get; set; }

			///
			///Targets represent the object, such as an item to apply discounts (products or orders) or a view field for content. When accessing MZDB APIs for Mongo interactions, targets are the dot notation that links to the source document property. For example, firstitem for the direc level or firstitem.seconditem.thirditem for a deeper property.              
			///
			public DiscountTarget Target { get; set; }

		}

}