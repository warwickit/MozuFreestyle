
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using Mozu.Api.Contracts.Core;

namespace Mozu.Api.Contracts.Core.Extensible
{
		///
		///	Properties of an attribute used to describe customers or orders.
		///
		public class Attribute
		{
			///
			///The administrator name associated with the object/data.
			///
			public string AdminName { get; set; }

			///
			///Merchant-defined code for an extensible attribute. This code may be used to generate an object's fully qualified name, such as for products.
			///
			public string AttributeCode { get; set; }

			///
			///The fully qualified name of the attribute. The attributeDefiniteId may be used to generate this name.
			///
			public string AttributeFQN { get; set; }

			///
			///List of metadata key-value pairs defined for an extensible attribute.
			///
			public List<AttributeMetadataItem> AttributeMetadata { get; set; }

			///
			///Basic audit info about the object, including date, time, and user account. Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
			///
			public AuditInfo AuditInfo { get; set; }

			///
			///Localizable content (such as a name and/or description) for an attribute. The content may be localized when displayed according to the locale code specified by the master catalog. Content can include descriptive text for product extensible attributes, catalog-level descriptions (displayed if isContentOverriden is true), product bundles, and customer account notes.
			///
			public AttributeLocalizedContent Content { get; set; }

			///
			///The data type of the source product property, typically of type Bool, DateTime, Number, or String.
			///
			public string DataType { get; set; }

			///
			///Whether the customer or order attribute appears in Mozu Admin only, or in both Mozu Admin and the website storefront. Possible values are Admin and AdminAndStorefront.
			///
			public string DisplayGroup { get; set; }

			///
			///Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
			///
			public int? Id { get; set; }

			///
			///The type of input selection used to define a value for the attribute, including Yes/No, Date, DateTime, List, TextBox, or TextArea.
			///
			public string InputType { get; set; }

			///
			///Indicates if the object or feature is active. This indicator is used for subscriptions (at the site or tenant level), customer accounts, products and variations.
			///
			public bool? IsActive { get; set; }

			///
			///If true, the attribute can have more than one value.
			///
			public bool? IsMultiValued { get; set; }

			///
			///Flag used to indicate if this attribute definition is read-only. Once an attribute definition is set to read-only this action cannot be undone. 
			///
			public bool IsReadOnly { get; set; }

			///
			///Indicates if the property, attribute, product option, or product extra is required. If true, the object must have a defined value.
			///
			public bool? IsRequired { get; set; }

			///
			///If true, the attribute is visible in its defined display group.
			///
			public bool? IsVisible { get; set; }

			///
			///If applicable, the registered namespace associated with objects, used to generate the fully qualified name. If no namespace is defined, the namespace associated with the tenant is automatically assigned.
			///
			public string Namespace { get; set; }

			///
			///Integer that represents the sequence order of the attribute.
			///
			public int? Order { get; set; }

			///
			///Properties used when validating a value entered for an object, including extensible attributes, products attributes, and database entries.
			///
			public AttributeValidation Validation { get; set; }

			///
			///An attribute value type is either predefined vocabulary by the admin during attribute set up or user-defined with an appropriate type (AdminEntered or ShopperEntered depending on the user). These types are used by products and attributes. The difference between predefined values versus manually entered values is such that the first choice is a set of options to choose from. AdminEntered and ShopperEntered are values that are entered rather than system-supplied and are not stored in the database, but captured during a live commerce operations such as during an order.
			///
			public string ValueType { get; set; }

			///
			///List of valid vocabulary values defined for an attribute.
			///
			public List<AttributeVocabularyValue> VocabularyValues { get; set; }

		}

}