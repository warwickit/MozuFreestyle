
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Newtonsoft.Json.Linq;

using Mozu.Api.Contracts.Core;

namespace Mozu.Api.Contracts.Content
{
		///
		///	The list of document types and related properties that define content used by the content management system (CMS).
		///
		public class DocumentList
		{
			///
			///The type of the document list, containing content for a site. For example, a list type could be web pages.
			///
			public string DocumentListType { get; set; }

			///
			///List of document types associated with this document list.
			///
			public List<string> DocumentTypes { get; set; }

			///
			///If set, documents in this list will only be returned if the date queried for their is within their ActiveDateRange.
			///
			public bool? EnableActiveDateRanges { get; set; }

			///
			///Indicates if the document list and document list type are enabled to publish. If true, publishing of draft documents in this document list/document list type is enabled for the site. If false, all document changes are immediately published in live mode.
			///
			public bool? EnablePublishing { get; set; }

			///
			///The fully qualified name of the document list.
			///
			public string ListFQN { get; set; }

			///
			///Metadata content for entities, used by document lists, document type lists, document type, views, entity lists, and list views.
			///
			public JObject Metadata { get; set; }

			///
			///The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
			///
			public string Name { get; set; }

			///
			///If applicable, the registered namespace associated with objects, used to generate the fully qualified name. If no namespace is defined, the namespace associated with the tenant is automatically assigned.
			///
			public string Namespace { get; set; }

			///
			///The IDÂ of the specific scope for the object. 
			///
			public int? ScopeId { get; set; }

			///
			///The scope at which the object exists, such as "Tenant", "MasterCatalog", or "Site". Scope delineates the level and area of Mozu the object exists within or affects.
			///
			public string ScopeType { get; set; }

			///
			///Indicates the security level for the document content as public, administrator, or owner.
			///
			public string Security { get; set; }

			///
			///Determines if the documentList will support ranges of dates that documents are considered 'active'. This field defaults to false and cannot be updated. If the documentList is based on a documentListType, then this value will be derived from the documentListType.
			///
			public bool? SupportsActiveDateRanges { get; set; }

			///
			///Indicates if modified documents are published automatically or saved to publish at a later time. If true, changed documents in this list can be saved as drafts until they are published to the site. If false, all document changes are immediately published in live mode. System-supplied and read only.
			///
			public bool? SupportsPublishing { get; set; }

			///
			///List description of usages for content within a view and scope.
			///
			public List<string> Usages { get; set; }

			///
			///The view in the site used by associated entities or document lists/list types.
			///
			public List<View> Views { get; set; }

		}

}