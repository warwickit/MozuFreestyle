
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;

namespace Mozu.Api.Clients.Commerce
{
	/// <summary>
	/// Use the Channel Groups resource to manage groups of channels with common information.
	/// </summary>
	public partial class ChannelGroupClient 	{
		
		/// <summary>
		/// Retrieves a list of defined channel groups according to any filter and sort criteria specified in the request.
		/// </summary>
		/// <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
		/// <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
		/// <param name="responseFields">Use this field to include those fields which are not included by default.</param>
		/// <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
		/// <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetChannelGroups( startIndex,  pageSize,  sortBy,  filter,  responseFields);
		///   var channelGroupCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection> GetChannelGroupsClient(int? startIndex =  null, int? pageSize =  null, string sortBy =  null, string filter =  null, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.ChannelGroupUrl.GetChannelGroupsUrl(startIndex, pageSize, sortBy, filter, responseFields);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// Retrieves the details of a defined channel group.
		/// </summary>
		/// <param name="code">User-defined code that uniqely identifies the channel group.</param>
		/// <param name="responseFields">Use this field to include those fields which are not included by default.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetChannelGroup( code,  responseFields);
		///   var channelGroupClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup> GetChannelGroupClient(string code, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.ChannelGroupUrl.GetChannelGroupUrl(code, responseFields);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// Creates a new group of channels with common information.
		/// </summary>
		/// <param name="responseFields">Use this field to include those fields which are not included by default.</param>
		/// <param name="channelGroup">Properties of a group of channels that share common information.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=CreateChannelGroup( channelGroup,  responseFields);
		///   var channelGroupClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup> CreateChannelGroupClient(Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup channelGroup, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.ChannelGroupUrl.CreateChannelGroupUrl(responseFields);
			const string verb = "POST";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup>(channelGroup);
			return mozuClient;

		}

		/// <summary>
		/// Updates one or more properties of a defined channel group.
		/// </summary>
		/// <param name="code">User-defined code that uniqely identifies the channel group.</param>
		/// <param name="responseFields">Use this field to include those fields which are not included by default.</param>
		/// <param name="channelGroup">Properties of a group of channels that share common information.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=UpdateChannelGroup( channelGroup,  code,  responseFields);
		///   var channelGroupClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup> UpdateChannelGroupClient(Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup channelGroup, string code, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.ChannelGroupUrl.UpdateChannelGroupUrl(code, responseFields);
			const string verb = "PUT";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup>(channelGroup);
			return mozuClient;

		}

		/// <summary>
		/// Deletes a defined group of channels, which removes the group association with each channel in the group but does not delete the channel definitions themselves.
		/// </summary>
		/// <param name="code">User-defined code that uniqely identifies the channel group.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=DeleteChannelGroup( code);
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient DeleteChannelGroupClient(string code)
		{
			var url = Mozu.Api.Urls.Commerce.ChannelGroupUrl.DeleteChannelGroupUrl(code);
			const string verb = "DELETE";
			var mozuClient = new MozuClient()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}


	}

}


