
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;
using System.Threading.Tasks;
using Newtonsoft.Json.Linq;

namespace Mozu.Api.Clients.Commerce.Catalog.Admin.Couponsets
{
	/// <summary>
	/// commerce/catalog/admin/couponsets/coupons related resources. DOCUMENT_HERE 
	/// </summary>
	public partial class CouponClient 	{
		
		/// <summary>
		/// couponsets-coupons Get GetCoupon description DOCUMENT_HERE 
		/// </summary>
		/// <param name="couponCode">Code associated with the coupon to remove from the cart.</param>
		/// <param name="couponSetCode"></param>
		/// <param name="includeCounts"></param>
		/// <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.ProductAdmin.Coupon"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetCoupon( couponSetCode,  couponCode,  includeCounts,  responseFields);
		///   var couponClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.ProductAdmin.Coupon> GetCouponClient(string couponSetCode, string couponCode, bool? includeCounts =  null, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.Couponsets.CouponUrl.GetCouponUrl(couponSetCode, couponCode, includeCounts, responseFields);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.ProductAdmin.Coupon>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// couponsets-coupons Get GetCoupons description DOCUMENT_HERE 
		/// </summary>
		/// <param name="couponSetCode"></param>
		/// <param name="filter">A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.</param>
		/// <param name="includeCounts"></param>
		/// <param name="pageSize">The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.</param>
		/// <param name="responseFields">A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.</param>
		/// <param name="sortBy">The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.</param>
		/// <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.ProductAdmin.CouponCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetCoupons( couponSetCode,  startIndex,  pageSize,  sortBy,  filter,  includeCounts,  responseFields);
		///   var couponCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.ProductAdmin.CouponCollection> GetCouponsClient(string couponSetCode, int? startIndex =  null, int? pageSize =  null, string sortBy =  null, string filter =  null, bool? includeCounts =  null, string responseFields =  null)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.Couponsets.CouponUrl.GetCouponsUrl(couponSetCode, startIndex, pageSize, sortBy, filter, includeCounts, responseFields);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.ProductAdmin.CouponCollection>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// couponsets-coupons Post AddCoupons description DOCUMENT_HERE 
		/// </summary>
		/// <param name="couponSetCode"></param>
		/// <param name="coupons">Mozu.ProductAdmin.Contracts.Coupon ApiType DOCUMENT_HERE </param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=AddCoupons( coupons,  couponSetCode);
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient AddCouponsClient(List<Mozu.Api.Contracts.ProductAdmin.Coupon> coupons, string couponSetCode)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.Couponsets.CouponUrl.AddCouponsUrl(couponSetCode);
			const string verb = "POST";
			var mozuClient = new MozuClient()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<List<Mozu.Api.Contracts.ProductAdmin.Coupon>>(coupons);
			return mozuClient;

		}

		/// <summary>
		/// couponsets-coupons Post DeleteCoupons description DOCUMENT_HERE 
		/// </summary>
		/// <param name="couponSetCode"></param>
		/// <param name="couponCodes"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=DeleteCoupons( couponCodes,  couponSetCode);
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient DeleteCouponsClient(List<string> couponCodes, string couponSetCode)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.Couponsets.CouponUrl.DeleteCouponsUrl(couponSetCode);
			const string verb = "POST";
			var mozuClient = new MozuClient()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody(couponCodes);
			return mozuClient;

		}

		/// <summary>
		/// couponsets-coupons Delete DeleteCoupon description DOCUMENT_HERE 
		/// </summary>
		/// <param name="couponCode">Code associated with the coupon to remove from the cart.</param>
		/// <param name="couponSetCode"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=DeleteCoupon( couponSetCode,  couponCode);
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient DeleteCouponClient(string couponSetCode, string couponCode)
		{
			var url = Mozu.Api.Urls.Commerce.Catalog.Admin.Couponsets.CouponUrl.DeleteCouponUrl(couponSetCode, couponCode);
			const string verb = "DELETE";
			var mozuClient = new MozuClient()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}


	}

}


