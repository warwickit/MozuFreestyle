<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mozu.Api</name>
    </assembly>
    <members>
        <member name="T:Mozu.Api.Events.EventHttpHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Events.EventHttpHandler.#ctor(Mozu.Api.Events.IEventServiceFactory)">
            <summary>
            
            </summary>
            <param name="eventServiceFactory"></param>
        </member>
        <member name="T:Mozu.Api.Filters.CapabilityAuthFilter">
            <summary>
            Validate Capability Request from Mozu
            </summary>
        </member>
        <member name="T:Mozu.Api.Contracts.AppDev.AuthTicket">
            
            	Properties of the authentication ticket used to authenticate applications.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AuthTicket.AccessToken">
            
            The token that stores an encrypted list of the application's configured behaviors and authenticates the application.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AuthTicket.AccessTokenExpiration">
            
            Date and time the access token expires. After the access token expires, refresh the authentication ticket using the refresh koken.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AuthTicket.RefreshToken">
            
            The token that refreshes the application's authentication ticket.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AuthTicket.RefreshTokenExpiration">
            
            Date and time the refresh token expires. After the refresh token expires, generate a new authentication ticket.
            
        </member>
        <member name="T:Mozu.Api.MozuClient`1">
            <summary>
            
            </summary>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="T:Mozu.Api.MozuClient`2">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mozu.Api.MozuClient">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mozu.Api.Security.AppAuthenticator">
            <summary>
            This class handles Mozu application authentication.
            </summary>
        </member>
        <member name="M:Mozu.Api.Security.AppAuthenticator.#ctor(Mozu.Api.Contracts.AppDev.AppAuthInfo,System.String,Mozu.Api.Security.RefreshInterval)">
            <summary>
            This contructor does application authentication and setups up the necessary timers to keep the app auth ticket valid.
            </summary>
            <param name="appId">The application version's app id</param>
            <param name="sharedSecret">The application version's shared secret</param>
            <param name="baseAppAuthUrl">The base URL of the Mozu application authentication service</param>
        </member>
        <member name="M:Mozu.Api.Security.AppAuthenticator.AuthenticateApp">
            <summary>
            Do application authentication
            </summary>
        </member>
        <member name="M:Mozu.Api.Security.AppAuthenticator.RefreshAppAuthTicket">
            <summary>
            Refresh the application auth ticket using the refresh token
            </summary>
        </member>
        <member name="M:Mozu.Api.Security.AppAuthenticator.EnsureAuthTicket">
            <summary>
            Ensure that the auth ticket is valid.  If not, then make it so.  Will be used when not using timers to keep the auth ticket alive (i.e. "on demand" mode).
            </summary>
        </member>
        <member name="M:Mozu.Api.Security.AppAuthenticator.AddHeader(System.Net.Http.HttpClient)">
            <summary>
            This method adds the necessary app claims header to a http client to allow authorized calls to Mozu services
            </summary>
            <param name="client">The http client for which to add the header</param>
        </member>
        <member name="P:Mozu.Api.Security.AppAuthenticator.AppAuthTicket">
            <summary>
            The application auth ticket
            </summary>
        </member>
        <member name="P:Mozu.Api.Security.AppAuthenticator.BaseUrl">
            <summary>
            The baseUrl for App Auth.  Once an app auths with this base url, all subsequent MOZU API calls will go to this base url.
            </summary>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Admin.LocationClient">
            <summary>
            Use the Locations resource to manage each physical location associated with a tenant. Locations enable tenants to associate a physical address with product inventory, provide a store finder for in-store pickup, or both. Locations that support inventory can use both direct ship and in-store pickup fulfillment types.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Admin.LocationClient.GetLocationsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of all locations associated with a tenant, according to any filter and sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.LocationCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocations( startIndex,  pageSize,  sortBy,  filter);
              var locationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Admin.LocationClient.GetLocationClient(System.String)">
            <summary>
            Retrieves the details of the location specified in the request by location code.
            </summary>
            <param name="locationCode">The merchant-defined code of the location to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.Location"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocation( locationCode);
              var locationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Admin.LocationClient.AddLocationClient(Mozu.Api.Contracts.Location.Location)">
            <summary>
            Creates a new physical location for the tenant specified in the request header.
            </summary>
            <param name="location">Properties of the location to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.Location"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddLocation( location);
              var locationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Admin.LocationClient.UpdateLocationClient(Mozu.Api.Contracts.Location.Location,System.String)">
            <summary>
            Updates one or more details of a the location specified in the request by location code.
            </summary>
            <param name="locationCode">The merchant-defined code associated with the location to update.</param>
            <param name="location">Properties of the location to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.Location"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateLocation( location,  locationCode);
              var locationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Admin.LocationClient.DeleteLocationClient(System.String)">
             <summary>
             Deletes the location specified in the request.
             </summary>
             <param name="locationCode">The merchant-defined code of the location to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteLocation( locationCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Admin.LocationTypeClient">
            <summary>
            Use the Location Types resource to manage the types of locations your tenant maintains, such as warehouses, physical storefronts, and kiosks.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Admin.LocationTypeClient.GetLocationTypesClient">
            <summary>
            Retrieve a list of all location types defined for the tenant.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.Location.LocationType"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationTypes();
              var locationTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Admin.LocationTypeClient.GetLocationTypeClient(System.String)">
            <summary>
            Retrieves the details of the location type specified in the request.
            </summary>
            <param name="locationTypeCode">The user-defined code that identifies the location type.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.LocationType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationType( locationTypeCode);
              var locationTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Admin.LocationTypeClient.AddLocationTypeClient(Mozu.Api.Contracts.Location.LocationType)">
            <summary>
            Creates a new location type based on the information specified in the request.
            </summary>
            <param name="locationType">Properties of the location type to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.LocationType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddLocationType( locationType);
              var locationTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Admin.LocationTypeClient.UpdateLocationTypeClient(Mozu.Api.Contracts.Location.LocationType,System.String)">
            <summary>
            Updates the name of a defined location type.
            </summary>
            <param name="locationTypeCode">The user-defined code that identifies the location type.</param>
            <param name="locationType">Properties of the location type to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.LocationType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateLocationType( locationType,  locationTypeCode);
              var locationTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Admin.LocationTypeClient.DeleteLocationTypeClient(System.String)">
             <summary>
             Deletes the location type specified in the request.
             </summary>
             <param name="locationTypeCode">User-defined code used to identify the location type.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteLocationType( locationTypeCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.CartClient">
            <summary>
            Use the Carts resource to manage storefront shopping carts as items are added and removed. Each time a shopper's cart is modified, the Carts resource updates the estimated total with any applicable discounts.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.GetCartClient(System.String,System.String)">
            <summary>
            Retrieves the cart specified in the request.
            </summary>
            <param name="cartId">Identifier of the cart to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCart( cartId,  responseFields);
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.GetOrCreateCartClient(System.String)">
            <summary>
            Retrieves a cart's contents for the current shopper. If the shopper does not have an active cart on the site, the service creates one.
            </summary>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrCreateCart( responseFields);
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.GetCartSummaryClient(System.String)">
            <summary>
            Retrieves summary information associated with the cart of the current shopper, including the number of items, the current total, and whether the cart has expired. All anonymous idle carts that do not proceed to checkout expire after 14 days.
            </summary>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCartSummary( responseFields);
              var cartSummaryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.GetUserCartSummaryClient(System.String,System.String)">
            <summary>
            Retrieves summary information associated with the cart of user specified in the request, including the number of items in the cart, the current total, and whether the cart has expired. All anonymous idle carts that do not proceed to checkout expire after 14 days.
            </summary>
            <param name="responseFields"></param>
            <param name="userId">Unique identifier of the user whose cart details you want to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetUserCartSummary( userId,  responseFields);
              var cartSummaryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.GetUserCartClient(System.String,System.String)">
            <summary>
            Retrieves the cart of the user specified in the request.
            </summary>
            <param name="responseFields"></param>
            <param name="userId">Unique identifier of the user whose cart you want to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetUserCart( userId,  responseFields);
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.UpdateCartClient(Mozu.Api.Contracts.CommerceRuntime.Carts.Cart,System.String)">
            <summary>
            Update the current shopper's cart.
            </summary>
            <param name="responseFields"></param>
            <param name="cart">All of the properties of the cart to update. The product code is required.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateCart( cart,  responseFields);
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.DeleteCartClient(System.String)">
             <summary>
             Deletes the cart specified in the request.
             </summary>
             <param name="cartId">Identifier of the cart to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteCart( cartId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.CartClient.DeleteCurrentCartClient">
             <summary>
             Deletes the cart of the currently active shopper.
             </summary>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteCurrentCart();
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Carts.AppliedDiscountClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.AppliedDiscountClient.ApplyCouponClient(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="cartId"></param>
            <param name="couponCode"></param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ApplyCoupon( cartId,  couponCode,  responseFields);
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.AppliedDiscountClient.RemoveCouponsClient(System.String)">
            <summary>
            
            </summary>
            <param name="cartId"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveCoupons( cartId);
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.AppliedDiscountClient.RemoveCouponClient(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="cartId"></param>
            <param name="couponCode"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveCoupon( cartId,  couponCode);
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Carts.CartItemClient">
            <summary>
            Use the Cart Items subresource to manage a collection of items in an active shopping cart.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.GetCartItemClient(System.String,System.String)">
            <summary>
            Retrieves a particular cart item by providing the cart item ID.
            </summary>
            <param name="cartItemId">Identifier of the cart item to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCartItem( cartItemId,  responseFields);
              var cartItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.GetCartItemsClient(System.String)">
            <summary>
            Retrieves a list of cart items including the total number of items in the cart.
            </summary>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItemCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCartItems( responseFields);
              var cartItemCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.AddItemToCartClient(Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem,System.String)">
            <summary>
            Adds a product to the current shopper's cart.
            </summary>
            <param name="responseFields"></param>
            <param name="cartItem">All properties of the new cart item. The product code is required.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddItemToCart( cartItem,  responseFields);
              var cartItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.UpdateCartItemQuantityClient(System.String,System.Int32,System.String)">
            <summary>
            Update the quantity of an individual cart item in the cart of the current shopper.
            </summary>
            <param name="cartItemId">Identifier of the cart item to update quantity.</param>
            <param name="quantity">The number of cart items in the shopper's active cart.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateCartItemQuantity( cartItemId,  quantity,  responseFields);
              var cartItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.UpdateCartItemClient(Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem,System.String,System.String)">
            <summary>
            Update the product or product quantity of an item in the current shopper's cart.
            </summary>
            <param name="cartItemId">Identifier of the cart item to update.</param>
            <param name="responseFields"></param>
            <param name="cartItem">The properties of the cart item to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateCartItem( cartItem,  cartItemId,  responseFields);
              var cartItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.RemoveAllCartItemsClient">
            <summary>
            Removes all items in the current shopper's active cart.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveAllCartItems();
              var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.CartItemClient.DeleteCartItemClient(System.String)">
             <summary>
             Deletes a specific cart item by providing the cart item ID.
             </summary>
             <param name="cartItemId">Identifier of the cart item to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteCartItem( cartItemId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Carts.ChangeMessageClient">
            <summary>
            Use the Cart Messages resource to retrieve messages for live carts that the system logs when a product's price or inventory level changes.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.ChangeMessageClient.GetMessagesClient(System.String)">
            <summary>
            Retrieves the messages associated with the current shopper's cart.
            </summary>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartChangeMessageCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetMessages( responseFields);
              var cartChangeMessageCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.ChangeMessageClient.RemoveAllMessagesClient">
             <summary>
             Deletes all messages associated with the cart of the current shopper.
             </summary>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=RemoveAllMessages();
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Carts.ChangeMessageClient.RemoveMessageClient(System.String)">
             <summary>
             Removes a single message associated with the cart of the current shopper.
             </summary>
             <param name="messageId">Identifier of the message to remove from the cart.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=RemoveMessage( messageId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.AttributeClient">
            <summary>
            Use the Attribute Definition resource to manage the properties, options, and extras that uniquely describe products of a specific type. Attributes can be associated with a product type, assigned values by a client or shopper, and added as faceted search filters for a product category. Options are product attributes that describe unique configurations made by the shopper, such as size or color, and generate a new product variation (or unique SKU). Properties are product attributes that describe aspects of the product that do not represent an option configurable by the shopper, such as screen resolution or brand. Extras are product attributes that describe add-on configurations made by the shopper that do not represent a product variation, such as a monogram.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.AttributeClient.GetAttributesClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a paged list of attributes according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributes( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var attributeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.AttributeClient.GetAttributeClient(System.String,System.String)">
            <summary>
            Retrieves the details of the specified product attribute.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttribute( attributeFQN,  responseFields);
              var attributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.AttributeClient.AddAttributeClient(Mozu.Api.Contracts.ProductAdmin.Attribute,System.String)">
            <summary>
            Creates a new attribute to describe one aspect of a product such as color or size, based on its defined product type. The attribute name, attribute type, input type, and data type are required.
            </summary>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attribute">Properties of the new product attribute to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAttribute( attribute,  responseFields);
              var attributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.AttributeClient.UpdateAttributeClient(Mozu.Api.Contracts.ProductAdmin.Attribute,System.String,System.String)">
            <summary>
            Updates an existing attribute with attribute properties to set.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attribute">Any properties of the attribute that to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAttribute( attribute,  attributeFQN,  responseFields);
              var attributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.AttributeClient.DeleteAttributeClient(System.String)">
             <summary>
             Deletes a defined product attribute. You cannot delete an attribute assigned a value for a product.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAttribute( attributeFQN);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentClient.GetAttributeLocalizedContentsClient(System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeLocalizedContents( attributeFQN);
              var attributeLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentClient.GetAttributeLocalizedContentClient(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeLocalizedContent( attributeFQN,  localeCode,  responseFields);
              var attributeLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentClient.AddLocalizedContentClient(Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddLocalizedContent( localizedContent,  attributeFQN,  responseFields);
              var attributeLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentClient.UpdateLocalizedContentsClient(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent},System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateLocalizedContents( localizedContent,  attributeFQN);
              var attributeLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentClient.UpdateLocalizedContentClient(Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateLocalizedContent( localizedContent,  attributeFQN,  localeCode,  responseFields);
              var attributeLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentClient.DeleteLocalizedContentClient(System.String,System.String)">
             <summary>
             
             </summary>
             <param name="attributeFQN"></param>
             <param name="localeCode"></param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteLocalizedContent( attributeFQN,  localeCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleClient">
            <summary>
            Type rules are subresources of product attributes which could be specifications that can be shared across products in a store or assigned to specific products. Attribute type rules provide definitions of how attribute types will appear on the user interface.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleClient.GetAttributeTypeRulesClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of attribute type rules according to optional filter criteria and sort options. Attribute type rules help drive the behavior of attributes on a storefront page.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeTypeRules( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var attributeTypeRuleCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient">
            <summary>
            Vocabulary values are predefined for an attribute.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.GetAttributeVocabularyValuesClient(System.String)">
            <summary>
            Retrieves a list of vocabulary values defined for the attribute specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeVocabularyValues( attributeFQN);
              var attributeVocabularyValueClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.GetAttributeVocabularyValueLocalizedContentsClient(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="value"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeVocabularyValueLocalizedContents( attributeFQN,  value);
              var attributeVocabularyValueLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.GetAttributeVocabularyValueLocalizedContentClient(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeVocabularyValueLocalizedContent( attributeFQN,  value,  localeCode,  responseFields);
              var attributeVocabularyValueLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.GetAttributeVocabularyValueClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a vocabulary value defined for an attribute by providing the attribute's fully qualified name and the value to retrieve.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields"></param>
            <param name="value">The actual unique value of the attribute vocabulary to retrieve. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeVocabularyValue( attributeFQN,  value,  responseFields);
              var attributeVocabularyValueClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.AddAttributeVocabularyValueLocalizedContentClient(Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAttributeVocabularyValueLocalizedContent( localizedContent,  attributeFQN,  value,  responseFields);
              var attributeVocabularyValueLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.AddAttributeVocabularyValueClient(Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue,System.String,System.String)">
            <summary>
            Creates a vocabulary value for a defined product attribute.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeVocabularyValue">The predefined vocabulary value to add to the attribute content.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAttributeVocabularyValue( attributeVocabularyValue,  attributeFQN,  responseFields);
              var attributeVocabularyValueClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.UpdateAttributeVocabularyValuesClient(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue},System.String)">
            <summary>
            Update existing vocabulary values for an attribute.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="vocabularyValues">The actual vocabulary values for the attribute being updated.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAttributeVocabularyValues( vocabularyValues,  attributeFQN);
              var attributeVocabularyValueClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.UpdateAttributeVocabularyValueLocalizedContentsClient(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent},System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="value"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAttributeVocabularyValueLocalizedContents( localizedContent,  attributeFQN,  value);
              var attributeVocabularyValueLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.UpdateAttributeVocabularyValueLocalizedContentClient(Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAttributeVocabularyValueLocalizedContent( localizedContent,  attributeFQN,  value,  localeCode,  responseFields);
              var attributeVocabularyValueLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.UpdateAttributeVocabularyValueClient(Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue,System.String,System.String,System.String)">
            <summary>
            Updates existing attribute vocabulary values.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields"></param>
            <param name="value">The actual unique value of the attribute vocabulary value to update. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeVocabularyValue">The predefined vocabulary value to add to the attribute content to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAttributeVocabularyValue( attributeVocabularyValue,  attributeFQN,  value,  responseFields);
              var attributeVocabularyValueClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.DeleteAttributeVocabularyValueClient(System.String,System.String)">
             <summary>
             Deletes an attribute's vocabulary value.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="value">The actual unique value of the attribute vocabulary to delete. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.</param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAttributeVocabularyValue( attributeFQN,  value);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueClient.DeleteAttributeVocabularyValueLocalizedContentClient(System.String,System.String,System.String)">
             <summary>
             
             </summary>
             <param name="attributeFQN"></param>
             <param name="localeCode"></param>
             <param name="value"></param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAttributeVocabularyValueLocalizedContent( attributeFQN,  value,  localeCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.ProductTypeClient">
            <summary>
            Use the Product Types resource to manage the types for your product catalog. Product types act as configuration templates, which store a set of attributes common to all products associated with that type. Unlike categories, products can only be associated with a single product type.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.ProductTypeClient.GetProductTypesClient(Mozu.Api.DataViewMode,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of product types according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product type search results by any of its properties. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=Name+cont+shoes"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductTypes(dataViewMode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var productTypeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.ProductTypeClient.GetProductTypeClient(Mozu.Api.DataViewMode,System.Int32,System.String)">
            <summary>
            Retrieves the details of the product type specified in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type to retrieve.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductType(dataViewMode,  productTypeId,  responseFields);
              var productTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.ProductTypeClient.AddProductTypeClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductType,System.String)">
            <summary>
            Creates a new product type based on the information supplied in the request.
            </summary>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productType">Properties of the product type to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddProductType(dataViewMode,  productType,  responseFields);
              var productTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.ProductTypeClient.UpdateProductTypeClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductType,System.Int32,System.String)">
            <summary>
            Updates one or more properties of a product type.
            </summary>
            <param name="productTypeId">Identifier of the product type to update.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productType">The details of the product type to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductType(dataViewMode,  productType,  productTypeId,  responseFields);
              var productTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.ProductTypeClient.DeleteProductTypeClient(Mozu.Api.DataViewMode,System.Int32)">
             <summary>
             Deletes the product type by providing the product type ID.
             </summary>
             <param name="productTypeId">Identifier of the product type to delete.</param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProductType(dataViewMode,  productTypeId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient">
            <summary>
            Use the Extras subresource to define how a product attribute classified as an "extra" is used for a specific product type. Product attribute defintions are unique for each associated product type.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient.GetExtrasClient(Mozu.Api.DataViewMode,System.Int32)">
            <summary>
            Retrieves a list of extra attributes defined for the specified product type.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetExtras(dataViewMode,  productTypeId);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient.GetExtraClient(Mozu.Api.DataViewMode,System.Int32,System.String,System.String)">
            <summary>
            Retrieves the details of an extra attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type whose extra is being retrieved.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetExtra(dataViewMode,  productTypeId,  attributeFQN,  responseFields);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient.AddExtraClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String)">
            <summary>
            Assigns a defined extra attribute to the product type based on the information supplied in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">The properties of the extra attribute definition for this product type assignment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddExtra(dataViewMode,  attributeInProductType,  productTypeId,  responseFields);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient.UpdateExtraClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String,System.String)">
            <summary>
            Update the definition of an extra attribute for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">The properties of the extra attribute definition to update for the product type.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateExtra(dataViewMode,  attributeInProductType,  productTypeId,  attributeFQN,  responseFields);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraClient.DeleteExtraClient(Mozu.Api.DataViewMode,System.Int32,System.String)">
             <summary>
             Removes an extra attribute definition from the specified product type.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="productTypeId">Identifier of the product type.</param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteExtra(dataViewMode,  productTypeId,  attributeFQN);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionClient">
            <summary>
            Use the Options subresource to define how an option attribute is used for a specific product type. Product attribute definitions are unique for each associated product type.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionClient.GetOptionsClient(Mozu.Api.DataViewMode,System.Int32)">
            <summary>
            Retrieves a list of option product attributes defined for the specified product type.
            </summary>
            <param name="productTypeId">Identifier of the product type to retrieve.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetOptions(dataViewMode,  productTypeId);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionClient.GetOptionClient(Mozu.Api.DataViewMode,System.Int32,System.String,System.String)">
            <summary>
            Retrieves the details of an option attribute defined for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">The identifier of the product type.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOption(dataViewMode,  productTypeId,  attributeFQN,  responseFields);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionClient.AddOptionClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String)">
            <summary>
            Assigns an option attribute to the product type based on the information supplied in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of the option attribute to define for the specified product type.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddOption(dataViewMode,  attributeInProductType,  productTypeId,  responseFields);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionClient.UpdateOptionClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String,System.String)">
            <summary>
            Updates an option attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of the option product attribute to define for the specified product type.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOption(dataViewMode,  attributeInProductType,  productTypeId,  attributeFQN,  responseFields);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionClient.DeleteOptionClient(Mozu.Api.DataViewMode,System.Int32,System.String)">
             <summary>
             Removes an option attribute definition for the specified product type.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="productTypeId">Identifier of the product type.</param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteOption(dataViewMode,  productTypeId,  attributeFQN);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyClient">
            <summary>
            Use the Properties subresource to define how property product attributes are used for a specific product type. Product attribute definitions are unique for each associated product type.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyClient.GetPropertiesClient(Mozu.Api.DataViewMode,System.Int32)">
            <summary>
            Retrieves a list of product property attributes defined for a product type.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetProperties(dataViewMode,  productTypeId);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyClient.GetPropertyClient(Mozu.Api.DataViewMode,System.Int32,System.String,System.String)">
            <summary>
            Retrieves a product property attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProperty(dataViewMode,  productTypeId,  attributeFQN,  responseFields);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyClient.AddPropertyClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String)">
            <summary>
            Assigns a property attribute to the specified product type, according to the information defined in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of the property attribute to define for the specified product type.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddProperty(dataViewMode,  attributeInProductType,  productTypeId,  responseFields);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyClient.UpdatePropertyClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String,System.String)">
            <summary>
            Updates the definition of a property attribute for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of the property attribute to define for the product type.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProperty(dataViewMode,  attributeInProductType,  productTypeId,  attributeFQN,  responseFields);
              var attributeInProductTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyClient.DeletePropertyClient(Mozu.Api.DataViewMode,System.Int32,System.String)">
             <summary>
             Removes a property attribute previously defined for the specified product type.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="productTypeId">Identifier of the product type.</param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProperty(dataViewMode,  productTypeId,  attributeFQN);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationClient">
            <summary>
            Use the variations resource to preview possible product variations for a specific product type based on the option attributes defined for the product type, such as size or color.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationClient.GenerateProductVariationsClient(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductOption},System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Generates the variations possible for a product associated with the product type based on the option values supplied in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode"></param>
            <param name="productTypeId">Unique identifier of the product type.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productOptionsIn">The product option attributes configured for this product type.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GenerateProductVariations( productOptionsIn,  productTypeId,  productCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var productVariationPagedCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient">
            <summary>
            Use the Categories resource to organize products and control where they appear on the storefront. Create and maintain a hierarchy of categories and subcategories where the site will store properties.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.GetCategoriesClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of categories according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product category search results by any of its properties, including its position in the category hierarchy. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCategories( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var categoryPagedCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.GetChildCategoriesClient(System.Int32,System.String)">
            <summary>
            Retrieves the list of subcategories within a category.
            </summary>
            <param name="categoryId">Unique identifier of the category for which to retrieve subcategories.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.CategoryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetChildCategories( categoryId,  responseFields);
              var categoryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.GetCategoryClient(System.Int32,System.String)">
            <summary>
            Retrieves the details of a single category.
            </summary>
            <param name="categoryId">Unique identifier of the category to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCategory( categoryId,  responseFields);
              var categoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.AddCategoryClient(Mozu.Api.Contracts.ProductAdmin.Category,System.Nullable{System.Boolean},System.String)">
            <summary>
            Adds a new category to the site's category hierarchy. Specify a ParentCategoryID to determine where to place the category in the hierarchy. If no ParentCategoryID is specified, the new category is a top-level category.
            </summary>
            <param name="incrementSequence"></param>
            <param name="responseFields"></param>
            <param name="category">Properties of the new category to create. You must specify a name and parent category if you want to create it as a subcategory.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddCategory( category,  incrementSequence,  responseFields);
              var categoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.UpdateCategoryClient(Mozu.Api.Contracts.ProductAdmin.Category,System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Update the properties of a defined category or move it to another location in the category hierarchy. Because this operation replaces the defined resource,include all the information to maintain for the category in the request.
            </summary>
            <param name="cascadeVisibility">If true, when changing the display option for the category, change it for all subcategories also. Default: False.</param>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="responseFields"></param>
            <param name="category">Properties of the category to modify.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateCategory( category,  categoryId,  cascadeVisibility,  responseFields);
              var categoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.CategoryClient.DeleteCategoryByIdClient(System.Int32,System.Nullable{System.Boolean})">
             <summary>
             Deletes the category specified by its category ID.
             </summary>
             <param name="cascadeDelete">If true, also delete all subcategories associated with the specified category.</param>
             <param name="categoryId">Unique identifier of the category to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteCategoryById( categoryId,  cascadeDelete);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient">
            <summary>
            Define and manage discounts to apply to products, product categories, or orders. The discounts can be a specified amount off the price, percentage off the price, or for free shipping. Create a coupon code that shoppers can use to redeem the discount.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GetDiscountsClient(Mozu.Api.DataViewMode,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of discounts according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDiscounts(dataViewMode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var discountCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GetDiscountContentClient(Mozu.Api.DataViewMode,System.Int32,System.String)">
            <summary>
            Retrieves the localized content specified for the specified discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDiscountContent(dataViewMode,  discountId,  responseFields);
              var discountLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GetDiscountClient(Mozu.Api.DataViewMode,System.Int32,System.String)">
            <summary>
            Retrieves the details of a single discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDiscount(dataViewMode,  discountId,  responseFields);
              var discountClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GenerateRandomCouponClient(System.String)">
            <summary>
            Generates a random code for a coupon.
            </summary>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{string}
            </returns>
            <example>
            <code>
              var mozuClient=GenerateRandomCoupon( responseFields);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.CreateDiscountClient(Mozu.Api.Contracts.ProductAdmin.Discount,System.String)">
            <summary>
            Creates a new discount or coupon to apply to a product, category, order, or shipping.
            </summary>
            <param name="responseFields"></param>
            <param name="discount">Properties of the discount to create. You must specify the discount name, amount type, start date, and target.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateDiscount( discount,  responseFields);
              var discountClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.UpdateDiscountContentClient(Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent,System.Int32,System.String)">
            <summary>
            Updates the localizable content for the specified discount or rename the discount without modifying its other properties.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <param name="responseFields"></param>
            <param name="content">The discount content to update, including the discount name.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDiscountContent( content,  discountId,  responseFields);
              var discountLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.UpdateDiscountClient(Mozu.Api.Contracts.ProductAdmin.Discount,System.Int32,System.String)">
            <summary>
            Updates one or more properties of a defined discount.
            </summary>
            <param name="discountId">Unique identifier of the discount to update.</param>
            <param name="responseFields"></param>
            <param name="discount">Properties of the discount to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDiscount( discount,  discountId,  responseFields);
              var discountClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.DeleteDiscountClient(System.Int32)">
             <summary>
             Deletes a discount specified by its discount ID.
             </summary>
             <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDiscount( discountId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Discounts.DiscountTargetClient">
            <summary>
            Retrieves and modifies the products, categories, and shipping methods eligible for discounts in the form of a fixed dollar amount, percentage off a product price, or free shipping.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Discounts.DiscountTargetClient.GetDiscountTargetClient(Mozu.Api.DataViewMode,System.Int32,System.String)">
            <summary>
            Retrieves the discount target, that is which products, categories, or shipping methods are eligible for the discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountTarget"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDiscountTarget(dataViewMode,  discountId,  responseFields);
              var discountTargetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Discounts.DiscountTargetClient.UpdateDiscountTargetClient(Mozu.Api.Contracts.ProductAdmin.DiscountTarget,System.Int32,System.String)">
            <summary>
            Modifies properties of the discount target, for example, the dollar amount, or precentage off the price.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <param name="responseFields"></param>
            <param name="discountTarget">Properties of the discount target to modify. Required properties: Target.Type. Any unspecified properties are set to null and boolean variables to false.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountTarget"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDiscountTarget( discountTarget,  discountId,  responseFields);
              var discountTargetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient">
            <summary>
            Use the Facets resource to manage the facets shoppers use to filter product display results on a storefront. Facets can include categories, product attributes, or prices, and use either a range of values or discrete values.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.GetFacetClient(System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a facet specified by its unique identifier and displays its properties.
            </summary>
            <param name="facetId">Unique identifier of the facet to retrieve.</param>
            <param name="responseFields"></param>
            <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetFacet( facetId,  validate,  responseFields);
              var facetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.GetFacetCategoryListClient(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a list of the facets defined for the specified category.
            </summary>
            <param name="categoryId">Unique identifier of the category associated with the facets to retrieve.</param>
            <param name="includeAvailable">If true, returns a list of the attributes and categories associated with a product type that have not been defined as a facet for the category.</param>
            <param name="responseFields"></param>
            <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.FacetSet"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetFacetCategoryList( categoryId,  includeAvailable,  validate,  responseFields);
              var facetSetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.AddFacetClient(Mozu.Api.Contracts.ProductAdmin.Facet,System.String)">
            <summary>
            Creates a new category, price, or attribute facet. Define the category or attribute source to use for the facet values.
            </summary>
            <param name="responseFields"></param>
            <param name="facet">Properties of the new facet to create. You must specify the source, type, and category.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddFacet( facet,  responseFields);
              var facetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.UpdateFacetClient(Mozu.Api.Contracts.ProductAdmin.Facet,System.Int32,System.String)">
            <summary>
            Modifies one or more properties of a defined facet.
            </summary>
            <param name="facetId">Unique identifier of the facet to modify.</param>
            <param name="responseFields"></param>
            <param name="facet">Properties of the defined facet to modify.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateFacet( facet,  facetId,  responseFields);
              var facetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.DeleteFacetByIdClient(System.Int32)">
             <summary>
             Deletes the facet specified by its unique identifier.
             </summary>
             <param name="facetId">Unique identifier of the facet to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteFacetById( facetId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.LocationInventoryClient">
            <summary>
            Use the Location Inventory resource to manage the level of active product inventory maintained at each defined location, at the location level.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.LocationInventoryClient.GetLocationInventoryClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a product's active inventory at the location specified in the request.
            </summary>
            <param name="locationCode">User-defined code that uniquely identifies the location.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationInventory( locationCode,  productCode,  responseFields);
              var locationInventoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.LocationInventoryClient.GetLocationInventoriesClient(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of all product inventory definitions for the location code specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="locationCode">User-defined code that uniquely identifies the location.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationInventories( locationCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var locationInventoryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.LocationInventoryClient.AddLocationInventoryClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.LocationInventory},System.String,System.Nullable{System.Boolean})">
            <summary>
            Creates an array of product inventory definitions for the location specified in the request. When adding a new inventory definition, you must specify the productCode and stockOnHand value in each array you define. All other properties are system-supplied and read only.
            </summary>
            <param name="locationCode">User-defined code that uniquely identifies the location.</param>
            <param name="performUpserts"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="locationInventoryList">Array list of product inventory definitions for all associated locations. For each location inventory in the list, define the productCode and stockOnHand values.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=AddLocationInventory(dataViewMode,  locationInventoryList,  locationCode,  performUpserts);
              var locationInventoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.LocationInventoryClient.UpdateLocationInventoryClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.LocationInventoryAdjustment},System.String)">
            <summary>
            Updates the active stock on hand inventory of products for the location code specified in the request.
            </summary>
            <param name="locationCode">User-defined code that uniquely identifies the location.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="locationInventoryAdjustments">Properties of the inventory adjustments to perform for the specified location.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateLocationInventory(dataViewMode,  locationInventoryAdjustments,  locationCode);
              var locationInventoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.LocationInventoryClient.DeleteLocationInventoryClient(Mozu.Api.DataViewMode,System.String,System.String)">
             <summary>
             Deletes the product code inventory definition for the location specified in the request.
             </summary>
             <param name="locationCode">User-defined code that uniquely identifies the location.</param>
             <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteLocationInventory(dataViewMode,  locationCode,  productCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.MasterCatalogClient">
            <summary>
            Use the Master Catalog resource to view details of the master catalogs associated with a tenant and to manage the product publishing mode for each master catalog.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.MasterCatalogClient.GetMasterCatalogsClient(System.String)">
            <summary>
            Retrieve the details of all master catalog associated with a tenant.
            </summary>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.MasterCatalogCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetMasterCatalogs( responseFields);
              var masterCatalogCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.MasterCatalogClient.GetMasterCatalogClient(System.Int32,System.String)">
            <summary>
            Retrieve the details of the master catalog specified in the request.
            </summary>
            <param name="masterCatalogId">The unique identifier of the master catalog associated with the entity.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.MasterCatalog"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetMasterCatalog( masterCatalogId,  responseFields);
              var masterCatalogClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.MasterCatalogClient.UpdateMasterCatalogClient(Mozu.Api.Contracts.ProductAdmin.MasterCatalog,System.Int32,System.String)">
            <summary>
            Updates the product publishing mode for the master catalog specified in the request.
            </summary>
            <param name="masterCatalogId"></param>
            <param name="responseFields"></param>
            <param name="masterCatalog">Properties of the master catalog to update, which consists of the product publishing mode. Possible values are "Pending" which saves product updates in draft mode until they are published, and "Live" which publishes all product changes immediately.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.MasterCatalog"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateMasterCatalog( masterCatalog,  masterCatalogId,  responseFields);
              var masterCatalogClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient">
            <summary>
            Use the Product Administration resource to create new product definitions in the master catalog and determine which catalogs will feature products. You can also assign attribute values for defined products, manage product-level location inventory, and configure the variations of a product.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.GetProductsClient(Mozu.Api.DataViewMode,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a list of products according to any specified facets, filter criteria, and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="noCount">If true, the operation does not return the TotalCount number of results.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of product search terms to use in the query when searching across product code and product name. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProducts(dataViewMode,  startIndex,  pageSize,  sortBy,  filter,  q,  qLimit,  noCount,  responseFields);
              var productCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.GetProductInCatalogsClient(Mozu.Api.DataViewMode,System.String)">
            <summary>
            Retrieves a product that is associated with one or more specific catalogs.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductInCatalogs(dataViewMode,  productCode);
              var productInCatalogInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.GetProductInCatalogClient(Mozu.Api.DataViewMode,System.String,System.Int32,System.String)">
            <summary>
            Retrieves the details of a product associated with a specific catalog.
            </summary>
            <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductInCatalog(dataViewMode,  productCode,  catalogId,  responseFields);
              var productInCatalogInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.GetProductClient(Mozu.Api.DataViewMode,System.String,System.String)">
            <summary>
            Retrieves the details of a product definition.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProduct(dataViewMode,  productCode,  responseFields);
              var productClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.AddProductClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.Product,System.String)">
            <summary>
            Creates a new product definition in the specified master catalog.
            </summary>
            <param name="responseFields"></param>
            <param name="product">Properties of the new product. You must supply values for the product code, product name, and price.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddProduct(dataViewMode,  product,  responseFields);
              var productClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.AddProductInCatalogClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo,System.String,System.String)">
            <summary>
            Associates a new product defined in the master catalog with a specific catalog.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="productInCatalogInfoIn">Properties of the product to define for the specific catalog association.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddProductInCatalog(dataViewMode,  productInCatalogInfoIn,  productCode,  responseFields);
              var productInCatalogInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.UpdateProductInCatalogsClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo},System.String)">
            <summary>
            Updates the properties of a product specific to each catalog associated with the product.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productInCatalogsIn">Properties of the product to update for each associated catalog.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductInCatalogs(dataViewMode,  productInCatalogsIn,  productCode);
              var productInCatalogInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.UpdateProductInCatalogClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo,System.String,System.Int32,System.String)">
            <summary>
            Updates one or more properties of a product associated with a specific catalog.
            </summary>
            <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="productInCatalogInfoIn">Properties of the product associated with the catalog specified in the request.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductInCatalog(dataViewMode,  productInCatalogInfoIn,  productCode,  catalogId,  responseFields);
              var productInCatalogInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.UpdateProductClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.Product,System.String,System.String)">
            <summary>
            Updates one or more properties of a product definition in a master catalog.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="product">Properties of the product definition to update in the master catalog.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProduct(dataViewMode,  product,  productCode,  responseFields);
              var productClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.DeleteProductClient(Mozu.Api.DataViewMode,System.String)">
             <summary>
             Deletes the specified product from a master catalog.
             </summary>
             <param name="productCode"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProduct(dataViewMode,  productCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductClient.DeleteProductInCatalogClient(Mozu.Api.DataViewMode,System.String,System.Int32)">
             <summary>
             Removes the product association defined for a specific catalog.
             </summary>
             <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
             <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProductInCatalog(dataViewMode,  productCode,  catalogId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient">
            <summary>
            Temporarily hold a product from inventory while a shopper is filling out payment information. Create a product reservation when a shopper proceeds to check out and then release the reservation when the order process is complete.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient.GetProductReservationsClient(Mozu.Api.DataViewMode,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of product reservations according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductReservations(dataViewMode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var productReservationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient.GetProductReservationClient(Mozu.Api.DataViewMode,System.Int32,System.String)">
            <summary>
            Retrieves the details of a product reservation.
            </summary>
            <param name="productReservationId">Unique identifier of the product reservation.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductReservation(dataViewMode,  productReservationId,  responseFields);
              var productReservationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient.AddProductReservationsClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductReservation},System.Nullable{System.Boolean})">
            <summary>
            Creates a new product reservation for a product. This action places a hold on the product inventory for the quantity specified during the ordering process.
            </summary>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productReservations">Details of the product reservations to add.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=AddProductReservations(dataViewMode,  productReservations,  skipInventoryCheck);
              var productReservationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient.CommitReservationsClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductReservation})">
             <summary>
             Commits a product reservation to decrement the product's inventory by the quantity specified then release the reservation once the order process completed successfully.
             </summary>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <param name="productReservations">List of unique identifiers of the reservations to commit.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=CommitReservations(dataViewMode,  productReservations);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient.UpdateProductReservationsClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductReservation},System.Nullable{System.Boolean})">
            <summary>
            Updates an existing product reservation for a product.
            </summary>
            <param name="skipInventoryCheck">If true, skip the inventory validation process when updating this product reservation.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productReservations">Properties of the product reservations to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductReservations(dataViewMode,  productReservations,  skipInventoryCheck);
              var productReservationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.ProductReservationClient.DeleteProductReservationClient(Mozu.Api.DataViewMode,System.Int32)">
             <summary>
             Deletes a product reservation. For example, delete a reservation when an order is not processed to return the product quantity back to inventory.
             </summary>
             <param name="productReservationId">Unique identifier of the reservation.</param>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProductReservation(dataViewMode,  productReservationId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.LocationInventoryClient">
            <summary>
            Use the Product Location Inventory resource to manage the levels of active product inventory to maintain across defined locations at the product level.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.LocationInventoryClient.GetLocationInventoriesClient(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves all locations for which a product has inventory defined and displays the inventory definition properties of each location.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationInventories( productCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var locationInventoryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.LocationInventoryClient.GetLocationInventoryClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of the inventory of the product in the location specified in the request.
            </summary>
            <param name="locationCode">User-defined code that identifies the location.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationInventory( productCode,  locationCode,  responseFields);
              var locationInventoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.LocationInventoryClient.AddLocationInventoryClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.LocationInventory},System.String,System.Nullable{System.Boolean})">
            <summary>
            Creates a new location inventory definition for the product code specified in the request.
            </summary>
            <param name="performUpserts"></param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="locationInventoryList">Array list of the location inventory definitions associated with the product code specified in the request. For each location, you must define the locationCode value and the stockOnHand value. All other properties in the array are system-supplied and read only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=AddLocationInventory(dataViewMode,  locationInventoryList,  productCode,  performUpserts);
              var locationInventoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.LocationInventoryClient.UpdateLocationInventoryClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.LocationInventoryAdjustment},System.String)">
            <summary>
            Updates the current level of stock at each location associated with the product code specified in the request.
            </summary>
            <param name="productCode">The product code of the product for which to update active stock on hand inventory at a specified location.</param>
            <param name="locationInventoryAdjustments">Properties of the inventory adjustments to perform for the specified location.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateLocationInventory(dataViewMode,  locationInventoryAdjustments,  productCode);
              var locationInventoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.LocationInventoryClient.DeleteLocationInventoryClient(Mozu.Api.DataViewMode,System.String,System.String)">
             <summary>
             Deletes the location inventory definition for the product code specified in the request.
             </summary>
             <param name="locationCode">The code that identifies the location for which to delete product inventory.</param>
             <param name="productCode">The product code for which to delete a location's inventory.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteLocationInventory(dataViewMode,  productCode,  locationCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient">
            <summary>
            Use the Extras resource to configure an extra product attribute for products associated with the product type that uses the extra attribute.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.GetExtrasClient(Mozu.Api.DataViewMode,System.String)">
            <summary>
            Retrieves a list of extras configured for the product according to any defined filter and sort criteria.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetExtras(dataViewMode,  productCode);
              var productExtraClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.GetExtraValueLocalizedDeltaPricesClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="productCode"></param>
            <param name="value"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetExtraValueLocalizedDeltaPrices(dataViewMode,  productCode,  attributeFQN,  value);
              var productExtraValueDeltaPriceClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.GetExtraValueLocalizedDeltaPriceClient(Mozu.Api.DataViewMode,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="currencyCode"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetExtraValueLocalizedDeltaPrice(dataViewMode,  productCode,  attributeFQN,  value,  currencyCode,  responseFields);
              var productExtraValueDeltaPriceClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.GetExtraClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            Retrieves the details of an extra attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetExtra(dataViewMode,  productCode,  attributeFQN,  responseFields);
              var productExtraClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.AddExtraValueLocalizedDeltaPriceClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <param name="localizedDeltaPrice"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddExtraValueLocalizedDeltaPrice(dataViewMode,  localizedDeltaPrice,  productCode,  attributeFQN,  value,  responseFields);
              var productExtraValueDeltaPriceClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.AddExtraClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductExtra,System.String,System.String)">
            <summary>
            Configure an extra attribute for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="productExtra">Properties of the product extra to configure for the specified product.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddExtra(dataViewMode,  productExtra,  productCode,  responseFields);
              var productExtraClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.UpdateExtraValueLocalizedDeltaPricesClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice},System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="productCode"></param>
            <param name="value"></param>
            <param name="localizedDeltaPrice"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateExtraValueLocalizedDeltaPrices(dataViewMode,  localizedDeltaPrice,  productCode,  attributeFQN,  value);
              var productExtraValueDeltaPriceClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.UpdateExtraValueLocalizedDeltaPriceClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="currencyCode"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <param name="localizedDeltaPrice"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateExtraValueLocalizedDeltaPrice(dataViewMode,  localizedDeltaPrice,  productCode,  attributeFQN,  value,  currencyCode,  responseFields);
              var productExtraValueDeltaPriceClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.UpdateExtraClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductExtra,System.String,System.String,System.String)">
            <summary>
            Updates the configuration of an extra attribute for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="productExtra">Properties of the extra attribute to update for the specified product.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateExtra(dataViewMode,  productExtra,  productCode,  attributeFQN,  responseFields);
              var productExtraClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.DeleteExtraClient(Mozu.Api.DataViewMode,System.String,System.String)">
             <summary>
             Delete a product extra configuration for the product specified in the request.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteExtra(dataViewMode,  productCode,  attributeFQN);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductExtraClient.DeleteExtraValueLocalizedDeltaPriceClient(Mozu.Api.DataViewMode,System.String,System.String,System.String,System.String)">
             <summary>
             
             </summary>
             <param name="attributeFQN"></param>
             <param name="currencyCode"></param>
             <param name="productCode"></param>
             <param name="value"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteExtraValueLocalizedDeltaPrice(dataViewMode,  productCode,  attributeFQN,  value,  currencyCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductOptionClient">
            <summary>
            Use the Options resource to configure the option attributes and vocabulary values for an individual product associated with the product type that uses the option attribute. Options are used to generate variations of a product.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductOptionClient.GetOptionsClient(Mozu.Api.DataViewMode,System.String)">
            <summary>
            Retrieves a list of all option attributes configured for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetOptions(dataViewMode,  productCode);
              var productOptionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductOptionClient.GetOptionClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            Retrieves the details of an option attribute configuration for the specified product.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOption(dataViewMode,  productCode,  attributeFQN,  responseFields);
              var productOptionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductOptionClient.AddOptionClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductOption,System.String,System.String)">
            <summary>
            Configures an option attribute for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="productOption">Properties of the option attribute to define for the product.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddOption(dataViewMode,  productOption,  productCode,  responseFields);
              var productOptionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductOptionClient.UpdateOptionClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductOption,System.String,System.String,System.String)">
            <summary>
            Updates one or more properties of an option attribute configured for a product.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="productOption">Properties of the product option attribute configuration to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOption(dataViewMode,  productOption,  productCode,  attributeFQN,  responseFields);
              var productOptionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductOptionClient.DeleteOptionClient(Mozu.Api.DataViewMode,System.String,System.String)">
             <summary>
             Deletes the configuration of an option attribute for the product specified in the request.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteOption(dataViewMode,  productCode,  attributeFQN);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient">
            <summary>
            Use the Properties resource to configure a property attribute for an individual product associated with a product type that uses the property attribute, as well as set property values for the product.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.GetPropertiesClient(Mozu.Api.DataViewMode,System.String)">
            <summary>
            Retrieves a list of the property attributes configured for the product specified in the request.
            </summary>
            <param name="productCode"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetProperties(dataViewMode,  productCode);
              var productPropertyClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.GetPropertyValueLocalizedContentsClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="productCode"></param>
            <param name="value"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetPropertyValueLocalizedContents(dataViewMode,  productCode,  attributeFQN,  value);
              var productPropertyValueLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.GetPropertyValueLocalizedContentClient(Mozu.Api.DataViewMode,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPropertyValueLocalizedContent(dataViewMode,  productCode,  attributeFQN,  value,  localeCode,  responseFields);
              var productPropertyValueLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.GetPropertyClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a property attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProperty(dataViewMode,  productCode,  attributeFQN,  responseFields);
              var productPropertyClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.AddPropertyValueLocalizedContentClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <param name="localizedContent"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddPropertyValueLocalizedContent(dataViewMode,  localizedContent,  productCode,  attributeFQN,  value,  responseFields);
              var productPropertyValueLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.AddPropertyClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductProperty,System.String,System.String)">
            <summary>
            Configures a property attribute for the product specified in the request.
            </summary>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="productProperty">Properties of the property attribute to configure for a product.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddProperty(dataViewMode,  productProperty,  productCode,  responseFields);
              var productPropertyClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.UpdatePropertyValueLocalizedContentsClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent},System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="productCode"></param>
            <param name="value"></param>
            <param name="localizedContent"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdatePropertyValueLocalizedContents(dataViewMode,  localizedContent,  productCode,  attributeFQN,  value);
              var productPropertyValueLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.UpdatePropertyValueLocalizedContentClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <param name="localizedContent"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdatePropertyValueLocalizedContent(dataViewMode,  localizedContent,  productCode,  attributeFQN,  value,  localeCode,  responseFields);
              var productPropertyValueLocalizedContentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.UpdatePropertyClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductProperty,System.String,System.String,System.String)">
            <summary>
            Update one or more details of a property attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="productProperty">Details of the property attribute to update for the product configuration.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProperty(dataViewMode,  productProperty,  productCode,  attributeFQN,  responseFields);
              var productPropertyClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.DeletePropertyClient(Mozu.Api.DataViewMode,System.String,System.String)">
             <summary>
             Deletes the configuration of a property attribute for the product specified in the request.
             </summary>
             <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
             <param name="productCode"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProperty(dataViewMode,  productCode,  attributeFQN);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.DeletePropertyValueLocalizedContentClient(Mozu.Api.DataViewMode,System.String,System.String,System.String,System.String)">
             <summary>
             
             </summary>
             <param name="attributeFQN"></param>
             <param name="localeCode"></param>
             <param name="productCode"></param>
             <param name="value"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeletePropertyValueLocalizedContent(dataViewMode,  productCode,  attributeFQN,  value,  localeCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient">
            <summary>
            Use the product variations sub-resource to manage the variations of a product based on its attributes. For example, a t-shirt product could be offered in six variations: Small Black, Medium Black, Large Black, Small White, Medium White, and Large White.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.GetProductVariationLocalizedDeltaPricesClient(Mozu.Api.DataViewMode,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="productCode"></param>
            <param name="variationKey"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductVariationLocalizedDeltaPrices(dataViewMode,  productCode,  variationKey);
              var productVariationDeltaPriceClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.GetProductVariationLocalizedDeltaPriceClient(Mozu.Api.DataViewMode,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="currencyCode"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="variationKey"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductVariationLocalizedDeltaPrice(dataViewMode,  productCode,  variationKey,  currencyCode,  responseFields);
              var productVariationDeltaPriceClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.GetProductVariationClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a product variation based on the supplied product code and variation key.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariation"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductVariation(dataViewMode,  productCode,  variationKey,  responseFields);
              var productVariationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.GetProductVariationsClient(Mozu.Api.DataViewMode,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of the product variations configured for the specified product code.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductVariations(dataViewMode,  productCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var productVariationPagedCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.AddProductVariationLocalizedDeltaPriceClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="variationKey"></param>
            <param name="localizedDeltaPrice"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddProductVariationLocalizedDeltaPrice(dataViewMode,  localizedDeltaPrice,  productCode,  variationKey,  responseFields);
              var productVariationDeltaPriceClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.UpdateProductVariationLocalizedDeltaPricesClient(Mozu.Api.DataViewMode,System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice},System.String,System.String)">
            <summary>
            
            </summary>
            <param name="productCode"></param>
            <param name="variationKey"></param>
            <param name="localizedDeltaPrice"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductVariationLocalizedDeltaPrices(dataViewMode,  localizedDeltaPrice,  productCode,  variationKey);
              var productVariationDeltaPriceClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.UpdateProductVariationLocalizedDeltaPriceClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="currencyCode"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="variationKey"></param>
            <param name="localizedDeltaPrice"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductVariationLocalizedDeltaPrice(dataViewMode,  localizedDeltaPrice,  productCode,  variationKey,  currencyCode,  responseFields);
              var productVariationDeltaPriceClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.UpdateProductVariationClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductVariation,System.String,System.String,System.String)">
            <summary>
            Modifies the details of a variation, based on the supplied variation key, for the specified product code.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <param name="productVariation">Wrapper for the properties of the specified product variation.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariation"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductVariation(dataViewMode,  productVariation,  productCode,  variationKey,  responseFields);
              var productVariationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.UpdateProductVariationsClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection,System.String,System.String)">
            <summary>
            Modifies the collection of variations for the specified product code. Because this PUT replaces the existing resource, supply all information necessary to maintain for the product variation.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="productVariations">Wrapper for the collection of variations configured for the specified product code.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateProductVariations(dataViewMode,  productVariations,  productCode,  responseFields);
              var productVariationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.DeleteProductVariationClient(Mozu.Api.DataViewMode,System.String,System.String)">
             <summary>
             Deletes a variation, based on the supplied variation key, for the specified product code.
             </summary>
             <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
             <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProductVariation(dataViewMode,  productCode,  variationKey);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductVariationClient.DeleteProductVariationLocalizedDeltaPriceClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
             <summary>
             
             </summary>
             <param name="currencyCode"></param>
             <param name="productCode"></param>
             <param name="variationKey"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteProductVariationLocalizedDeltaPrice(dataViewMode,  productCode,  variationKey,  currencyCode);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.PublishingScopeClient">
            <summary>
            Use the Product Publishing resource to publish or discard pending changes to product definitions in the master catalog.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.PublishingScopeClient.DiscardDraftsClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.PublishingScope)">
             <summary>
             Deletes the draft version of product changes for each product code specified in the request.
             </summary>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <param name="publishScope">Properties of the pending product changes to include in this operation.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DiscardDrafts(dataViewMode,  publishScope);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.PublishingScopeClient.PublishDraftsClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductAdmin.PublishingScope)">
             <summary>
             Publishes the draft version of product changes for each product code specified in the request, and changes the product publish state to "live".
             </summary>
             <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
             <param name="publishScope">Properties of the pending product changes to include in this operation.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=PublishDrafts(dataViewMode,  publishScope);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Admin.SearchClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.SearchClient.GetSettingsClient(System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.SearchSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetSettings( responseFields);
              var searchSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Admin.SearchClient.UpdateSettingsClient(Mozu.Api.Contracts.ProductAdmin.SearchSettings,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="settings"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductAdmin.SearchSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateSettings( settings,  responseFields);
              var searchSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Storefront.CategoryClient">
            <summary>
            Use the Storefront Categories resource to view the product category hierarchy as it appears to shoppers who are browsing the storefront. The hierarchy can be returned as a flat list or as a category tree.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.CategoryClient.GetCategoriesClient(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of categories according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product category search results by any of its properties, including its position in the category hierarchy. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCategories( filter,  startIndex,  pageSize,  sortBy,  responseFields);
              var categoryPagedCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.CategoryClient.GetCategoryClient(System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of a single category.
            </summary>
            <param name="allowInactive">If true, allow inactive categories to be retrieved in the category list response. If false, the categories retrieved will not include ones marked inactive.</param>
            <param name="categoryId">Unique identifier for the storefront container used to organize products.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.Category"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCategory( categoryId,  allowInactive,  responseFields);
              var categoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.CategoryClient.GetCategoryTreeClient(System.String)">
            <summary>
            Retrieves the list of product categories that appear on the storefront organized in a hierarchical format. Hidden categories do not appear in the list.
            </summary>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.CategoryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCategoryTree( responseFields);
              var categoryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient">
            <summary>
            Use the Storefront Products  resource to manage the shopper product selection process during a visit to the web storefront. You can update product options as shoppers pick and choose their product choices. A shopper cannot add a product to a cart until all of its required options have been selected.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.GetProductsClient(Mozu.Api.DataViewMode,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of products that appear on the storefront according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProducts(dataViewMode,  filter,  startIndex,  pageSize,  sortBy,  responseFields);
              var productCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.GetProductInventoryClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            Retrieves the active inventory level information associated with the product or location specified in the request.
            </summary>
            <param name="locationCodes">Array of location codes for which to retrieve product inventory information.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.LocationInventoryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductInventory(dataViewMode,  productCode,  locationCodes,  responseFields);
              var locationInventoryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.GetProductClient(Mozu.Api.DataViewMode,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves information about a single product given its product code.
            </summary>
            <param name="allowInactive">If true, returns an inactive product as part of the query.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="skipInventoryCheck">If true, skip the inventory validation process for the specified product.</param>
            <param name="variationProductCode">Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.Product"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProduct(dataViewMode,  productCode,  variationProductCode,  allowInactive,  skipInventoryCheck,  responseFields);
              var productClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.ConfiguredProductClient(Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Creates a new product configuration each time a shopper selects a product option value. After the shopper defines values for all required product options, the shopper can add the product configuration to a cart.
            </summary>
            <param name="includeOptionDetails">If true, the response returns details about the product. If false, returns a product summary such as the product name, price, and sale price.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="skipInventoryCheck">If true, skip the inventory validation process for the specified product.</param>
            <param name="productOptionSelections">For a product with shopper-configurable options, the properties of the product options selected by the shopper.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ConfiguredProduct( productOptionSelections,  productCode,  includeOptionDetails,  skipInventoryCheck,  responseFields);
              var configuredProductClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.ValidateProductClient(Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Validate the final state of shopper-selected options.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="skipInventoryCheck">If true, skip the inventory validation process for the specified product.</param>
            <param name="productOptionSelections">For a product with shopper-configurable options, the properties of the product options selected by the shopper.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ValidateProduct( productOptionSelections,  productCode,  skipInventoryCheck,  responseFields);
              var productValidationSummaryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.ValidateDiscountsClient(Mozu.Api.Contracts.ProductRuntime.DiscountSelections,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            
            </summary>
            <param name="allowInactive"></param>
            <param name="customerAccountId"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="skipInventoryCheck"></param>
            <param name="variationProductCode"></param>
            <param name="discountSelections"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.DiscountValidationSummary"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ValidateDiscounts( discountSelections,  productCode,  variationProductCode,  customerAccountId,  allowInactive,  skipInventoryCheck,  responseFields);
              var discountValidationSummaryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductClient.GetProductInventoriesClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.ProductRuntime.LocationInventoryQuery,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="query"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.LocationInventoryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetProductInventories(dataViewMode,  query,  responseFields);
              var locationInventoryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductSearchResultClient">
            <summary>
            Use the Product Search resource to provide dynamic search results to shoppers as they browse and search for products on the web storefront, and to suggest possible search terms as the shopper enters text.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductSearchResultClient.SearchClient(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Searches the categories displayed on the storefront for products or product options that the shopper types in a search query.
            </summary>
            <param name="facet">Individually list the facet fields you want to display in a storefront product search.</param>
            <param name="facetFieldRangeQuery">Display a range facet not specified in a template in a storefront product search by listing the facet field and the range to display.</param>
            <param name="facetHierDepth">If filtering using category facets in a hierarchy, the number of category hierarchy levels to return for the facet. This option is only available for category facets.</param>
            <param name="facetHierPrefix">If filtering using category facets in a hierarchy, the parent categories you want to skip in the storefront product search. This parameter is only available for category facets.</param>
            <param name="facetHierValue">If filtering using category facets in a hierarchy, the category in the hierarchy to begin faceting on. This parameter is only available for category facets.</param>
            <param name="facetPageSize">The number of facet values to return for one or more facets.</param>
            <param name="facetSettings">Settings reserved for future facet search functionality on a storefront product search.</param>
            <param name="facetStartIndex">When paging through multiple facets, the startIndex value for each facet.</param>
            <param name="facetTemplate">The facet template to use on the storefront. A template displays all facets associated with the template on the storefront product search. Currently, only category-level facet templates are available.</param>
            <param name="facetTemplateSubset">Display a subset of the facets defined in the template specified in facetTemplate parameter.</param>
            <param name="facetValueFilter">The facet values to apply to the filter.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product search results by any of its properties, including product code, type, category, and name. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=categoryId+eq+12"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="query">The terms to search on.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult"/>}
            </returns>
            <example>
            <code>
              var mozuClient=Search( query,  filter,  facetTemplate,  facetTemplateSubset,  facet,  facetFieldRangeQuery,  facetHierPrefix,  facetHierValue,  facetHierDepth,  facetStartIndex,  facetPageSize,  facetSettings,  facetValueFilter,  sortBy,  pageSize,  startIndex,  responseFields);
              var productSearchResultClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ProductSearchResultClient.SuggestClient(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Suggests possible search terms as the shopper enters search text.
            </summary>
            <param name="groups"></param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="query"></param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ProductRuntime.SearchSuggestionResult"/>}
            </returns>
            <example>
            <code>
              var mozuClient=Suggest( query,  groups,  pageSize,  responseFields);
              var searchSuggestionResultClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Catalog.Storefront.ShippingClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Catalog.Storefront.ShippingClient.GetRatesClient(Mozu.Api.Contracts.ShippingRuntime.RateRequest,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="rateRequest"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.ShippingRuntime.RatesResponse"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetRates( rateRequest,  responseFields);
              var ratesResponseClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.ChannelClient">
            <summary>
            Use the Channels resource to manage the channels a company uses to create logical commercial business divisions based on region or types of sales, such as "US Online," "Amazon," or "EMEA Retail." All orders include a channel association that enables the company to perform financial reporting for each defined channel. Because channels are managed at the tenant level, you must associate all the tenant's sites with a channel. Sites that do not have a defined channel association cannot successfully submit orders.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ChannelClient.GetChannelsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of channels defined for a tenant according to any filter or sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetChannels( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var channelCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ChannelClient.GetChannelClient(System.String,System.String)">
            <summary>
            Retrieves the details of the channel specified in the request.
            </summary>
            <param name="code">User-defined code that identifies the channel to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetChannel( code,  responseFields);
              var channelClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ChannelClient.CreateChannelClient(Mozu.Api.Contracts.CommerceRuntime.Channels.Channel,System.String)">
            <summary>
            Creates a new channel that defines a new logical business division to use for financial reporting.
            </summary>
            <param name="responseFields"></param>
            <param name="channel">Properties of the channel to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateChannel( channel,  responseFields);
              var channelClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ChannelClient.UpdateChannelClient(Mozu.Api.Contracts.CommerceRuntime.Channels.Channel,System.String,System.String)">
            <summary>
            Updates one or more details of a defined channel, including the associated sites.
            </summary>
            <param name="code">User-defined code that identifies the channel to update.</param>
            <param name="responseFields"></param>
            <param name="channel">Properties of a the channel to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateChannel( channel,  code,  responseFields);
              var channelClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ChannelClient.DeleteChannelClient(System.String)">
             <summary>
             Deletes a defined channel for the tenant and removes the defined site associations. After deleting this channel, assign its associated sites to another channel.
             </summary>
             <param name="code">User-defined code that identifies the channel to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteChannel( code);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.ChannelGroupClient">
            <summary>
            Use the Channel Groups resource to manage groups of channels with common information.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ChannelGroupClient.GetChannelGroupsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of defined channel groups according to any filter and sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetChannelGroups( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var channelGroupCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ChannelGroupClient.GetChannelGroupClient(System.String,System.String)">
            <summary>
            Retrieves the details of a defined channel group.
            </summary>
            <param name="code">The code that uniquely identifies the channel group.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetChannelGroup( code,  responseFields);
              var channelGroupClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ChannelGroupClient.CreateChannelGroupClient(Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup,System.String)">
            <summary>
            Creates a new group of channels with common information.
            </summary>
            <param name="responseFields"></param>
            <param name="channelGroup">Properties of the channel group to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateChannelGroup( channelGroup,  responseFields);
              var channelGroupClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ChannelGroupClient.UpdateChannelGroupClient(Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup,System.String,System.String)">
            <summary>
            Updates one or more properties of a defined channel group.
            </summary>
            <param name="code">Code that identifies the channel group.</param>
            <param name="responseFields"></param>
            <param name="channelGroup">Properties of the channel group to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateChannelGroup( channelGroup,  code,  responseFields);
              var channelGroupClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ChannelGroupClient.DeleteChannelGroupClient(System.String)">
             <summary>
             Deletes a defined group of channels, which removes the group association with each channel in the group but does not delete the channel definitions themselves.
             </summary>
             <param name="code">User-defined code that uniqely identifies the channel group.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteChannelGroup( code);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient">
            <summary>
            Use the Cards subresource to manage stored credit cards for customer accounts. Mozu stores limited card data in the Customer service for expedited ordering purposes; however, the complete card data is stored in the Payment service.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient.GetAccountCardClient(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the details of a credit card stored with a customer account billing contact.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Card"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountCard( accountId,  cardId,  responseFields);
              var cardClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient.GetAccountCardsClient(System.Int32,System.String)">
            <summary>
            Retrieves all stored credit cards for the customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CardCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountCards( accountId,  responseFields);
              var cardCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient.AddAccountCardClient(Mozu.Api.Contracts.Customer.Card,System.Int32,System.String)">
            <summary>
            Creates a new credit card record and stores it for the customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <param name="card">Properties of the customer credit card to add to the account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Card"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAccountCard( card,  accountId,  responseFields);
              var cardClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient.UpdateAccountCardClient(Mozu.Api.Contracts.Customer.Card,System.Int32,System.String,System.String)">
            <summary>
            Update one or more properties of a credit card defined for a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the credit card.</param>
            <param name="responseFields"></param>
            <param name="card">Properties of the customer account credit card to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Card"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAccountCard( card,  accountId,  cardId,  responseFields);
              var cardClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CardClient.DeleteAccountCardClient(System.Int32,System.String)">
             <summary>
             Removes a stored credit card from a customer account.
             </summary>
             <param name="accountId">Unique identifier of the customer account.</param>
             <param name="cardId">Unique identifier of the credit card to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAccountCard( accountId,  cardId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerAttributeClient">
            <summary>
            Use the Attributes subresource to manage the attributes used to uniquely identify shopper accounts, such as gender or age.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerAttributeClient.GetAccountAttributeClient(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the contents of an attribute associated with the specified customer account.
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attribute to retrieve.</param>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountAttribute( accountId,  attributeFQN,  responseFields);
              var customerAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerAttributeClient.GetAccountAttributesClient(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves the list of customer account attributes.
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attributes to retrieve.</param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAttributeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountAttributes( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var customerAttributeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerAttributeClient.AddAccountAttributeClient(Mozu.Api.Contracts.Customer.CustomerAttribute,System.Int32,System.String)">
            <summary>
            Applies a defined attribute to the customer account specified in the request and assigns a value to the customer attribute.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <param name="attribute"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAccountAttribute( attribute,  accountId,  responseFields);
              var customerAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerAttributeClient.UpdateAccountAttributeClient(Mozu.Api.Contracts.Customer.CustomerAttribute,System.Int32,System.String,System.String)">
            <summary>
            Updates one or more details of a customer account attribute.
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attribute.</param>
            <param name="attributeFQN"></param>
            <param name="responseFields"></param>
            <param name="attribute"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAccountAttribute( attribute,  accountId,  attributeFQN,  responseFields);
              var customerAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerAttributeClient.DeleteAccountAttributeClient(System.Int32,System.String)">
             <summary>
             
             </summary>
             <param name="accountId"></param>
             <param name="attributeFQN"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAccountAttribute( accountId,  attributeFQN);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerContactClient">
            <summary>
            Merchants and customers can create, view, update, and delete a contact for a customer account. A customer account may have multiple contacts for billing and shipping addresses.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerContactClient.GetAccountContactClient(System.Int32,System.Int32,System.String)">
            <summary>
            Retrieves the specified contact for a customer account such as a billing or shipping contact.
            </summary>
            <param name="accountId">Unique identifier of the customer account whose contact information is being retrieved.</param>
            <param name="contactId">Unique identifier of the customer account contact to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountContact( accountId,  contactId,  responseFields);
              var customerContactClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerContactClient.GetAccountContactsClient(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of contacts for a customer according to any specified filter criteria and sort options.
            </summary>
            <param name="accountId">Unique identifier of the customer account associated with the contact information to retrieve.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerContactCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountContacts( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var customerContactCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerContactClient.AddAccountContactClient(Mozu.Api.Contracts.Customer.CustomerContact,System.Int32,System.String)">
            <summary>
            Creates a new contact for a customer account such as a new shipping address.
            </summary>
            <param name="accountId">Unique identifier of the customer account containing the new contact.</param>
            <param name="responseFields"></param>
            <param name="contact">Properties of the new contact. Required properties: Contact.Email, ContactType.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAccountContact( contact,  accountId,  responseFields);
              var customerContactClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerContactClient.UpdateAccountContactClient(Mozu.Api.Contracts.Customer.CustomerContact,System.Int32,System.Int32,System.String)">
            <summary>
            Updates a contact for a specified customer account such as to update addresses or change which contact is the primary contact for billing.
            </summary>
            <param name="accountId">Unique identifier of the customer account whose contact information is being updated.</param>
            <param name="contactId">Unique identifer of the customer account contact being updated.</param>
            <param name="responseFields"></param>
            <param name="contact">All properties the updated contact will have. Required properties: Name and email address.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAccountContact( contact,  accountId,  contactId,  responseFields);
              var customerContactClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerContactClient.DeleteAccountContactClient(System.Int32,System.Int32)">
             <summary>
             Deletes a contact for the specified customer account.
             </summary>
             <param name="accountId">Unique identifier of the customer account.</param>
             <param name="contactId">Unique identifier of the customer account contact to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAccountContact( accountId,  contactId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerNoteClient">
            <summary>
            Tenant administrators can add and view internal notes for a customer account. For example, a client can track a shopper's interests or complaints. Only clients can add and view notes. Shoppers cannot view these notes from the My Account page.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerNoteClient.GetAccountNoteClient(System.Int32,System.Int32,System.String)">
            <summary>
            Retrieves the contents of a particular note attached to a specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account that contains the note being retrieved.</param>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountNote( accountId,  noteId,  responseFields);
              var customerNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerNoteClient.GetAccountNotesClient(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of notes added to a customer account according to any specified filter criteria and sort options.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerNoteCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountNotes( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var customerNoteCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerNoteClient.AddAccountNoteClient(Mozu.Api.Contracts.Customer.CustomerNote,System.Int32,System.String)">
            <summary>
            Adds a new note to the specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account for which to create the note.</param>
            <param name="responseFields"></param>
            <param name="note">Properties of the customer account note to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAccountNote( note,  accountId,  responseFields);
              var customerNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerNoteClient.UpdateAccountNoteClient(Mozu.Api.Contracts.Customer.CustomerNote,System.Int32,System.Int32,System.String)">
            <summary>
            Modifies an existing note for a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account note to modify.</param>
            <param name="noteId">Unique identifier of the note to update.</param>
            <param name="responseFields"></param>
            <param name="note">The new content to replace the existing note.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAccountNote( note,  accountId,  noteId,  responseFields);
              var customerNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerNoteClient.DeleteAccountNoteClient(System.Int32,System.Int32)">
             <summary>
             Removes a note from the specified customer account.
             </summary>
             <param name="accountId">Unique identifier of the customer account that contains the note being deleted.</param>
             <param name="noteId">Unique identifier of the customer account note being deleted.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAccountNote( accountId,  noteId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerSegmentClient">
            <summary>
            Use the Customer Account Segments subresource to view the customer segments associated with a customer account.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.CustomerSegmentClient.GetAccountSegmentsClient(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves the list of segments associated with a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerSegmentCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccountSegments( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var customerSegmentCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Accounts.TransactionClient">
            <summary>
            Use the Customer Account Transactions resource to manage the transactions associated with a customer account.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.TransactionClient.GetTransactionsClient(System.Int32)">
            <summary>
            Retrieves a list of transactions associated with the customer account specified in the request.
            </summary>
            <param name="accountId">Unique identifier of the customer account for which to retrieve transactions.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.Customer.Transaction"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetTransactions( accountId);
              var transactionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.TransactionClient.AddTransactionClient(Mozu.Api.Contracts.Customer.Transaction,System.Int32,System.String)">
            <summary>
            Creates a new transaction for the customer account specified in the request.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <param name="transaction">Properties of the transaction to create for the customer account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Transaction"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddTransaction( transaction,  accountId,  responseFields);
              var transactionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Accounts.TransactionClient.RemoveTransactionClient(System.Int32,System.String)">
             <summary>
             Deletes a transaction from the customer account specified in the request.
             </summary>
             <param name="accountId">Unique identifier of the customer account from which to delete the transaction.</param>
             <param name="transactionId">Unique identifier of the transaction to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=RemoveTransaction( accountId,  transactionId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.AddressValidationRequestClient">
            <summary>
            Use the Address Validation resource to validate addresses associated with a customer account contact.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.AddressValidationRequestClient.ValidateAddressClient(Mozu.Api.Contracts.Customer.AddressValidationRequest,System.String)">
            <summary>
            Validates the customer address supplied in the request.
            </summary>
            <param name="responseFields"></param>
            <param name="addressValidationRequest">Properties of the address to validate.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.AddressValidationResponse"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ValidateAddress( addressValidationRequest,  responseFields);
              var addressValidationResponseClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Attributedefinition.AttributeClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Attributedefinition.AttributeClient.GetAttributesClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributes( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var attributeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Attributedefinition.AttributeClient.GetAttributeVocabularyValuesClient(System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeVocabularyValues( attributeFQN);
              var attributeVocabularyValueClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Attributedefinition.AttributeClient.GetAttributeClient(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.Attribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttribute( attributeFQN,  responseFields);
              var attributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.CreditClient">
            <summary>
            Use the Customer Credits resource to manage the store credit associated with a customer account. Store credit can represent a static amount the customer can redeem at any of the tenant's sites, or a gift card registered for a customer account. At this time, gift card functionality is reserved for future use.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CreditClient.GetCreditsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of store credits applied to customer accounts, according any filter and sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Credit.CreditCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCredits( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var creditCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CreditClient.GetCreditClient(System.String,System.String)">
            <summary>
            Retrieves the details of a store credit applied to a customer account.
            </summary>
            <param name="code">User-defined code that identifies the store credit to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Credit.Credit"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCredit( code,  responseFields);
              var creditClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CreditClient.AddCreditClient(Mozu.Api.Contracts.Customer.Credit.Credit,System.String)">
            <summary>
            Creates a new store credit for the customer account specified in the request.
            </summary>
            <param name="responseFields"></param>
            <param name="credit">Properties of the store credit to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Credit.Credit"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddCredit( credit,  responseFields);
              var creditClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CreditClient.AssociateCreditToShopperClient(System.String,System.String)">
            <summary>
            Associates an unclaimed customer credit with the shopper user authenticated in the request header.
            </summary>
            <param name="code">The code that represents the credit to claim for the shopper.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Credit.Credit"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AssociateCreditToShopper( code,  responseFields);
              var creditClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CreditClient.UpdateCreditClient(Mozu.Api.Contracts.Customer.Credit.Credit,System.String,System.String)">
            <summary>
            Updates one or more properties of a defined store credit applied to a customer account.
            </summary>
            <param name="code">User-defined code of the store credit to update.</param>
            <param name="responseFields"></param>
            <param name="credit">Properties of the store credit to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Credit.Credit"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateCredit( credit,  code,  responseFields);
              var creditClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CreditClient.DeleteCreditClient(System.String)">
             <summary>
             Deletes a store credit previously applied to a customer account.
             </summary>
             <param name="code">User-defined code of the store credit to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteCredit( code);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Credits.CreditAuditEntryClient">
            <summary>
            Use the Customer Credit Audit Entries subresource to retrieve entries logged in the audit report of a store credit or gift card applied to a customer account. The system creates a new audit entry when the credit is created, deleted, activated, or deactivated. The system then creates a new audit entry each time the credit is updated or redeemed in a transaction.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Credits.CreditAuditEntryClient.GetAuditEntriesClient(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves the list of audit entries for the credit, according to any filter or sort criteria specified in the request.
            </summary>
            <param name="code">User-defined code of the credit for which to retrieve audit entries.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAuditEntries( code,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var creditAuditEntryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.Credits.CreditTransactionClient">
            <summary>
            Use the Customer Credit Transactions subresource to manage the individual transactions performed using a store credit or gift card.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Credits.CreditTransactionClient.GetTransactionsClient(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of the transactions performed using a customer credit that update the balance of the credit.
            </summary>
            <param name="code">User-defined code that identifies the customer credit.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Credit.CreditTransactionCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetTransactions( code,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var creditTransactionCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.Credits.CreditTransactionClient.AddTransactionClient(Mozu.Api.Contracts.Customer.Credit.CreditTransaction,System.String,System.String)">
            <summary>
            Creates a new transaction and updates the amount of a store credit or gift card.
            </summary>
            <param name="code">User-defined code that identifies the customer credit to update.</param>
            <param name="responseFields"></param>
            <param name="creditTransaction">Properties of the transaction to create for the customer credit.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Credit.CreditTransaction"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddTransaction( creditTransaction,  code,  responseFields);
              var creditTransactionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient">
            <summary>
            Use the Customer Accounts resource to manage the components of shopper accounts, including attributes, contact information, company notes, and groups associated with the customer account.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.GetAccountsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a list of customer accounts.
            </summary>
            <param name="fields">The fields to include in the response.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="isAnonymous">If true, retrieve anonymous shopper accounts in the response.</param>
            <param name="pageSize"></param>
            <param name="q">A list of customer account search terms to use in the query when searching across customer name and email. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAccountCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccounts( startIndex,  pageSize,  sortBy,  filter,  fields,  q,  qLimit,  isAnonymous,  responseFields);
              var customerAccountCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.GetLoginStateClient(System.Int32,System.String)">
            <summary>
            Retrieves the current login state of the customer account specified in the request.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.LoginState"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLoginState( accountId,  responseFields);
              var loginStateClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.GetAccountClient(System.Int32,System.String)">
            <summary>
            Retrieve details of a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAccount( accountId,  responseFields);
              var customerAccountClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.AddAccountClient(Mozu.Api.Contracts.Customer.CustomerAccount,System.String)">
            <summary>
            Creates a new customer account based on the information specified in the request.
            </summary>
            <param name="responseFields"></param>
            <param name="account">Properties of the customer account to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAccount( account,  responseFields);
              var customerAccountClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.ChangePasswordClient(Mozu.Api.Contracts.Customer.PasswordInfo,System.Int32)">
             <summary>
             
             </summary>
             <param name="accountId"></param>
             <param name="passwordInfo"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=ChangePassword( passwordInfo,  accountId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.AddLoginToExistingCustomerClient(Mozu.Api.Contracts.Customer.CustomerLoginInfo,System.Int32,System.String)">
            <summary>
            Adds a new user login to a defined customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <param name="customerAuthInfo">The authentication information for the customer account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddLoginToExistingCustomer( customerAuthInfo,  accountId,  responseFields);
              var customerAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.RecomputeCustomerLifetimeValueClient(System.Int32)">
             <summary>
             Updates the customer lifetime value of the specified customer account in the event of an order import or a lifetime value calculation error.
             </summary>
             <param name="accountId">The unique identifier of the customer account for which to calculate customer lifetime value.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=RecomputeCustomerLifetimeValue( accountId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.SetLoginLockedClient(System.Boolean,System.Int32)">
             <summary>
             Lock or unlock a customer account.
             </summary>
             <param name="accountId">The unique identifier of the customer account.</param>
             <param name="isLocked">If true, the customer account is locked from logging in.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=SetLoginLocked( isLocked,  accountId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.SetPasswordChangeRequiredClient(System.Boolean,System.Int32)">
             <summary>
             Requires the password for the customer account to be changed.
             </summary>
             <param name="accountId">Unique identifier of the customer account.</param>
             <param name="isPasswordChangeRequired">If true, the password for the customer account must be changed.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=SetPasswordChangeRequired( isPasswordChangeRequired,  accountId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.AddAccountAndLoginClient(Mozu.Api.Contracts.Customer.CustomerAccountAndAuthInfo,System.String)">
            <summary>
            Creates a new customer account and logs the user associated with the customer account into the site.
            </summary>
            <param name="responseFields"></param>
            <param name="accountAndAuthInfo">Properties of the customer account to create, including the user authentication information.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAccountAndLogin( accountAndAuthInfo,  responseFields);
              var customerAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.AddAccountsClient(System.Collections.Generic.List{Mozu.Api.Contracts.Customer.CustomerAccountAndAuthInfo},System.String)">
            <summary>
            Creates multiple customer accounts based on the information specified in the request.
            </summary>
            <param name="responseFields"></param>
            <param name="customers">Properties of the customer accounts to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAccountCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddAccounts( customers,  responseFields);
              var customerAccountCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.GetLoginStateByEmailAddressClient(System.String,System.String)">
            <summary>
            Retrieves the current login state of a customer account by providing the customer's email address.
            </summary>
            <param name="emailAddress">The email address associated with the customer account.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.LoginState"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLoginStateByEmailAddress( emailAddress,  responseFields);
              var loginStateClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.GetLoginStateByUserNameClient(System.String,System.String)">
            <summary>
            Retrieves the current login state of a customer account by providing the user name associated with the customer account.
            </summary>
            <param name="responseFields"></param>
            <param name="userName">The user name associated with the customer account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.LoginState"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLoginStateByUserName( userName,  responseFields);
              var loginStateClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.ResetPasswordClient(Mozu.Api.Contracts.Customer.ResetPasswordInfo)">
             <summary>
             Resets the password for a customer account.
             </summary>
             <param name="resetPasswordInfo">Information required to reset the password for a customer account.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=ResetPassword( resetPasswordInfo);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.UpdateAccountClient(Mozu.Api.Contracts.Customer.CustomerAccount,System.Int32,System.String)">
            <summary>
            Updates a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <param name="account">Properties of the customer account to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateAccount( account,  accountId,  responseFields);
              var customerAccountClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAccountClient.DeleteAccountClient(System.Int32)">
             <summary>
             Deletes a customer account. A customer account cannot be deleted if any orders exist, past or present.
             </summary>
             <param name="accountId">Unique identifier of the customer account to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAccount( accountId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.CustomerAuthTicketClient">
            <summary>
            Use the Customer Authentication Tickets resource to generate and refresh authentication tickets for customer accounts.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAuthTicketClient.CreateAnonymousShopperAuthTicketClient">
            <summary>
            
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:System.IO.Stream"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateAnonymousShopperAuthTicket();
              var streamClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAuthTicketClient.CreateUserAuthTicketClient(Mozu.Api.Contracts.Customer.CustomerUserAuthInfo,System.String)">
            <summary>
            Generates a new authentication ticket for a customer account.
            </summary>
            <param name="responseFields"></param>
            <param name="userAuthInfo">The authentication information required to generate an authetication ticket for a user, which consists of a user name and password.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateUserAuthTicket( userAuthInfo,  responseFields);
              var customerAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerAuthTicketClient.RefreshUserAuthTicketClient(System.String,System.String)">
            <summary>
            Refreshes an existing authentication ticket for a customer account by providing the refresh token string.
            </summary>
            <param name="refreshToken">The refresh token string required to refresh a user's authentication ticket.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RefreshUserAuthTicket( refreshToken,  responseFields);
              var customerAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.CustomerSegmentClient">
            <summary>
            Use the Customer Segments resource to manage the segments that enable a client to manage groups of customers and target discounts for these segments. After a customer segment is defined, you can associate any number of customer accounts with it.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerSegmentClient.GetSegmentsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of defined customer segments according to any filter and sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerSegmentCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetSegments( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var customerSegmentCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerSegmentClient.GetSegmentClient(System.Int32,System.String)">
            <summary>
            Retrieves the details of the customer segment specified in the request. This operation does not return a list of the customer accounts associated with the segment.
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerSegment"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetSegment( id,  responseFields);
              var customerSegmentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerSegmentClient.AddSegmentClient(Mozu.Api.Contracts.Customer.CustomerSegment,System.String)">
            <summary>
            Creates a new customer segments. New customer segments do not have any associated customer accounts.
            </summary>
            <param name="responseFields"></param>
            <param name="segment">Properties of the customer segment to add.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerSegment"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddSegment( segment,  responseFields);
              var customerSegmentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerSegmentClient.AddSegmentAccountsClient(System.Collections.Generic.List{System.Int32},System.Int32)">
             <summary>
             Adds one or more customer accounts to a defined customer segment.
             </summary>
             <param name="id">Unique identifier of the customer segment for which to add the associated customer accounts.</param>
             <param name="accountIds">List of customer account IDs to add to the customer segment specified in the request.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=AddSegmentAccounts( accountIds,  id);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerSegmentClient.UpdateSegmentClient(Mozu.Api.Contracts.Customer.CustomerSegment,System.Int32,System.String)">
            <summary>
            Updates the details of the customer segment specified in the request.
            </summary>
            <param name="id">Unique identifier of the customer segment.</param>
            <param name="responseFields"></param>
            <param name="segment">Properties of the customer segment to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.CustomerSegment"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateSegment( segment,  id,  responseFields);
              var customerSegmentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerSegmentClient.DeleteSegmentClient(System.Int32)">
             <summary>
             Deletes a customer segment specified by its unique identifier. Deleting a segment removes any customer account associations, but does not delete the customer account itself.
             </summary>
             <param name="id">Unique identifier of the customer segment to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteSegment( id);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.CustomerSegmentClient.DeleteSegmentAccountsClient(System.Collections.Generic.List{System.Int32},System.Int32)">
             <summary>
             Removes the specified customer accounts from a defined customer segment. You must create the request body to perform this operation.
             </summary>
             <param name="id">Unique identifier of the segment from which to remove the customer accounts.</param>
             <param name="accountIds">List of customer account identifiers to remove from the specified customer segments.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteSegmentAccounts( accountIds,  id);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Customer.VisitClient">
            <summary>
            Use the Visits resource to manage all visits a customer makes to a tenant's sites and measure the level of transactions a customer performs during a unique visit for customer account analytics. Clients can track customer visits by site (including online and in-person interactions), the transactions a customer performs during the visit, and the device type associated with the visit, if any.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.VisitClient.GetVisitsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of customer visits according to any filter or sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.VisitCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetVisits( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var visitCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.VisitClient.GetVisitClient(System.String,System.String)">
            <summary>
            Retrieves the details of the customer visit specified in the request.
            </summary>
            <param name="responseFields"></param>
            <param name="visitId">Unique identifier of the customer visit to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Visit"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetVisit( visitId,  responseFields);
              var visitClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.VisitClient.AddVisitClient(Mozu.Api.Contracts.Customer.Visit,System.String)">
            <summary>
            Creates a new visit for the customer account specified in the request.
            </summary>
            <param name="responseFields"></param>
            <param name="visit">Properties of the visit to add to the customer account.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Visit"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddVisit( visit,  responseFields);
              var visitClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Customer.VisitClient.UpdateVisitClient(Mozu.Api.Contracts.Customer.Visit,System.String,System.String)">
            <summary>
            Updates one or more properties of a defined customer visit.
            </summary>
            <param name="responseFields"></param>
            <param name="visitId">Unique identifier of the customer visit to update.</param>
            <param name="visit">Properties of the customer visit to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.Visit"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateVisit( visit,  visitId,  responseFields);
              var visitClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.InStockNotificationSubscriptionClient">
            <summary>
            Use the Customer In-Stock Notification Subscription resource to manage the subscriptions customer accounts use to send product notifications. This resource can send a notification when a product in a catalog returns to a site's active inventory after it is out of stock, or when a new product becomes available for the first time.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.InStockNotificationSubscriptionClient.GetInStockNotificationSubscriptionsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of in-stock notification subscriptions.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.InStockNotificationSubscriptionCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetInStockNotificationSubscriptions( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var inStockNotificationSubscriptionCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.InStockNotificationSubscriptionClient.GetInStockNotificationSubscriptionClient(System.Int32,System.String)">
            <summary>
            Retrieves the details of a subscription that sends a push notification when a product is available in a site's active stock.
            </summary>
            <param name="id">Unique identifier of the in-stock notification subscription to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.InStockNotificationSubscription"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetInStockNotificationSubscription( id,  responseFields);
              var inStockNotificationSubscriptionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.InStockNotificationSubscriptionClient.AddInStockNotificationSubscriptionClient(Mozu.Api.Contracts.Customer.InStockNotificationSubscription,System.String)">
            <summary>
            Creates a new subscription that notifies the customer when the product specified in the request is available in the active inventory of the defined location.
            </summary>
            <param name="responseFields"></param>
            <param name="inStockNotificationSubscription">Properties of a subscription that sends the customer a notification when a product is available in a site's active stock.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Customer.InStockNotificationSubscription"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddInStockNotificationSubscription( inStockNotificationSubscription,  responseFields);
              var inStockNotificationSubscriptionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.InStockNotificationSubscriptionClient.DeleteInStockNotificationSubscriptionClient(System.Int32)">
             <summary>
             Deletes a subscription for a customer in-stock notification.
             </summary>
             <param name="id">Unique identifier of the customer in-stock notification subscription to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteInStockNotificationSubscription( id);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.LocationClient">
            <summary>
            Use the Location resource to retrieve details about a location from a Mozu hosted storefront.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.LocationClient.GetLocationClient(System.String)">
            <summary>
            Retrieves the details of the location specified in the request.
            </summary>
            <param name="code">User-defined code that identifies the location.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.Location"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocation( code);
              var locationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.LocationClient.GetLocationInUsageTypeClient(System.String,System.String)">
            <summary>
            Retrieves the details of a location associated with a defined location usage type for the site specified in the request.
            </summary>
            <param name="code">Retrieves the details of a location associated with a defined location usage type for the site specified in the request.</param>
            <param name="locationUsageType">System-defined location usage type code, which is DS for direct ship, SP for in-store pickup, or storeFinder.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.Location"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationInUsageType( locationUsageType,  code);
              var locationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.LocationClient.GetLocationsInUsageTypeClient(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of the locations configured for a specified location usage type for the specified site, according to any defined filter or sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="locationUsageType">System-defined location usage type code, which is DS for direct ship, SP for in-store pickup, or storeFinder.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.LocationCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationsInUsageType( locationUsageType,  startIndex,  pageSize,  sortBy,  filter);
              var locationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.LocationClient.GetDirectShipLocationClient">
            <summary>
            Retrieves the details of the location configured for the direct shipping (DS) location usage type for the site specified in the request. This location acts as an origin address from which order packages will ship, as well as the location where product reservations are created when order items are submitted with the direct ship fulfillment type (DS). If the direct ship location usage type is not configured for this site, the operation returns an error.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.Location"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDirectShipLocation();
              var locationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.LocationClient.GetInStorePickupLocationClient(System.String)">
            <summary>
            Retrieves the details of the location configured for the in-store pickup (SP) location usage type for the site specified in the request. If the location is not associated with a location type configured for the in-store pickup location usage type (SP), the operation returns an error.
            </summary>
            <param name="code">The user-defined code that identifies the location to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.Location"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetInStorePickupLocation( code);
              var locationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.LocationClient.GetInStorePickupLocationsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of locations valid for in-store pickup of an item in an order according to any filter and sort criteria. For example, an application could use this operation to provide a store finder feature based on the shopper's GPS coordinates. If the location types for the in-store pickup location usage type are not configured for the site, this operation returns an error.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.LocationCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetInStorePickupLocations( startIndex,  pageSize,  sortBy,  filter);
              var locationCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.OrderClient">
            <summary>
            Use the Orders resource to manage all components of order processing, payment, and fulfillment.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.GetOrdersClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a list of orders according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter an order's search results by any of its properties, including status, contact information, or total. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=Status+eq+Submitted"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of order search terms to use in the query when searching across order number and the name or email of the billing contact. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrders( startIndex,  pageSize,  sortBy,  filter,  q,  qLimit,  responseFields);
              var orderCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.GetAvailableActionsClient(System.String)">
            <summary>
            Retrieves the actions available to perform for an order based on its current status.
            </summary>
            <param name="orderId">Unique identifier of the available order actions to get.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{string}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailableActions( orderId);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.GetTaxableOrdersClient(System.String)">
            <summary>
            Retrieves an order for the purpose of splitting it into multiple taxable orders in order to fulfill the order in multiple locations.
            </summary>
            <param name="orderId">Unique identifier of the order to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.PricingRuntime.TaxableOrder"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetTaxableOrders( orderId);
              var taxableOrderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.GetOrderClient(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of an order specified by the order ID.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order details to get.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrder( orderId,  draft,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.CreateOrderFromCartClient(System.String,System.String)">
            <summary>
            Creates a new order from an existing cart when the customer chooses to proceed to checkout.
            </summary>
            <param name="cartId">Unique identifier of the cart. This is the original cart ID expressed as a GUID.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateOrderFromCart( cartId,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.CreateOrderClient(Mozu.Api.Contracts.CommerceRuntime.Orders.Order,System.String)">
            <summary>
            Creates a new order for no-cart quick-ordering scenarios.
            </summary>
            <param name="responseFields"></param>
            <param name="order">Properties of the order to create and submit.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateOrder( order,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.PerformOrderActionClient(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAction,System.String,System.String)">
            <summary>
            Perform the specified action for an order. The actions you can perform depend on the current status of the order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <param name="action">The action to perform for the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=PerformOrderAction( action,  orderId,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.UpdateOrderDiscountClient(Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Update the properties of a discount applied to an order.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order discount. System-supplied and read only.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to modify the discount by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="discount">Properties of the order discount to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrderDiscount( discount,  orderId,  discountId,  updateMode,  version,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.DeleteOrderDraftClient(System.String,System.String)">
             <summary>
             Deletes the current draft version of the order, which also deletes any uncommitted changes made to the order in draft mode.
             </summary>
             <param name="orderId">Unique identifier of the order associated with the draft to delete.</param>
             <param name="version">If applicable, the version of the order draft to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteOrderDraft( orderId,  version);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.ChangeOrderUserIdClient(System.String,System.String)">
            <summary>
            Updates the user ID of the shopper who placed the order to the current user.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ChangeOrderUserId( orderId,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.OrderClient.UpdateOrderClient(Mozu.Api.Contracts.CommerceRuntime.Orders.Order,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the specified order when additional order information, such as shipping or billing information, is modified during the checkout process.
            </summary>
            <param name="orderId">Unique identifier of the order to update.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="order">The properties of the order to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrder( order,  orderId,  updateMode,  version,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.AdjustmentClient">
            <summary>
            Use this subresource to manage ad-hoc order level price adjustments.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AdjustmentClient.ApplyShippingAdjustmentClient(Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment,System.String,System.String,System.String,System.String)">
            <summary>
            Applies a shipping adjustment to the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipping adjustment.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to apply the shipping adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="adjustment">Properties of the shipping adjustment to apply to the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ApplyShippingAdjustment( adjustment,  orderId,  updateMode,  version,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AdjustmentClient.ApplyAdjustmentClient(Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment,System.String,System.String,System.String,System.String)">
            <summary>
            Applies a price adjustment to the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to apply the adjustment.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to apply the adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="adjustment">Properties of the price adjustment to apply to the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ApplyAdjustment( adjustment,  orderId,  updateMode,  version,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AdjustmentClient.RemoveShippingAdjustmentClient(System.String,System.String,System.String)">
            <summary>
            Removes a shipping adjustment previously applied to an order or draft.
            </summary>
            <param name="orderId">Unique identifier of the order with the applied shipping adjustment.</param>
            <param name="updateMode">Specifies whether to remove the shipping adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveShippingAdjustment( orderId,  updateMode,  version);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AdjustmentClient.RemoveAdjustmentClient(System.String,System.String,System.String)">
            <summary>
            Removes a price adjustment from the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to delete the adjustment.</param>
            <param name="updateMode">Specifies whether to remove the adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveAdjustment( orderId,  updateMode,  version);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.AppliedDiscountClient">
            <summary>
            Use this subresource to apply coupons to or remove coupons from an order based on a supplied coupon code.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AppliedDiscountClient.ApplyCouponClient(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Apply a coupon to the order.
            </summary>
            <param name="couponCode">Alphanumeric code associated with the coupon or promotion that results in a discounted price.</param>
            <param name="orderId">Unique identifier of the order to associate the coupon. System-supplied and read-only.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to apply the coupon by updating the original order, updating the order in draft mode, or updating the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ApplyCoupon( orderId,  couponCode,  updateMode,  version,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AppliedDiscountClient.RemoveCouponClient(System.String,System.String,System.String,System.String)">
            <summary>
            Removes a coupon previously applied to the order.
            </summary>
            <param name="couponCode">Alphanumeric code associated with the coupon or promotion that results in a discounted price.</param>
            <param name="orderId">Unique identifier of the order with the coupon to remove.</param>
            <param name="updateMode">Specifies whether to remove the coupon by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveCoupon( orderId,  couponCode,  updateMode,  version);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.AppliedDiscountClient.RemoveCouponsClient(System.String,System.String,System.String)">
            <summary>
            Removes all coupons previously applied to the order.
            </summary>
            <param name="orderId">Unique identifier of the order with the coupons to remove.</param>
            <param name="updateMode">Specifies whether to remove coupons by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveCoupons( orderId,  updateMode,  version);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient">
            <summary>
            Use the Order Attribute Definition resource to manage the attributes that uniquely describe orders, such as the associated shopping season or "How did you hear about us?". Merchants can display order attributes on the order summary, the order confirmation page, invoices, or packing slips.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.GetAttributesClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of order attributes according to any filter criteria or sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributes( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var attributeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.GetAttributeVocabularyValuesClient(System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttributeVocabularyValues( attributeFQN);
              var attributeVocabularyValueClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.Attributedefinition.AttributeClient.GetAttributeClient(System.String,System.String)">
            <summary>
            Retrieves the details of the order attribute specified in the request.
            </summary>
            <param name="attributeFQN"></param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Extensible.Attribute"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAttribute( attributeFQN,  responseFields);
              var attributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.BillingInfoClient">
            <summary>
            Use the Billing Info subresource to manage the billing information stored for an order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.BillingInfoClient.GetBillingInfoClient(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the billing information associated with an order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order billing information, which might include uncommitted changes.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetBillingInfo( orderId,  draft,  responseFields);
              var billingInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.BillingInfoClient.SetBillingInfoClient(Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the billing information supplied for an order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to set the billing information by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="billingInfo">The properties of the order billing information to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=SetBillingInfo( billingInfo,  orderId,  updateMode,  version,  responseFields);
              var billingInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient.GetAvailableDigitalPackageFulfillmentActionsClient(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="digitalPackageId"></param>
            <param name="orderId"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{string}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailableDigitalPackageFulfillmentActions( orderId,  digitalPackageId);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient.GetDigitalPackageClient(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="digitalPackageId"></param>
            <param name="orderId"></param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDigitalPackage( orderId,  digitalPackageId,  responseFields);
              var digitalPackageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient.CreateDigitalPackageClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="orderId"></param>
            <param name="responseFields"></param>
            <param name="digitalPackage"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateDigitalPackage( digitalPackage,  orderId,  responseFields);
              var digitalPackageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient.UpdateDigitalPackageClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="digitalPackageId"></param>
            <param name="orderId"></param>
            <param name="responseFields"></param>
            <param name="digitalPackage"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDigitalPackage( digitalPackage,  orderId,  digitalPackageId,  responseFields);
              var digitalPackageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.DigitalPackageClient.DeleteDigitalPackageClient(System.String,System.String)">
             <summary>
             
             </summary>
             <param name="digitalPackageId"></param>
             <param name="orderId"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDigitalPackage( orderId,  digitalPackageId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.FulfillmentActionClient">
            <summary>
            Use the Fulfillment resource to manage shipments or pickups of collections of packages for an order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.FulfillmentActionClient.PerformFulfillmentActionClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentAction,System.String,System.String)">
            <summary>
            Sets the fulfillment action to "Ship" or "PickUp". To ship an order or prepare it for in-store pickup, the order must have a customer name, the "Open" or "OpenAndProcessing" status. To ship the order, it must also have the full shipping address and shipping method. Shipping all packages or picking up all pickups for an order will complete a paid order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to perform the fulfillment action.</param>
            <param name="responseFields"></param>
            <param name="action">The action to perform for the order fulfillment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=PerformFulfillmentAction( action,  orderId,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.FulfillmentInfoClient">
            <summary>
            Use the Fulfillment Information resource to manage shipping or pickup information for orders.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.FulfillmentInfoClient.GetFulfillmentInfoClient(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a list of the fulfillment information for the specified order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order's fulfillment information, which might include uncommitted changes.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetFulfillmentInfo( orderId,  draft,  responseFields);
              var fulfillmentInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.FulfillmentInfoClient.SetFulFillmentInfoClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo,System.String,System.String,System.String,System.String)">
            <summary>
            Updates one or more properties of fulfillment information for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to set the fulfillment information by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="fulfillmentInfo">Array list of fulfillment information associated with an order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo"/>}
            </returns>
            <example>
            <code>
              var mozuClient=SetFulFillmentInfo( fulfillmentInfo,  orderId,  updateMode,  version,  responseFields);
              var fulfillmentInfoClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.OrderAttributeClient">
            <summary>
            Use the Order Attributes resource to define how an order attribute definition applies to a specific order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderAttributeClient.GetOrderAttributesClient(System.String)">
            <summary>
            Retrieves a list of the attributes defined for the order specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order for which to retrieve a list of defined attributes.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderAttributes( orderId);
              var orderAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderAttributeClient.CreateOrderAttributesClient(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute},System.String)">
            <summary>
            Applies a list of attributes to the order specified in the request and defines a value for each attribute in the request body.
            </summary>
            <param name="orderId">Unique identifier of the order for which to assign the attributes.</param>
            <param name="orderAttributes">The list of attributes to associate with the order, and the properties of each attribute to define for the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=CreateOrderAttributes( orderAttributes,  orderId);
              var orderAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderAttributeClient.UpdateOrderAttributesClient(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute},System.String,System.Nullable{System.Boolean})">
            <summary>
            Updates one or more properties of an attribute defined for the order specified in the request.
            </summary>
            <param name="orderId">Identifier of the order for which to update attributes.</param>
            <param name="removeMissing">If true, the operation removes missing properties so that the updated order attributes will not show properties with a null value.</param>
            <param name="orderAttributes">List of order attributes to update, including the properties of each defined attribute in the list.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrderAttributes( orderAttributes,  orderId,  removeMissing);
              var orderAttributeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.OrderItemClient">
            <summary>
            Use this subresource to retrieve details about items in an active order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.GetOrderItemClient(System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of a single order item.
            </summary>
            <param name="draft">If true, retrieve the draft version of this order item, which might include uncommitted changes to the order item, the order, or other order components.</param>
            <param name="orderId">Unique identifier of the order item to retrieve.</param>
            <param name="orderItemId">Unique identifier of the order item details to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderItem( orderId,  orderItemId,  draft,  responseFields);
              var orderItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.GetOrderItemsClient(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of all items in an order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order's items, which might include uncommitted changes to one or more order items, the order itself, or other order components.</param>
            <param name="orderId">Unique identifier of the order items to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderItems( orderId,  draft,  responseFields);
              var orderItemCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.CreateOrderItemClient(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Adds a new item to a defined order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to add the item.</param>
            <param name="responseFields"></param>
            <param name="skipInventoryCheck">If true, do not validate the product inventory when adding this item to the order.</param>
            <param name="updateMode">Specifies whether to add the item by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="orderItem">The properties of the item to create in the existing order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateOrderItem( orderItem,  orderId,  updateMode,  version,  skipInventoryCheck,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.UpdateOrderItemDiscountClient(Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount,System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Update the discount applied to an item in an order.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order associated with the item discount.</param>
            <param name="orderItemId">Unique identifier of the item in the order.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to change the item discount by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="discount">Properties of the discount to modify for the order item.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrderItemDiscount( discount,  orderId,  orderItemId,  discountId,  updateMode,  version,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.UpdateItemFulfillmentClient(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the item fulfillment information for the order specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item in the order.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to apply the coupon by updating the original order, updating the order in draft mode, or updating the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="orderItem">Properties of the order item to update for fulfillment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateItemFulfillment( orderItem,  orderId,  orderItemId,  updateMode,  version,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.UpdateItemProductPriceClient(System.String,System.String,System.Decimal,System.String,System.String,System.String)">
            <summary>
            Override the price of an individual product on a line item in the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order containing the item to price override.</param>
            <param name="orderItemId">Unique identifier of the item in the order to price override.</param>
            <param name="price">The override price to specify for this item in the specified order.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to change the product price by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateItemProductPrice( orderId,  orderItemId,  price,  updateMode,  version,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.UpdateItemQuantityClient(System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Update the quantity of an item in an order.
            </summary>
            <param name="orderId">Unique identifier of the order containing the item to update quantity.</param>
            <param name="orderItemId">Unique identifier of the item in the order to update quantity.</param>
            <param name="quantity">The quantity of the item in the order to update.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to change the item quantity by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateItemQuantity( orderId,  orderItemId,  quantity,  updateMode,  version,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderItemClient.DeleteOrderItemClient(System.String,System.String,System.String,System.String)">
            <summary>
            Removes a previously added item from a defined order.
            </summary>
            <param name="orderId">Unique identifier of the order with the item to remove.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="updateMode">Specifies whether to remove the item by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=DeleteOrderItem( orderId,  orderItemId,  updateMode,  version);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.OrderNoteClient">
            <summary>
            Use the Order Notes subresource to manage merchant-level notes associated with an active order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderNoteClient.GetOrderNotesClient(System.String)">
            <summary>
            Retrieves a list of all notes for an order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderNotes( orderId);
              var orderNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderNoteClient.GetOrderNoteClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a specific order note.
            </summary>
            <param name="noteId">Unique identifier of the order note to retrieve.</param>
            <param name="orderId">Unique identifier of the order associated with the note.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderNote( orderId,  noteId,  responseFields);
              var orderNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderNoteClient.CreateOrderNoteClient(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote,System.String,System.String)">
            <summary>
            Creates a new merchant note for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to add a note.</param>
            <param name="responseFields"></param>
            <param name="orderNote">The alphanumeric text contained in the note. The maximum length is 256 characters.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateOrderNote( orderNote,  orderId,  responseFields);
              var orderNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderNoteClient.UpdateOrderNoteClient(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote,System.String,System.String,System.String)">
            <summary>
            Updates a specific note for an order.
            </summary>
            <param name="noteId">Unique identifier of the order note.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <param name="orderNote">The content of the order note. The maximum length is 256 characters.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrderNote( orderNote,  orderId,  noteId,  responseFields);
              var orderNoteClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderNoteClient.DeleteOrderNoteClient(System.String,System.String)">
             <summary>
             Deletes the specified order note.
             </summary>
             <param name="noteId">Unique identifier of the order note to delete.</param>
             <param name="orderId">Unique identifier of the order associated with the note.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteOrderNote( orderId,  noteId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.OrderValidationResultClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderValidationResultClient.GetValidationResultsClient(System.String)">
            <summary>
            
            </summary>
            <param name="orderId"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetValidationResults( orderId);
              var orderValidationResultClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.OrderValidationResultClient.AddValidationResultClient(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="orderId"></param>
            <param name="responseFields"></param>
            <param name="validationResult"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddValidationResult( validationResult,  orderId,  responseFields);
              var orderValidationResultClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.PackageClient">
            <summary>
            Use the Packages subresource to manage the physical packages to ship for an order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PackageClient.GetAvailablePackageFulfillmentActionsClient(System.String,System.String)">
            <summary>
            Retrieves a list of the actions available to perform for a package associated with order fulfillment.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package fulfillment.</param>
            <param name="packageId">Unique identifier of the package associated with the fulfillment actions to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{string}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailablePackageFulfillmentActions( orderId,  packageId);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PackageClient.GetPackageLabelClient(System.String,System.String)">
            <summary>
            Retrieves the package label image supplied by the carrier.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package label to retrieve.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:System.IO.Stream"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPackageLabel( orderId,  packageId);
              var streamClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PackageClient.GetPackageClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package to retrieve.</param>
            <param name="packageId">Unique identifier of the package to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPackage( orderId,  packageId,  responseFields);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PackageClient.CreatePackageClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package,System.String,System.String)">
            <summary>
            Creates a new physical package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order associated with this package.</param>
            <param name="responseFields"></param>
            <param name="package">Properties of the physical package of order items.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePackage( pkg,  orderId,  responseFields);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PackageClient.UpdatePackageClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package,System.String,System.String,System.String)">
            <summary>
            Updates one or more properties of a physical package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package to update.</param>
            <param name="packageId">Unique identifier of the package of order items to update.</param>
            <param name="responseFields"></param>
            <param name="package">Wrapper of properties for the package of order items to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdatePackage( pkg,  orderId,  packageId,  responseFields);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PackageClient.DeletePackageClient(System.String,System.String)">
             <summary>
             Removes a physical package of items from the specified order.
             </summary>
             <param name="orderId">Unique identifier of the order associated with the package to delete.</param>
             <param name="packageId">Unique identifier of the package to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeletePackage( orderId,  packageId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.PaymentClient">
            <summary>
            Use the Payments subresource to manage payment transactions for orders. Each transaction performed for an order represents an individual payment. For example, if an order totals $75.00 but the shopper has a $50.00 gift certificate, both the gift certificate transaction and the credit card transaction for the remaining $25.00 are recorded as payments for the order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PaymentClient.GetPaymentsClient(System.String,System.String)">
            <summary>
            Retrieves information about all payment transactions submitted for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPayments( orderId,  responseFields);
              var paymentCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PaymentClient.GetAvailablePaymentActionsClient(System.String,System.String)">
            <summary>
            Retrieves the list of all available payment actions dependent on the order payment status by specifying the order ID.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the payment.</param>
            <param name="paymentId">Unique identifer of the payment for which to retrieve available actions.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{string}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailablePaymentActions( orderId,  paymentId);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PaymentClient.GetPaymentClient(System.String,System.String,System.String)">
            <summary>
            Retrieves information about a specific payment transaction submitted for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the payment transaction.</param>
            <param name="paymentId">Unique identifier of the payment transaction submitted for the order.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPayment( orderId,  paymentId,  responseFields);
              var paymentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PaymentClient.PerformPaymentActionClient(Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction,System.String,System.String,System.String)">
            <summary>
            Performs the specified action for an individual order payment transaction.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the payment.</param>
            <param name="paymentId">Unique identifer of the payment for which to perform the action.</param>
            <param name="responseFields"></param>
            <param name="action">The action to perform for the payment. Possible values are AuthAndCapture, AuthorizePayment, CapturePayment, VoidPayment, CreditPayment, RequestCheck, ApplyCheck, DeclineCheck.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=PerformPaymentAction( action,  orderId,  paymentId,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PaymentClient.CreatePaymentActionClient(Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction,System.String,System.String)">
            <summary>
            Creates a new payment transaction for the specified order and performs the specified action.
            </summary>
            <param name="orderId">Unique identifier of the order for which to apply the payment.</param>
            <param name="responseFields"></param>
            <param name="action">To action to perform for the newly created payment. Possible values are AuthAndCapture, AuthorizePayment, CapturePayment, VoidPayment, CreditPayment, RequestCheck, ApplyCheck, DeclineCheck.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePaymentAction( action,  orderId,  responseFields);
              var orderClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.PickupClient">
            <summary>
            Use the Pickups resource to organize items submitted in an order into pickups that enable the shopper to fulfill the order items using the in-store pickup method.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PickupClient.GetAvailablePickupFulfillmentActionsClient(System.String,System.String)">
            <summary>
            Retrieves a list of the actions available to perform for the pickup specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the pickup.</param>
            <param name="pickupId">Unique identifier of the pickup for which to retrieve available actions.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{string}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailablePickupFulfillmentActions( orderId,  pickupId);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PickupClient.GetPickupClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of the in-store pickup specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the pickup.</param>
            <param name="pickupId">Unique identifier of the pickup to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPickup( orderId,  pickupId,  responseFields);
              var pickupClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PickupClient.CreatePickupClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup,System.String,System.String)">
            <summary>
            Create a new pickup for the order specified in the request for in-store fufillment.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <param name="pickup">Properties of the in-store pickup to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePickup( pickup,  orderId,  responseFields);
              var pickupClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PickupClient.UpdatePickupClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup,System.String,System.String,System.String)">
            <summary>
            Updates one or more details of a defined in-store pickup.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the in-store pickup.</param>
            <param name="pickupId">Unique identifier of the pickup to update.</param>
            <param name="responseFields"></param>
            <param name="pickup">Properties of the in-store pickup to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdatePickup( pickup,  orderId,  pickupId,  responseFields);
              var pickupClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.PickupClient.DeletePickupClient(System.String,System.String)">
             <summary>
             Removes a pickup previously defined for order item in-store pickup fulfillment.
             </summary>
             <param name="orderId">Unique identifier of the order associated with the pickup.</param>
             <param name="pickupId">Unique identifier of the pickup to remove.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeletePickup( orderId,  pickupId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Orders.ShipmentClient">
            <summary>
            Use the shipments resource to manage shipments of collections of packages for an order.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ShipmentClient.GetShipmentClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of the order shipment specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipment to retrieve.</param>
            <param name="responseFields"></param>
            <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetShipment( orderId,  shipmentId,  responseFields);
              var shipmentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ShipmentClient.GetAvailableShipmentMethodsClient(System.String,System.Nullable{System.Boolean})">
            <summary>
            Retrieves the available shipping methods applicable to the order. Typically used to display available shipping method options on the checkout page.
            </summary>
            <param name="draft"></param>
            <param name="orderId">Unique identifier of the order for the available shipment methods being retrieved.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailableShipmentMethods( orderId,  draft);
              var shippingRateClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ShipmentClient.CreatePackageShipmentsClient(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Creates a shipment from one or more package associated with an order and assign a label and tracking number to an order shipment.
            </summary>
            <param name="orderId">Unique identifier of the order for this shipment.</param>
            <param name="packageIds">List of unique identifiers for each package associated with this shipment. Not all packages must belong to the same shipment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePackageShipments( packageIds,  orderId);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Orders.ShipmentClient.DeleteShipmentClient(System.String,System.String)">
             <summary>
             Deletes the shipment specified in the request.
             </summary>
             <param name="orderId">Unique identifier of the order to cancel shipment.</param>
             <param name="shipmentId">Unique identifier of the shipment to cancel.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteShipment( orderId,  shipmentId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.ReturnClient">
            <summary>
            Use the Returns resource to manage returned items that were previously fufilled. Returns can include any number of items associated with an original Mozu order. Each return must either be associated with an original order or a product definition to represent each returned item.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetReturnsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of all returns according to any filter and sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetReturns( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var returnCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetAvailableReturnActionsClient(System.String)">
            <summary>
            Retrieves a list of the actions available to perform for the specified return based on its current state.
            </summary>
            <param name="returnId">Unique identifier of the return for which to retrieve available actions.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{string}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailableReturnActions( returnId);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetReturnItemClient(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="returnId"></param>
            <param name="returnItemId"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetReturnItem( returnId,  returnItemId,  responseFields);
              var returnItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetReturnItemsClient(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="returnId"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItemCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetReturnItems( returnId,  responseFields);
              var returnItemCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetAvailablePaymentActionsForReturnClient(System.String,System.String)">
            <summary>
            Retrieves a list of the payment actions available to perform for the specified return when a return results in a refund to the customer.
            </summary>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="returnId">Unique identifier of the return associated with the payment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{string}}
            </returns>
            <example>
            <code>
              var mozuClient=GetAvailablePaymentActionsForReturn( returnId,  paymentId);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetPaymentClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a payment submitted as part of a refund associated with a customer return.
            </summary>
            <param name="paymentId">Unique identifier of the return payment to retrieve.</param>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return associated with the payment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPayment( returnId,  paymentId,  responseFields);
              var paymentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetPaymentsClient(System.String,System.String)">
            <summary>
            Retrieves a list of all payments submitted as part of a refund associated with a customer return.
            </summary>
            <param name="responseFields"></param>
            <param name="returnId">Returns the details of the refund payment associated with the return specified in the request.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPayments( returnId,  responseFields);
              var paymentCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.GetReturnClient(System.String,System.String)">
            <summary>
            Retrieves a list of properties for the specified return.
            </summary>
            <param name="responseFields"></param>
            <param name="returnId">Returns the properties of the return specified in the request as well as system-supplied information.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetReturn( returnId,  responseFields);
              var returnClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.CreateReturnClient(Mozu.Api.Contracts.CommerceRuntime.Returns.Return,System.String)">
            <summary>
            Creates a return for previously fulfilled items. Each return must either be associated with an original order or a product definition to represent each returned item.
            </summary>
            <param name="responseFields"></param>
            <param name="ret">Wrapper for the properties of the return to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateReturn( ret,  responseFields);
              var returnClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.CreateReturnItemClient(Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="returnId"></param>
            <param name="returnItem"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateReturnItem( returnItem,  returnId,  responseFields);
              var returnClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.PerformPaymentActionForReturnClient(Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction,System.String,System.String,System.String)">
            <summary>
            Updates a refund payment associated with a customer return by performing the specified action.
            </summary>
            <param name="paymentId">Unique identifier of the return payment to update.</param>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return associated with the refund payment.</param>
            <param name="action">The payment action to perform for the refund payment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>}
            </returns>
            <example>
            <code>
              var mozuClient=PerformPaymentActionForReturn( action,  returnId,  paymentId,  responseFields);
              var returnClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.CreatePaymentActionForReturnClient(Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction,System.String,System.String)">
            <summary>
            Creates a new payment for a return that results in a refund to the customer.
            </summary>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return associated with the payment action.</param>
            <param name="action">The payment action to perform for the customer return.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePaymentActionForReturn( action,  returnId,  responseFields);
              var returnClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.PerformReturnActionsClient(Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnAction,System.String)">
            <summary>
            Updates the return by performing the action specified in the request.
            </summary>
            <param name="responseFields"></param>
            <param name="action">The name of the return action to perform, such as "Reject" or "Authorize".</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=PerformReturnActions( action,  responseFields);
              var returnCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.UpdateReturnClient(Mozu.Api.Contracts.CommerceRuntime.Returns.Return,System.String,System.String)">
            <summary>
            Updates one or more properties of a return for items previously shipped in a completed order.
            </summary>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return.</param>
            <param name="ret">Wrapper for the array of properties to update for the return.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateReturn( ret,  returnId,  responseFields);
              var returnClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.DeleteOrderItemClient(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="returnId"></param>
            <param name="returnItemId"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>}
            </returns>
            <example>
            <code>
              var mozuClient=DeleteOrderItem( returnId,  returnItemId);
              var returnClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.ReturnClient.DeleteReturnClient(System.String)">
             <summary>
             Deletes the return specified in the request.
             </summary>
             <param name="returnId">Unique identifier of the return to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteReturn( returnId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Returns.PackageClient">
            <summary>
            Use the Return Packages subresource to manage physical packages used to ship return replacement items.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.PackageClient.GetPackageLabelClient(System.String,System.String)">
            <summary>
            Retrieves the package label image supplied by the carrier for a return replacement.
            </summary>
            <param name="packageId">Unique identifier of the return replacement package for which to retrieve the label.</param>
            <param name="returnId">Unique identifier of the return associated with the replacement package label to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:System.IO.Stream"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPackageLabel( returnId,  packageId);
              var streamClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.PackageClient.GetPackageClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a package of return replacement items.
            </summary>
            <param name="packageId">Unique identifier of the return replacement package to retrieve.</param>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return associated with the replacement package to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPackage( returnId,  packageId,  responseFields);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.PackageClient.CreatePackageClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package,System.String,System.String)">
            <summary>
            Creates a new physical package of return replacement items.
            </summary>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return for which to create a replacement package.</param>
            <param name="package">Properties of the physical package for a return replacement.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePackage( pkg,  returnId,  responseFields);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.PackageClient.UpdatePackageClient(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package,System.String,System.String,System.String)">
            <summary>
            Updates one or more properties of a package associated with a return replacement.
            </summary>
            <param name="packageId">Unique identifier of the return replacement package to update.</param>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return associated with the replacement package to update.</param>
            <param name="package">Properties of the return replacement package to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdatePackage( pkg,  returnId,  packageId,  responseFields);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.PackageClient.DeletePackageClient(System.String,System.String)">
             <summary>
             Deletes a package associated with a return replacement.
             </summary>
             <param name="packageId">Unique identifier of the return replacement package to delete.</param>
             <param name="returnId">Unique identifier of the return associated with the replacement package to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeletePackage( returnId,  packageId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Returns.ShipmentClient">
            <summary>
            Use the Return Shipments subresource to manage shipments for a return replacement.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.ShipmentClient.GetShipmentClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of the specified return replacement shipment.
            </summary>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return associated with the replacement shipment to retrieve.</param>
            <param name="shipmentId">Unique identifier of the return replacement shipment to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetShipment( returnId,  shipmentId,  responseFields);
              var shipmentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.ShipmentClient.CreatePackageShipmentsClient(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Creates a shipment from one or more packages associated with a return replacement.
            </summary>
            <param name="returnId">Unique identifier of the return for which to create replacement package shipments.</param>
            <param name="packageIds">List of packages in the return replacement shipment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePackageShipments( packageIds,  returnId);
              var packageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Returns.ShipmentClient.DeleteShipmentClient(System.String,System.String)">
             <summary>
             Deletes a shipment for a return replacement.
             </summary>
             <param name="returnId">Unique identifier of the return associated with the replacement shipment to delete.</param>
             <param name="shipmentId">Unique identifier of the return replacement shipment to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteShipment( returnId,  shipmentId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.ApplicationClient">
            <summary>
            Use the Applications resource to update site-specific settings for installed applications.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.ApplicationClient.ThirdPartyGetApplicationClient(System.String)">
            <summary>
            Retrieve the settings of a third-party application.
            </summary>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Application.Application"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ThirdPartyGetApplication( responseFields);
              var applicationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.ApplicationClient.ThirdPartyUpdateApplicationClient(Mozu.Api.Contracts.SiteSettings.Application.Application,System.String)">
            <summary>
            Initializes an application with the necessary configured settings.
            </summary>
            <param name="responseFields"></param>
            <param name="application">Properties of the application to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Application.Application"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ThirdPartyUpdateApplication( application,  responseFields);
              var applicationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.Checkout.CustomerCheckoutSettingsClient">
            <summary>
            Use the Customer Checkout Settings resource to define login settings that apply when shoppers proceed to checkout.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Checkout.CustomerCheckoutSettingsClient.GetCustomerCheckoutSettingsClient(System.String)">
            <summary>
            Retrieves all checkout settings defined for the site: Payment settings, such as the payment gateway ID and credentials, supported credit cards, and more; Customer Checkout settings, such as whether login is required, and any custom attributes; and Order Processing settings, such as when payment is authorized and captured, and any custom attributes.
            </summary>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCustomerCheckoutSettings( responseFields);
              var customerCheckoutSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Checkout.CustomerCheckoutSettingsClient.UpdateCustomerCheckoutSettingsClient(Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings,System.String)">
            <summary>
            Modifies existing site checkout settings. Modify Payment, Customer Checkout, and Order Processing settings in one PUT.
            </summary>
            <param name="responseFields"></param>
            <param name="customerCheckoutSettings">All the properties to update in the checkout settings.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateCustomerCheckoutSettings( customerCheckoutSettings,  responseFields);
              var customerCheckoutSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.Checkout.PaymentSettingsClient">
            <summary>
            Use the Payment Settings resource to specify settings when creating payments for order checkout on the site.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Checkout.PaymentSettingsClient.GetThirdPartyPaymentWorkflowsClient">
            <summary>
            Retrieves the details of the third-party payment service workflows configured for the site.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.ExternalPaymentWorkflowDefinition"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetThirdPartyPaymentWorkflows();
              var externalPaymentWorkflowDefinitionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.CheckoutSettingsClient">
            <summary>
            Use the Checkout Settings resource to specify the site-wide settings that define checkout and order processing behavior. This resource includes subresources for payment settings, customer checkout settings, and order processing settings.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.CheckoutSettingsClient.GetCheckoutSettingsClient(System.String)">
            <summary>
            Retrieves all checkout settings defined for the site including payment settings (payment gateway ID and credentials), shopper checkout settings (login requirement or guest mode and custom attributes), and order processing settings (when payment is authorized and captured plus any custom attributes).
            </summary>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CheckoutSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCheckoutSettings( responseFields);
              var checkoutSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.General.TaxableTerritoryClient">
            <summary>
            Use the taxable territories subresource to manage the regional territories for this site that are subejct to sales tax.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.General.TaxableTerritoryClient.GetTaxableTerritoriesClient">
            <summary>
            Retrieves a list of the taxable territories configured for the site.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetTaxableTerritories();
              var taxableTerritoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.General.TaxableTerritoryClient.AddTaxableTerritoryClient(Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory,System.String)">
            <summary>
            Creates a new territory for which to calculate sales tax.
            </summary>
            <param name="responseFields"></param>
            <param name="taxableTerritory">Properties of the taxable territory to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddTaxableTerritory( taxableTerritory,  responseFields);
              var taxableTerritoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.General.TaxableTerritoryClient.UpdateTaxableTerritoriesClient(System.Collections.Generic.List{Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory})">
            <summary>
            Updates one or more taxable territories configured for a site.
            </summary>
            <param name="taxableterritories">Properties of the taxable territories to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateTaxableTerritories( taxableterritories);
              var taxableTerritoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.GeneralSettingsClient">
            <summary>
            Define global site settings such as the site name, shipping and email addresses, and logo images. Block undesirable IP addresses using this resource.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.GeneralSettingsClient.GetGeneralSettingsClient(System.String)">
            <summary>
            Retrieve a site's general global settings.
            </summary>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetGeneralSettings( responseFields);
              var generalSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.GeneralSettingsClient.UpdateGeneralSettingsClient(Mozu.Api.Contracts.SiteSettings.General.GeneralSettings,System.String)">
            <summary>
            Updates a site's general global settings.
            </summary>
            <param name="responseFields"></param>
            <param name="generalSettings">The properties of the site's general settings to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateGeneralSettings( generalSettings,  responseFields);
              var generalSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.LocationUsageClient">
            <summary>
            Use the Location Usages resource to define the locations and location types that interact with the specified site. The system creates three default location usage types for each site after provisioning a new tenant - one for direct ship (DS), one for in-store pickup (SP), and one for store finder (storeFinder). Each site can only use a single location for the direct ship location usage type, and the location must support the direct ship fulfillment type (DS). For the in-store pickup location usage type, each site can use one or more location types. The location service identifies all locations of the specified type that support the in-store pickup fulfillment type (SP). For the store finder location usage type, each site can use one or more location types. The location service identifies all locations of the type. Locations configured for the store finder type do not typically maintain inventory. You cannot create additional location usage types at this time.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.LocationUsageClient.GetLocationUsagesClient">
            <summary>
            Retrieves the configured site location usages for the location usage code specified in the request.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.LocationUsageCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationUsages();
              var locationUsageCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.LocationUsageClient.GetLocationUsageClient(System.String)">
            <summary>
            Retrieves the location usages for the site specified in the request header.
            </summary>
            <param name="code">Code that identifies the location usage type, which is "DS" for direct ship, "SP" for in-store pickup, or "storeFinder" for store finder.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.LocationUsage"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetLocationUsage( code);
              var locationUsageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.LocationUsageClient.UpdateLocationUsageClient(Mozu.Api.Contracts.Location.LocationUsage,System.String)">
            <summary>
            Updates the location usage for the site based on the location usage code specified in the request.
            </summary>
            <param name="code">Code that identifies the location usage type, which is "DS" for direct ship, "SP" for in-store pickup, or "storeFinder" for store finder.</param>
            <param name="usage">Properties of the location usage type to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Location.LocationUsage"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateLocationUsage( usage,  code);
              var locationUsageClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.Shipping.SiteShippingHandlingFeeClient">
            <summary>
            Use the Order Handling Fee subresource to configure any shipping and handling fees to apply to orders for this site.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Shipping.SiteShippingHandlingFeeClient.GetOrderHandlingFeeClient(System.String)">
            <summary>
            Retrieves the details of the order handling fee configured for the site.
            </summary>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetOrderHandlingFee( responseFields);
              var siteShippingHandlingFeeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Shipping.SiteShippingHandlingFeeClient.CreateOrderHandlingFeeClient(Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee,System.String)">
            <summary>
            Creates a new order handling fee for the site.
            </summary>
            <param name="responseFields"></param>
            <param name="orderHandlingFee">Properties of the order handling fee to assess for order shipment.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateOrderHandlingFee( orderHandlingFee,  responseFields);
              var siteShippingHandlingFeeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.Shipping.SiteShippingHandlingFeeClient.UpdateOrderHandlingFeeClient(Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee,System.String)">
            <summary>
            Updates the order handling fee amount for the site.
            </summary>
            <param name="responseFields"></param>
            <param name="orderHandlingFee">The combined price for all items in the order, including all selected options but excluding any discounts.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateOrderHandlingFee( orderHandlingFee,  responseFields);
              var siteShippingHandlingFeeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Settings.SiteShippingSettingsClient">
            <summary>
            Use the shipping subresource to manage settings for the site shipping information, such as origin address information, carrier shipping methods, shipping rate providers, and regions available for shipping.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Settings.SiteShippingSettingsClient.GetSiteShippingSettingsClient(System.String)">
            <summary>
            Retrieves a list of the shipping settings configured for a site.
            </summary>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetSiteShippingSettings( responseFields);
              var siteShippingSettingsClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.WishlistClient">
            <summary>
            Use the Wish Lists resource to manage the shopper wish lists of products associated with a customer account. Although customer accounts are managed at the tenant level, the system stores shopper wish lists at the site level. This enables the same customer to have wish lists for each of a merchant's sites. Use the Wish List Items resource to manage items in a wish list.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.WishlistClient.GetWishlistsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a list of shopper wish lists according to any filter and sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of search terms to use in the query when searching across wish list name. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetWishlists( startIndex,  pageSize,  sortBy,  filter,  q,  qLimit,  responseFields);
              var wishlistCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.WishlistClient.GetWishlistClient(System.String,System.String)">
            <summary>
            Retrieves the details of the shopper wish list specified in the request.
            </summary>
            <param name="responseFields"></param>
            <param name="wishlistId">Unique identifier of the shopper wish list to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetWishlist( wishlistId,  responseFields);
              var wishlistClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.WishlistClient.GetWishlistByNameClient(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the details of a wish list by supplying the wish list name.
            </summary>
            <param name="customerAccountId">The unique identifier of the customer account for which to retrieve wish lists.</param>
            <param name="responseFields"></param>
            <param name="wishlistName">The name of the wish list to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetWishlistByName( customerAccountId,  wishlistName,  responseFields);
              var wishlistClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.WishlistClient.CreateWishlistClient(Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist,System.String)">
            <summary>
            Creates a new shopper wish list for the associated customer account. Although customer accounts are maintained at the tenant level, the system stores wish lists at the site level. Newly created wish lists do not have any items.
            </summary>
            <param name="responseFields"></param>
            <param name="wishlist">Properties of the wish list to create.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateWishlist( wishlist,  responseFields);
              var wishlistClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.WishlistClient.UpdateWishlistClient(Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist,System.String,System.String)">
            <summary>
            Updates one or more properties of a shopper wish list defined for a customer account.
            </summary>
            <param name="responseFields"></param>
            <param name="wishlistId">Unique identifier of the shopper wish list to update.</param>
            <param name="wishlist">Properties of the shopper wish list to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateWishlist( wishlist,  wishlistId,  responseFields);
              var wishlistClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.WishlistClient.DeleteWishlistClient(System.String)">
             <summary>
             Deletes the shopper wish list specified in the request and all items associated with it.
             </summary>
             <param name="wishlistId">Unique identifier of the wish list to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteWishlist( wishlistId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Commerce.Wishlists.WishlistItemClient">
            <summary>
            Use the Wish List Items subresource to manage items in a shopper wish list. The same product can be defined as an item in any number of wish lists for the customer account. Use the Wish Lists resource to manage shopper wish lists.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Wishlists.WishlistItemClient.GetWishlistItemClient(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of an item in a shopper wish list.
            </summary>
            <param name="responseFields"></param>
            <param name="wishlistId">Unique identifier of the wish list item to retrieve.</param>
            <param name="wishlistItemId">Unique identifier of the wish list associated with the item to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetWishlistItem( wishlistId,  wishlistItemId,  responseFields);
              var wishlistItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Wishlists.WishlistItemClient.GetWishlistItemsClient(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of items in a shopper wish list according to any specified filter and sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="wishlistId">Unique identifier of the wish list associated with the items to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetWishlistItems( wishlistId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var wishlistItemCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Wishlists.WishlistItemClient.GetWishlistItemsByWishlistNameClient(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieve a list of items in a customer wish list by supplying the wish list name.
            </summary>
            <param name="customerAccountId">The unique identifier of the customer account associated with the wish list.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="wishlistName">The name of the wish list that contains the items to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetWishlistItemsByWishlistName( customerAccountId,  wishlistName,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var wishlistItemCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Wishlists.WishlistItemClient.AddItemToWishlistClient(Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem,System.String,System.String)">
            <summary>
            Adds a product in a site's catalog as an item in a shopper wish list.
            </summary>
            <param name="responseFields"></param>
            <param name="wishlistId">Unique identifier of the wish list associated with the item to add.</param>
            <param name="wishlistItem">Properties of the item to add to the wish list.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AddItemToWishlist( wishlistItem,  wishlistId,  responseFields);
              var wishlistItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Wishlists.WishlistItemClient.UpdateWishlistItemQuantityClient(System.String,System.String,System.Int32,System.String)">
            <summary>
            Updates the quantity of an item in a shopper wish list.
            </summary>
            <param name="quantity">The quantity of the item in the wish list.</param>
            <param name="responseFields"></param>
            <param name="wishlistId">Unique identifier of the wish list associated with the item quantity to update.</param>
            <param name="wishlistItemId">Unique identifier of the item in the wish list to update quantity.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateWishlistItemQuantity( wishlistId,  wishlistItemId,  quantity,  responseFields);
              var wishlistItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Wishlists.WishlistItemClient.UpdateWishlistItemClient(Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem,System.String,System.String,System.String)">
            <summary>
            Updates the details of an item in a shopper wish list.
            </summary>
            <param name="responseFields"></param>
            <param name="wishlistId">Unique identifier of the wish list associated with the item to update.</param>
            <param name="wishlistItemId">Unique identifier of the item in the shopper wish list to update.</param>
            <param name="wishlistItem">Properties of the shopper wish list item to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateWishlistItem( wishlistItem,  wishlistId,  wishlistItemId,  responseFields);
              var wishlistItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Wishlists.WishlistItemClient.RemoveAllWishlistItemsClient(System.String)">
            <summary>
            Removes all items associated with a shopper wish list.
            </summary>
            <param name="wishlistId">Unique identifier of the wish list associated with the items to remove.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RemoveAllWishlistItems( wishlistId);
              var wishlistClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Commerce.Wishlists.WishlistItemClient.DeleteWishlistItemClient(System.String,System.String)">
             <summary>
             Removes an item from the wish list specified in the request.
             </summary>
             <param name="wishlistId">Unique identifier of the wish list associated with the item to remove.</param>
             <param name="wishlistItemId">Unique identifier of the item to remove from the shopper wish list.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteWishlistItem( wishlistId,  wishlistItemId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.DocumentDraftSummaryClient">
            <summary>
            Use the document publishing subresource to manage and publish document drafts in the Content service.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentDraftSummaryClient.ListDocumentDraftSummariesClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of the documents currently in draft state, according to any defined filter and sort criteria.
            </summary>
            <param name="documentLists">Lists that contain the document drafts.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=ListDocumentDraftSummaries( pageSize,  startIndex,  documentLists,  responseFields);
              var documentDraftSummaryPagedCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentDraftSummaryClient.DeleteDocumentDraftsClient(System.Collections.Generic.List{System.String},System.String)">
             <summary>
             Deletes the drafts of the specified documents. Published documents cannot be deleted.
             </summary>
             <param name="documentLists">List of document lists that contain documents to delete.</param>
             <param name="documentIds">Unique identifiers of the documents to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDocumentDrafts( documentIds,  documentLists);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentDraftSummaryClient.PublishDocumentsClient(System.Collections.Generic.List{System.String},System.String)">
             <summary>
             Publish one or more document drafts to live content on the site.
             </summary>
             <param name="documentLists">List of document lists that contain documents to publish.</param>
             <param name="documentIds">List of unique identifiers of the document drafts to publish.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=PublishDocuments( documentIds,  documentLists);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.DocumentListClient">
            <summary>
            Use the document lists resource to organize your site's documents into a hierarchy. Document lists can contain documents, folders, and complete hierarchies of folders, which contain documents with unique names.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentListClient.GetDocumentListsClient(Mozu.Api.DataViewMode,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a collection of document lists.
            </summary>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentListCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocumentLists(dataViewMode,  pageSize,  startIndex,  responseFields);
              var documentListCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentListClient.GetDocumentListClient(Mozu.Api.DataViewMode,System.String,System.String)">
            <summary>
            Retrieve the details of a document list by providing the list name.
            </summary>
            <param name="documentListName">The name of the document list.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentList"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocumentList(dataViewMode,  documentListName,  responseFields);
              var documentListClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentListClient.CreateDocumentListClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.Content.DocumentList,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="list"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentList"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateDocumentList(dataViewMode,  list,  responseFields);
              var documentListClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentListClient.UpdateDocumentListClient(Mozu.Api.Contracts.Content.DocumentList,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="documentListName"></param>
            <param name="responseFields"></param>
            <param name="list"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentList"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDocumentList( list,  documentListName,  responseFields);
              var documentListClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentListClient.LegacyR4_UpdateDocumentContentClient(System.IO.Stream,System.String,System.String)">
             <summary>
             
             </summary>
             <param name="documentId"></param>
             <param name="stream"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=LegacyR4_UpdateDocumentContent( stream,  documentId,  contentType);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentListClient.DeleteDocumentListClient(System.String)">
             <summary>
             
             </summary>
             <param name="documentListName"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDocumentList( documentListName);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.Documentlists.DocumentClient">
            <summary>
            Use this subresource to manage documents in a document list.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.GetDocumentContentClient(Mozu.Api.DataViewMode,System.String,System.String)">
            <summary>
            Retrieve the content associated with a document, such as a product image or PDF specifications file, by supplying the document ID.
            </summary>
            <param name="documentId">Unique identifier of the document.</param>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:System.IO.Stream"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocumentContent(dataViewMode,  documentListName,  documentId);
              var streamClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.GetDocumentClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            Retrieves a document within the specified document list.
            </summary>
            <param name="documentId">Identifier of the document being retrieved.</param>
            <param name="documentListName">The name of the document list associated with the document to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.Document"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocument(dataViewMode,  documentListName,  documentId,  responseFields);
              var documentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.GetDocumentsClient(Mozu.Api.DataViewMode,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a collection of documents according to any filter and sort criteria.
            </summary>
            <param name="documentListName">The name of the document list.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter a document's search results by any of its properties, including its name or folder path. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=Name+sw+Events"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocuments(dataViewMode,  documentListName,  filter,  sortBy,  pageSize,  startIndex,  responseFields);
              var documentCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.CreateDocumentClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.Content.Document,System.String,System.String)">
            <summary>
            Creates a new document in an defined document list.
            </summary>
            <param name="documentListName">The descriptive alphanumeric document list name being created.</param>
            <param name="responseFields"></param>
            <param name="document">The descriptive name of the newly created document.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.Document"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateDocument(dataViewMode,  document,  documentListName,  responseFields);
              var documentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.UpdateDocumentContentClient(System.IO.Stream,System.String,System.String,System.String)">
             <summary>
             Updates the content associated with a document, such as a product image or PDF specifications file, by supplying the document ID.
             </summary>
             <param name="documentId">Unique identifier of the document.</param>
             <param name="documentListName">The name of the document list associated with the document.</param>
             <param name="stream">Input output stream that delivers information.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=UpdateDocumentContent( stream,  documentListName,  documentId,  contentType);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.UpdateDocumentClient(Mozu.Api.Contracts.Content.Document,System.String,System.String,System.String)">
            <summary>
            Updates a document in a document list.
            </summary>
            <param name="documentId">Unique identifier of the document to update.</param>
            <param name="documentListName">Name of the document list associated with the document.</param>
            <param name="responseFields"></param>
            <param name="document">Properties of the document to update.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.Document"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDocument( document,  documentListName,  documentId,  responseFields);
              var documentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.DeleteDocumentClient(System.String,System.String)">
             <summary>
             Deletes a specific document based on the specified document ID.
             </summary>
             <param name="documentId">Identifier of the document being deleted.</param>
             <param name="documentListName">The name of the document list associated with the document list being deleted.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDocument( documentListName,  documentId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentClient.DeleteDocumentContentClient(System.String,System.String)">
             <summary>
             Deletes the content associated with a document, such as a product image or PDF specification, by supplying the document ID.
             </summary>
             <param name="documentId">Unique identifier of the document.</param>
             <param name="documentListName">The name of the document list associated with the document.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDocumentContent( documentListName,  documentId);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.Documentlists.DocumentTreeClient">
            <summary>
            Use the document tree subresource to retrieve documents and manage content within the document hierarchy.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentTreeClient.GetTreeDocumentContentClient(Mozu.Api.DataViewMode,System.String,System.String)">
            <summary>
            Retrieve the content associated with the document, such as a product image or PDF specifications file.
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:System.IO.Stream"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetTreeDocumentContent(dataViewMode,  documentListName,  documentName);
              var streamClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentTreeClient.GetTreeDocumentClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            Retrieves a document based on its document list and folder path in the document hierarchy.
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.Document"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetTreeDocument(dataViewMode,  documentListName,  documentName,  responseFields);
              var documentClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentTreeClient.UpdateTreeDocumentContentClient(System.IO.Stream,System.String,System.String,System.String)">
             <summary>
             Updates the content associated with a document, such as a product image or PDF specifications file, based on the document's position in the document hierarchy.
             </summary>
             <param name="documentListName">The name of the document list associated with the document.</param>
             <param name="documentName">The name of the document, which is unique within its folder.</param>
             <param name="stream">Input output stream that delivers information.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=UpdateTreeDocumentContent( stream,  documentListName,  documentName,  contentType);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.DocumentTreeClient.DeleteTreeDocumentContentClient(System.IO.Stream,System.String,System.String,System.String)">
             <summary>
             Deletes the content associated with a document, such as a product image or PDF specifications file.
             </summary>
             <param name="documentListName">The name of the document list associated with the document.</param>
             <param name="documentName">The name of the document, which is unique within its folder.</param>
             <param name="stream">Input output stream that delivers information.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteTreeDocumentContent( stream,  documentListName,  documentName,  contentType);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.Documentlists.FacetClient">
            <summary>
            Use the facets subresource to allow a merchant to add information for product indexing and searching.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.FacetClient.GetFacetsClient(System.String,System.String)">
            <summary>
            Retrieves the properties of facets that aid in indexing and searching.
            </summary>
            <param name="documentListName">The document list associated with the facets to retrieve.</param>
            <param name="propertyName">The property name associated with the facets to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{List{<see cref="T:Mozu.Api.Contracts.Content.Facet"/>}}
            </returns>
            <example>
            <code>
              var mozuClient=GetFacets( documentListName,  propertyName);
              var facetClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.Documentlists.ViewClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.ViewClient.GetViewDocumentsClient(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            
            </summary>
            <param name="documentListName"></param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="viewName"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetViewDocuments( documentListName,  viewName,  filter,  sortBy,  pageSize,  startIndex,  responseFields);
              var documentCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.ViewClient.GetDocumentListViewClient(Mozu.Api.DataViewMode,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="documentListName"></param>
            <param name="responseFields"></param>
            <param name="viewName"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.View"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocumentListView(dataViewMode,  documentListName,  viewName,  responseFields);
              var viewClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.ViewClient.GetDocumentListViewsClient(Mozu.Api.DataViewMode,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="documentListName"></param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.ViewCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocumentListViews(dataViewMode,  documentListName,  responseFields);
              var viewCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.ViewClient.UpdateDocumentListViewClient(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="documentListName"></param>
            <param name="responseFields"></param>
            <param name="viewName"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.View"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDocumentListView( documentListName,  viewName,  responseFields);
              var viewClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.Documentlists.ViewClient.DeleteDocumentListViewClient(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="documentListName"></param>
            <param name="viewName"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.View"/>}
            </returns>
            <example>
            <code>
              var mozuClient=DeleteDocumentListView( documentListName,  viewName);
              var viewClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.DocumentListTypeClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentListTypeClient.CreateDocumentListTypeClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.Content.DocumentListType,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="list"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentListType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateDocumentListType(dataViewMode,  list,  responseFields);
              var documentListTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentListTypeClient.UpdateDocumentListTypeClient(Mozu.Api.Contracts.Content.DocumentListType,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="documentListTypeFQN"></param>
            <param name="responseFields"></param>
            <param name="list"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentListType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDocumentListType( list,  documentListTypeFQN,  responseFields);
              var documentListTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.DocumentTypeClient">
            <summary>
            Use the Document Types resource to view the document types supplied by the Content API.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentTypeClient.GetDocumentTypesClient(Mozu.Api.DataViewMode,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            
            </summary>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentTypeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocumentTypes(dataViewMode,  pageSize,  startIndex,  responseFields);
              var documentTypeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentTypeClient.GetDocumentTypeClient(Mozu.Api.DataViewMode,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="documentTypeName"></param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDocumentType(dataViewMode,  documentTypeName,  responseFields);
              var documentTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentTypeClient.CreateDocumentTypeClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.Content.DocumentType,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="documentType"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateDocumentType(dataViewMode,  documentType,  responseFields);
              var documentTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.DocumentTypeClient.UpdateDocumentTypeClient(Mozu.Api.Contracts.Content.DocumentType,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="documentTypeName"></param>
            <param name="responseFields"></param>
            <param name="documentType"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.DocumentType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateDocumentType( documentType,  documentTypeName,  responseFields);
              var documentTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Content.PropertyTypeClient">
            <summary>
            Use the property types subresource to manage content properties.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Content.PropertyTypeClient.GetPropertyTypesClient(Mozu.Api.DataViewMode,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            
            </summary>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.PropertyTypeCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPropertyTypes(dataViewMode,  pageSize,  startIndex,  responseFields);
              var propertyTypeCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.PropertyTypeClient.GetPropertyTypeClient(Mozu.Api.DataViewMode,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="propertyTypeName"></param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.PropertyType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetPropertyType(dataViewMode,  propertyTypeName,  responseFields);
              var propertyTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.PropertyTypeClient.CreatePropertyTypeClient(Mozu.Api.Contracts.Content.PropertyType,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="propertyType"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.PropertyType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreatePropertyType( propertyType,  responseFields);
              var propertyTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.PropertyTypeClient.UpdatePropertyTypeClient(Mozu.Api.DataViewMode,Mozu.Api.Contracts.Content.PropertyType,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="propertyTypeName"></param>
            <param name="responseFields"></param>
            <param name="propertyType"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Content.PropertyType"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdatePropertyType(dataViewMode,  propertyType,  propertyTypeName,  responseFields);
              var propertyTypeClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Content.PropertyTypeClient.DeletePropertyTypeClient(Mozu.Api.DataViewMode,System.String)">
             <summary>
             
             </summary>
             <param name="propertyTypeName"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeletePropertyType(dataViewMode,  propertyTypeName);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Event.EventNotificationClient">
            <summary>
            Events are notifications Mozu publishes to the application when a create, read, update, or delete operation is performed. If the application subscribes to the event, you can use the Events resource to query for recent events Mozu published to your application or events that were not published successfully.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Event.EventNotificationClient.GetEventsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of events.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Event.EventCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEvents( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var eventCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Event.EventNotificationClient.GetEventClient(System.String,System.String)">
            <summary>
            Retrieves an event by providing the event ID.
            </summary>
            <param name="eventId">The unique identifier of the event being retrieved. An event is a notification about a create, read, update, or delete on an order, product, discount or category.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Event.Event"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEvent( eventId,  responseFields);
              var eventClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Event.Push.SubscriptionClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Event.Push.SubscriptionClient.GetSubscriptionsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Event.SubscriptionCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetSubscriptions( startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var subscriptionCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Event.Push.Subscriptions.EventDeliverySummaryClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Event.Push.Subscriptions.EventDeliverySummaryClient.GetDeliveryAttemptSummaryClient(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="responseFields"></param>
            <param name="subscriptionId"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Event.EventDeliverySummary"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDeliveryAttemptSummary( subscriptionId,  id,  responseFields);
              var eventDeliverySummaryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Event.Push.Subscriptions.EventDeliverySummaryClient.GetDeliveryAttemptSummariesClient(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="subscriptionId"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Event.EventDeliverySummaryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetDeliveryAttemptSummaries( subscriptionId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
              var eventDeliverySummaryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.Adminuser.AdminUserClient">
            <summary>
            Displays the user accounts and account details associated with a developer or Mozu tenant administrator. Email addresses uniquely identify admin user accounts.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Adminuser.AdminUserClient.GetTenantScopesForUserClient(System.String,System.String)">
            <summary>
            Retrieves a list of the Mozu tenants or development stores for which the specified user has an assigned role.
            </summary>
            <param name="responseFields"></param>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Tenant.TenantCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetTenantScopesForUser( userId,  responseFields);
              var tenantCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Adminuser.AdminUserClient.GetUserClient(System.String,System.String)">
            <summary>
            Retrieves the details of the specified administrator user account.
            </summary>
            <param name="responseFields"></param>
            <param name="userId">Unique identifier of the administrator account to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.User"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetUser( userId,  responseFields);
              var userClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.Adminuser.TenantAdminUserAuthTicketClient">
            <summary>
            Use the Admin User authentication tickets resource to generate and refresh authentication tickets that enable Mozu administrator or developer account users to access development or production tenants.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Adminuser.TenantAdminUserAuthTicketClient.CreateUserAuthTicketClient(Mozu.Api.Contracts.Core.UserAuthInfo,System.Nullable{System.Int32},System.String)">
            <summary>
            Creates an authentication ticket for the supplied user to specify in API requests associated with the supplied tenant.
            </summary>
            <param name="responseFields"></param>
            <param name="tenantId">Unique identifier of the development or production tenant for which to generate the user authentication ticket.</param>
            <param name="userAuthInfo">The user authentication information required to generate the user authentication ticket, which consists of a user name and password.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateUserAuthTicket( userAuthInfo,  tenantId,  responseFields);
              var tenantAdminUserAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Adminuser.TenantAdminUserAuthTicketClient.RefreshAuthTicketClient(Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket,System.Nullable{System.Int32},System.String)">
            <summary>
            Generates a new user authentication ticket for the specified tenant by supplying the user's existing refresh token information.
            </summary>
            <param name="responseFields"></param>
            <param name="tenantId"></param>
            <param name="existingAuthTicket">Properties of the authentication ticket to refresh. The refresh token is required to complete this request.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RefreshAuthTicket( existingAuthTicket,  tenantId,  responseFields);
              var tenantAdminUserAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Adminuser.TenantAdminUserAuthTicketClient.DeleteUserAuthTicketClient(System.String)">
             <summary>
             Deletes the authentication ticket for the user by supplying the refresh token.
             </summary>
             <param name="refreshToken">Refresh token string associated with the user authentication ticket.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteUserAuthTicket( refreshToken);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.ApplicationClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ApplicationClient.GetApplicationClient(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.InstalledApplications.Application"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetApplication( appId,  responseFields);
              var applicationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ApplicationClient.UpdateApplicationClient(Mozu.Api.Contracts.InstalledApplications.Application,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="responseFields"></param>
            <param name="application"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.InstalledApplications.Application"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateApplication( application,  appId,  responseFields);
              var applicationClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.Applications.AuthTicketClient">
            <summary>
            Use this resource to manage authentication tickets for your applications.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Applications.AuthTicketClient.AuthenticateAppClient(Mozu.Api.Contracts.AppDev.AppAuthInfo,System.String)">
            <summary>
            Generate an authentication ticket for an application.
            </summary>
            <param name="responseFields"></param>
            <param name="appAuthInfo">Authentication information required to generate an authentication ticket includes the application id and the shared secret.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AppDev.AuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=AuthenticateApp( appAuthInfo,  responseFields);
              var authTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Applications.AuthTicketClient.RefreshAppAuthTicketClient(Mozu.Api.Contracts.AppDev.AuthTicketRequest,System.String)">
            <summary>
            Refreshes the application's authentication ticket and generates a new access token by providing the refresh token string.
            </summary>
            <param name="responseFields"></param>
            <param name="authTicketRequest">The refresh token string required to update the application authentication ticket.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AppDev.AuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RefreshAppAuthTicket( authTicketRequest,  responseFields);
              var authTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Applications.AuthTicketClient.DeleteAppAuthTicketClient(System.String)">
             <summary>
             Deletes an authentication for an application based on the specified refresh token.
             </summary>
             <param name="refreshToken">The refresh token string from the application's authentication ticket.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteAppAuthTicket( refreshToken);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.Developer.DeveloperAdminUserAuthTicketClient">
            <summary>
            Use this resource to manage authentication tickets for your developer account.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Developer.DeveloperAdminUserAuthTicketClient.CreateDeveloperUserAuthTicketClient(Mozu.Api.Contracts.Core.UserAuthInfo,System.Nullable{System.Int32},System.String)">
            <summary>
            Generate an authentication ticket for a developer account.
            </summary>
            <param name="developerAccountId">Unique identifier of the developer account.</param>
            <param name="responseFields"></param>
            <param name="userAuthInfo">The user authentication information required to generate the developer account user authentication ticket, which consists of a user name and password.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateDeveloperUserAuthTicket( userAuthInfo,  developerAccountId,  responseFields);
              var developerAdminUserAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Developer.DeveloperAdminUserAuthTicketClient.RefreshDeveloperAuthTicketClient(Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket,System.Nullable{System.Int32},System.String)">
            <summary>
            Generates a new developer account authentication ticket for the specified tenant by supplying the defined refresh token information.
            </summary>
            <param name="developerAccountId">Unique identifier of the developer account.</param>
            <param name="responseFields"></param>
            <param name="existingAuthTicket">Properties of the authentication ticket to refresh. The refresh token is required to complete this request.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket"/>}
            </returns>
            <example>
            <code>
              var mozuClient=RefreshDeveloperAuthTicket( existingAuthTicket,  developerAccountId,  responseFields);
              var developerAdminUserAuthTicketClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Developer.DeveloperAdminUserAuthTicketClient.DeleteUserAuthTicketClient(System.String)">
             <summary>
             Deletes the authentication ticket for the developer account by supplying the refresh token.
             </summary>
             <param name="refreshToken">Refresh token string associated with the developer account authentication ticket.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteUserAuthTicket( refreshToken);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.EntityListClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.EntityListClient.GetEntityListsClient(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.EntityListCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEntityLists( pageSize,  startIndex,  filter,  sortBy,  responseFields);
              var entityListCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.EntityListClient.GetEntityListClient(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.EntityList"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEntityList( entityListFullName,  responseFields);
              var entityListClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.EntityListClient.CreateEntityListClient(Mozu.Api.Contracts.MZDB.EntityList,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="entityList"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.EntityList"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateEntityList( entityList,  responseFields);
              var entityListClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.EntityListClient.UpdateEntityListClient(Mozu.Api.Contracts.MZDB.EntityList,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <param name="entityList"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.EntityList"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateEntityList( entityList,  entityListFullName,  responseFields);
              var entityListClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.EntityListClient.DeleteEntityListClient(System.String)">
             <summary>
             
             </summary>
             <param name="entityListFullName"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteEntityList( entityListFullName);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.Entitylists.EntityClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.EntityClient.GetEntityClient(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="id"></param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{JObject}
            </returns>
            <example>
            <code>
              var mozuClient=GetEntity( entityListFullName,  id,  responseFields);
              var jsonClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.EntityClient.GetEntitiesClient(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.EntityCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEntities( entityListFullName,  pageSize,  startIndex,  filter,  sortBy,  responseFields);
              var entityCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.EntityClient.InsertEntityClient(Newtonsoft.Json.Linq.JObject,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <param name="item"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{JObject}
            </returns>
            <example>
            <code>
              var mozuClient=InsertEntity( item,  entityListFullName,  responseFields);
              var jsonClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.EntityClient.UpdateEntityClient(Newtonsoft.Json.Linq.JObject,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="id"></param>
            <param name="responseFields"></param>
            <param name="item"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{JObject}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateEntity( item,  entityListFullName,  id,  responseFields);
              var jsonClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.EntityClient.DeleteEntityClient(System.String,System.String)">
             <summary>
             
             </summary>
             <param name="entityListFullName"></param>
             <param name="id"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteEntity( entityListFullName,  id);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.Entitylists.EntityContainerClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.EntityContainerClient.GetEntityContainerClient(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="id"></param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.EntityContainer"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEntityContainer( entityListFullName,  id,  responseFields);
              var entityContainerClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.EntityContainerClient.GetEntityContainersClient(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.EntityContainerCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEntityContainers( entityListFullName,  pageSize,  startIndex,  filter,  sortBy,  responseFields);
              var entityContainerCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.Entitylists.ListViewClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.ListViewClient.GetViewEntityClient(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityId"></param>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <param name="viewName"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{JObject}
            </returns>
            <example>
            <code>
              var mozuClient=GetViewEntity( entityListFullName,  viewName,  entityId,  responseFields);
              var jsonClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.ListViewClient.GetViewEntitiesClient(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="startIndex"></param>
            <param name="viewName"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.EntityCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetViewEntities( entityListFullName,  viewName,  pageSize,  startIndex,  filter,  responseFields);
              var entityCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.ListViewClient.GetViewEntityContainerClient(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityId"></param>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <param name="viewName"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.EntityContainer"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetViewEntityContainer( entityListFullName,  viewName,  entityId,  responseFields);
              var entityContainerClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.ListViewClient.GetViewEntityContainersClient(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="startIndex"></param>
            <param name="viewName"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.EntityContainerCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetViewEntityContainers( entityListFullName,  viewName,  pageSize,  startIndex,  filter,  responseFields);
              var entityContainerCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.ListViewClient.GetEntityListViewClient(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <param name="viewName"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.ListView"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEntityListView( entityListFullName,  viewName,  responseFields);
              var listViewClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.ListViewClient.GetEntityListViewsClient(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.ListViewCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetEntityListViews( entityListFullName,  responseFields);
              var listViewCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.ListViewClient.CreateEntityListViewClient(Mozu.Api.Contracts.MZDB.ListView,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <param name="listView"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.ListView"/>}
            </returns>
            <example>
            <code>
              var mozuClient=CreateEntityListView( listView,  entityListFullName,  responseFields);
              var listViewClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.ListViewClient.UpdateEntityListViewClient(Mozu.Api.Contracts.MZDB.ListView,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <param name="viewName"></param>
            <param name="listView"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.MZDB.ListView"/>}
            </returns>
            <example>
            <code>
              var mozuClient=UpdateEntityListView( listView,  entityListFullName,  viewName,  responseFields);
              var listViewClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.Entitylists.ListViewClient.DeleteEntityListViewClient(System.String,System.String)">
             <summary>
             
             </summary>
             <param name="entityListFullName"></param>
             <param name="viewName"></param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteEntityListView( entityListFullName,  viewName);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.ReferenceDataClient">
            <summary>
            The Reference resource retrieves collections of standards the Mozu system currently supports. This includes content locales, top-level domains, units of measure, countries, currencies, time zones, and shipping or billing address schemas.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetAddressSchemaClient(System.String)">
            <summary>
            Retrieves a specific address schema based on the country code provided. This operation allows the creation of custom shipping and billing address fields.
            </summary>
            <param name="countryCode">The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.AddressSchema"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAddressSchema( countryCode);
              var addressSchemaClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetAddressSchemasClient">
            <summary>
            Retrieves the entire list of address schemas that the system supports.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.AddressSchemaCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetAddressSchemas();
              var addressSchemaCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetBehaviorClient(System.Int32)">
            <summary>
            Retrieves the details of a behavior based on the behavior ID specified in the request.
            </summary>
            <param name="behaviorId">Unique identifier of the behavior.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.Behavior"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetBehavior( behaviorId);
              var behaviorClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetBehaviorCategoriesClient">
            <summary>
            Retrieves the list of behavior categories.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.BehaviorCategoryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetBehaviorCategories();
              var behaviorCategoryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetBehaviorCategoryClient(System.Int32)">
            <summary>
            Retrieves the details of the behavior category specified in the request.
            </summary>
            <param name="categoryId">Unique identifier of the behavior category.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.BehaviorCategory"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetBehaviorCategory( categoryId);
              var behaviorCategoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetBehaviorsClient(System.String)">
            <summary>
            Retrieves a list of application behaviors.
            </summary>
            <param name="userType">The user type associated with the behaviors to retrieve.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Core.BehaviorCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetBehaviors( userType);
              var behaviorCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetContentLocalesClient">
            <summary>
            Retrieves the list of content locales the system supports. Content locales indicate the language used and the country where the language is used.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.ContentLocaleCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetContentLocales();
              var contentLocaleCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetCountriesClient">
            <summary>
            Retrieves the entire list of countries that the system supports.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.CountryCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCountries();
              var countryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetCurrenciesClient">
            <summary>
            Retrieves the entire list of currencies that the system supports.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.CurrencyCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetCurrencies();
              var currencyCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetTimeZonesClient">
            <summary>
            Retrieves the entire list of time zones that the system supports.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.TimeZoneCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetTimeZones();
              var timeZoneCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetTopLevelDomainsClient">
            <summary>
            Retrieves the entire list of top-level internet domains that the system supports.
            </summary>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.TopLevelDomainCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetTopLevelDomains();
              var topLevelDomainCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.ReferenceDataClient.GetUnitsOfMeasureClient(System.String)">
            <summary>
            Retrieves an array list of all units of measure the system supports.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Reference.UnitOfMeasureCollection"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetUnitsOfMeasure( filter);
              var unitOfMeasureCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.SiteDataClient">
            <summary>
            Use the site data resource to store site-level information required for a third-party application in the Mozu database.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.SiteDataClient.GetDBValueClient(System.String,System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry query string used to retrieve the record information.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{string}
            </returns>
            <example>
            <code>
              var mozuClient=GetDBValue( dbEntryQuery,  responseFields);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.SiteDataClient.CreateDBValueClient(System.String,System.String)">
             <summary>
             Creates a new record in the Mozu database based on the information supplied in the request.
             </summary>
             <param name="dbEntryQuery">The database entry string to create.</param>
             <param name="value">The value string to create.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=CreateDBValue( value,  dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.SiteDataClient.UpdateDBValueClient(System.String,System.String)">
             <summary>
             Updates a record in the Mozu database based on the information supplied in the request.
             </summary>
             <param name="dbEntryQuery">The database entry query string used to update the record information.</param>
             <param name="value">The database value to update.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=UpdateDBValue( value,  dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.SiteDataClient.DeleteDBValueClient(System.String)">
             <summary>
             Removes a previously defined record in the Mozu database.
             </summary>
             <param name="dbEntryQuery">The database entry string to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDBValue( dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.TenantClient">
            <summary>
            Use the tenants resource to manage information about a Mozu tenant.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.TenantClient.GetTenantClient(System.Int32,System.String)">
            <summary>
            Retrieve details about a specific tenant by providing the tenant ID.
            </summary>
            <param name="responseFields"></param>
            <param name="tenantId">Unique identifier of the Mozu tenant.</param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{<see cref="T:Mozu.Api.Contracts.Tenant.Tenant"/>}
            </returns>
            <example>
            <code>
              var mozuClient=GetTenant( tenantId,  responseFields);
              var tenantClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.TenantDataClient">
            <summary>
            Use the tenant data resource to store tenant-level information required for a third-party application in the Mozu database.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.TenantDataClient.GetDBValueClient(System.String,System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry query string used to retrieve the record information.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{string}
            </returns>
            <example>
            <code>
              var mozuClient=GetDBValue( dbEntryQuery,  responseFields);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.TenantDataClient.CreateDBValueClient(System.String,System.String)">
             <summary>
             Creates a new record in the Mozu database based on the information supplied in the request.
             </summary>
             <param name="dbEntryQuery">The database entry string to create.</param>
             <param name="value">The value string to create.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=CreateDBValue( value,  dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.TenantDataClient.UpdateDBValueClient(System.String,System.String)">
             <summary>
             Updates a record in the Mozu database based on the information supplied in the request.
             </summary>
             <param name="dbEntryQuery">The database entry query string used to update the record information.</param>
             <param name="value">The database value to update.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=UpdateDBValue( value,  dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.TenantDataClient.DeleteDBValueClient(System.String)">
             <summary>
             Removes a previously defined record in the Mozu database.
             </summary>
             <param name="dbEntryQuery">The database entry string to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDBValue( dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Clients.Platform.UserDataClient">
            <summary>
            Use the user data subresource to store user-level data required for a third-party application in the Mozu database.
            </summary>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.UserDataClient.GetDBValueClient(System.String,System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry query string used to retrieve the record information.</param>
            <param name="responseFields"></param>
            <returns>
             <see cref="T:Mozu.Api.MozuClient"/>{string}
            </returns>
            <example>
            <code>
              var mozuClient=GetDBValue( dbEntryQuery,  responseFields);
              var stringClient = mozuClient.WithBaseAddress(url).Execute().Result();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.UserDataClient.CreateDBValueClient(System.String,System.String)">
             <summary>
             Creates a new record in the Mozu database based on the information supplied in the request.
             </summary>
             <param name="dbEntryQuery">The database entry string to create.</param>
             <param name="value">The value string to create.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=CreateDBValue( value,  dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.UserDataClient.UpdateDBValueClient(System.String,System.String)">
             <summary>
             Updates a record in the Mozu database based on the information supplied in the request.
             </summary>
             <param name="dbEntryQuery">The database entry query string used to update the record information.</param>
             <param name="value">The database value to update.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=UpdateDBValue( value,  dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="M:Mozu.Api.Clients.Platform.UserDataClient.DeleteDBValueClient(System.String)">
             <summary>
             Removes a previously defined record in the Mozu database.
             </summary>
             <param name="dbEntryQuery">The database entry string to delete.</param>
             <returns>
              <see cref="T:Mozu.Api.MozuClient"/>
             </returns>
             <example>
             <code>
               var mozuClient=DeleteDBValue( dbEntryQuery);
            mozuClient.WithBaseAddress(url).Execute();
             </code>
             </example>
        </member>
        <member name="T:Mozu.Api.Contracts.AdminUser.DeveloperAccount">
            
            	Properties of a developer account used to build a company's applications and themes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAccount.Id">
            
            Unique identifier of the developer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAccount.Name">
            
            The name of the developer account.
            
        </member>
        <member name="T:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket">
            
            	Properties of the authentication ticket to be used in developer account claims with the Mozu API.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket.AccessToken">
            
            Alphanumeric string used to authenticate the user in API request headers.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket.AccessTokenExpiration">
            
            The date and time the user access token expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket.CreatedOn">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket.GrantedBehaviors">
            
            Collection of behaviors encrypted in the developer account authentication ticket. Behaviors are granted to users as part of the role assigned for the given developer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket.RefreshToken">
            
            Alphanumeric string used to generate a new developer account authentication ticket after the access token expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket.RefreshTokenExpiration">
            
            The date and time the developer account refresh token expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket.Account">
            
            Properties of the developer account for which the user authentication ticket grants access.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket.AvailableAccounts">
            
            Collection of developer accounts for which the user authentication ticket grants access.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket.User">
            
            User information associated with the authentication ticket.
            
        </member>
        <member name="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket">
            
            	Properties of the authentication ticket to be used in user claims with the Mozu API.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.AccessToken">
            
            Alphanumeric string used to authenticate the user in API request headers.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.AccessTokenExpiration">
            
            The date and time the user access token expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.CreatedOn">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.GrantedBehaviors">
            
            Collection of behaviors encrypted in the user authentication ticket. Behaviors are granted to users as part of the role assigned for the given tenant or developer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.RefreshToken">
            
            Alphanumeric string used to generate a new user authentication ticket after the access token expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.RefreshTokenExpiration">
            
            The date and time the user refresh token expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.AvailableTenants">
            
            Collection of tenants for which the user authentication ticket grants access.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.Tenant">
            
            Tenant information associated with the user authentication ticket.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket.User">
            
            User information associated with the authentication ticket.
            
        </member>
        <member name="T:Mozu.Api.Contracts.AppDev.AppAuthInfo">
            
            	The information required to authenticate third party applications against the Mozu API.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AppAuthInfo.ApplicationId">
            
            Unique identifier of the application. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AppAuthInfo.SharedSecret">
            
            System-supplied alphanumeric code used to authenticate applications. This string is only available for viewing in Mozu Dev Center.
            
        </member>
        <member name="T:Mozu.Api.Contracts.AppDev.AuthTicketRequest">
            
            	Properties of the authentication ticket refresh requests, which includes the refresh token string.
            
        </member>
        <member name="P:Mozu.Api.Contracts.AppDev.AuthTicketRequest.RefreshToken">
            
            The refresh token string from the application authentication ticket.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart">
            
            	Properties of a shopping cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ChannelCode">
            
            Code that identifies the channel associated with the site where the shopping cart was created.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.CustomerInteractionType">
            
            The type of customer interaction used to create this shopping cart. Possible values are Website, Call, Store, or Unknown.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.DiscountedSubtotal">
            
            The aggregate total for all items in the cart, including costs associated with shopper-defined options or extras and any applied discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.DiscountedTotal">
            
            The subtotal of the cart including any applied discount calculations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.DiscountTotal">
            
            Estimated amount of discounts applied to all items in the cart, which is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ExpirationDate">
            
            Date in UTC Date/Time when the cart becomes inactive based on a system-calculated interval. For example, if an anonymous shopper has 14 days of inactivity, the cart is considered abandoned after that period of inactivity. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.FeeTotal">
            
            The monetary sum of all fees incurred in the cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.HandlingTaxTotal">
            
            If the handling fee for the cart is subject to sales tax, the total tax amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.Id">
            
            Unique identifier of the shopping cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ItemTaxTotal">
            
            The total amount of tax for items in the cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.LastValidationDate">
            
            The date in UTC Date/Time when the items in the cart were last validated against the site's product catalog. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ShippingSubTotal">
            
            The shipping subtotal amount calculated without any applied discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ShippingTaxTotal">
            
            The total amount of tax incurred on the shipping charges in the cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ShippingTotal">
            
            The total shipping amount estimated for the cart, including tax.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.SiteId">
            
            Unique identifier of the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.Subtotal">
            
            Estimated amount of the cart without sales tax, shipping costs, and other fees.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.TaxTotal">
            
            The total sum of sales tax estimated for a cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.Total">
            
            Estimated total amount of the cart, including items, sales tax, shipping costs, and other fees.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.UserId">
            
            Unique identifier of the user associated with the shopping cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.VisitId">
            
            Unique identifier of the customer visit in which the cart was created or last modified.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.WebSessionId">
            
            Unique identifier of the web session in which the cart was created or last modified.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.ChangeMessages">
            
            Messages logged or created each time the cart was modified.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.FulfillmentInfo">
            
            Properties of the information required to fulfill this cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart.OrderDiscounts">
            
            List of order-level discounts projected to apply to the cart at checkout.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartChangeMessageCollection">
            
            	Collection of messages logged or created each time the cart was modifed.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem">
            
            	Properties of an item added to an active shopping cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.DiscountedTotal">
            
            The subtotal of the cart item including any applied discount calculations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.DiscountTotal">
            
            Estimated amount of discounts applied to the item in the cart, which is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.ExtendedTotal">
            
            Represents the total price of the cart item extended to the shopper. This begins with the Unit Price, then uses any of the following prices if they are defined, in the following order: Override Amount, Sale Amount, List Amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.FeeTotal">
            
            The total amount of all fees incurred for the item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.FulfillmentLocationCode">
            
            The location code associated with the location where this cart item will be fulfilled.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.FulfillmentMethod">
            
            The method used to fulfill this cart item, which is direct ship or in-store pickup.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.Id">
            
            Unique identifier of the cart item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.IsRecurring">
            
            If true, the item can be purchased or fulfilled at regular intervals, such as a monthly billing cycle. For example, digital or physical product subscriptions are recurring cart items. This property is not used at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.IsTaxable">
            
            If true, the entity is subject to tax based on the relevant tax rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.ItemTaxTotal">
            
            The total amount of tax for the item in the cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.Quantity">
            
            The specified quantity of the cart item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.ShippingTaxTotal">
            
            The total amount of tax incurred on the shipping charges in the cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.ShippingTotal">
            
            The estimated total amount of shipping fees for the item in the cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.Subtotal">
            
            Estimated amount of the item in the cart without sales tax, shipping costs, and other fees.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.TaxableTotal">
            
            The amount of the item in the cart that is subject to tax.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.Total">
            
            Estimated total amount of the item, including the product price, sales tax, shipping costs, and other fees.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.Product">
            
            The properties of the associated product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.ProductDiscounts">
            
            List of product-level discounts projected to apply to the cart item at checkout.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.ShippingDiscounts">
            
            List of shipping discounts projected to apply to the cart item at checkout.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem.UnitPrice">
            
            Properties of the unit price associated with the cart item.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItemCollection">
            
            	Collection of items in a cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItemCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItemCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary">
            
            	The properties of an active shopping cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary.HasActiveCart">
            
            If true, this shopping cart is active.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary.IsExpired">
            
            If true, the cart's period of inactivity is past its calculated expiration date and the cart is considered abandoned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary.ItemCount">
            
            The total number of line items in the cart. Each line item can have multiple quantities.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary.Total">
            
            Estimated total amount of the cart, including items, sales tax, shipping costs, and other fees.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel">
            
            	Properties of a channel used to divide a company into logical business divisions, such as "US Retail," "US Online," or "Amazon." All sites and orders are associated with a channel.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel.Code">
            
            User-defined code that uniquely identifies the channel.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel.GroupCode">
            
            User-defined code that identifies the channel group.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel.Name">
            
            User-defined name of the channel.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel.Region">
            
            The geographical region associated with this channel. This region could represent any geographical entity from a state to a continent.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel.SiteIds">
            
            Array list of site identifiers associated with this channel. Each tenant site must have a channel association.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelCollection">
            
            	Paged list of channels defined for a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup">
            
            	Properties of a group of channels that share common information.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup.Code">
            
            User-defined code that identifies the channel group.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup.Name">
            
            User-defined name of the channel group.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection">
            
            	Paged collection of channel groups defined for a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment">
            
            	Properties of an ad-hoc price adjustment for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment.Amount">
            
            The amount of the order-level adjustment, which can be a positive or negative amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment.Description">
            
            The shopper-facing description of the order-level adjustment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment.InternalComment">
            
            Administrator notes associated with the order adjustment. These comments are not shopper facing.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage">
            
            	Properties of a system message displayed when a change, such as a change in product price, occurs for a cart or order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.CreateDate">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.Id">
            
            Unique identifier of the change message. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.Identifier">
            
            Identifier for the object associated with the change message, which can represent a cart, cart item, or an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.Message">
            
            The text of the change message, such as "This product is no longer available". System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.NewValue">
            
            The new value of the object affected by the change, such as the new price of the product. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.OldValue">
            
            The prior value of the object affected by the change, such as the price of the product when it was added to the cart. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.Subject">
            
            The text that appears on the subject line of the message, such as "The product price has changed."
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.SubjectType">
            
            Represents the type of object affected by the change, such as Cart Item or Product. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.ChangeMessage.Verb">
            
            The action associated with this message. For example, if the price of a product changes, the verb could be "Increased" or "Decreased". If the product is no longer available, the verb could be "Invalidated". System-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.CommerceUnitPrice">
            
            	Pricing details for a product in a cart or an order, including the original price, discount amount, and final price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.CommerceUnitPrice.ExtendedAmount">
            
            Represents the total price of the line item extended to the shopper. This begins with the Unit Price, then uses any of the following prices if they are defined, in the following order: Override Amount, Sale Amount, List Amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.CommerceUnitPrice.ListAmount">
            
            The price the item is listed for in the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.CommerceUnitPrice.OverrideAmount">
            
            The override price of the item set by the merchant for a given order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.CommerceUnitPrice.SaleAmount">
            
            The sale price set for the item.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Commerce.PackageMeasurements">
            
            	Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.PackageMeasurements.Height">
            
            Height of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.PackageMeasurements.Length">
            
            Length of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.PackageMeasurements.Weight">
            
            Weight of the package in imperial units of pounds and ounces.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Commerce.PackageMeasurements.Width">
            
            Width of the package in imperial units of feet and inches.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount">
            
            	The discount currently applied to the cart or order, represented as a negative currency amount to be subtracted from the final price. If multiple discounts are applied to the same order, the Applied Discount displays the most valuable discount for the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount.CouponCode">
            
            Alphanumeric code associated with the coupon or promotion that results in a discounted price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount.Excluded">
            
            If true, the system ignores this discount when pricing the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount.Impact">
            
            The value of the discount applied to the cart or order, represented as a negative currency amount to apply to the original price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount.Discount">
            
            Discount currently applied to the cart or order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Discounts.Discount">
            
            	Properties of a discount defined for a product, order, or shipping on a web storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.Discount.ExpirationDate">
            
            The date and time at which the discount can no longer be applied to a product or order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.Discount.Id">
            
            Unique identifier of the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.Discount.ItemIds">
            
            List of cart or order items to which the discount applies, if applicable.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.Discount.Name">
            
            The name of the discount, in the language specified by the LocaleCode of the storefront.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Discounts.ShippingDiscount">
            
            	Properties of a discount that can apply to shipping an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.ShippingDiscount.MethodCode">
            
            Carrier-supplied code that represents the shipping method service type associated with the shipping discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Discounts.ShippingDiscount.Discount">
            
            Properties of the shipping discount.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentAction">
            
            	Properties of an action to perform when fulfilling an item in an order, whether through in-store pickup or direct shipping.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentAction.ActionName">
            
            The name of the fulfillment action to perform, which is "Ship" or "PickUp".
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentAction.PackageIds">
            
            Array list of packages for which to perform the fulfillment action.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentAction.PickupIds">
            
            Array list of in-store pickups for which to perform the fulfillment action.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo">
            
            	Properties of the information needed to fulfill an order, whether via in-store pickup or direct shipping.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo.IsDestinationCommercial">
            
            If true, the shipping destination for a shipment is a commercial address.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo.ShippingMethodCode">
            
            The code associated with the carrier's shipping method service type. Service type codes include a prefix that indicates the carrier. For example: FEDEX_INTERNATIONAL_STANDARD
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo.ShippingMethodName">
            
            The carrier-supplied name for the shipping service type, such as "UPS Ground" or "2nd Day Air".
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo.FulfillmentContact">
            
            The contact information of the person receiving the shipment or performing the pickup.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package">
            
            	Properties of a physical package shipped for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.AvailableActions">
            
            The actions that a user can perform for a package at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.FulfillmentDate">
            
            The date and time the package shipped to the customer.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.FulfillmentLocationCode">
            
            The location code that represents the location from which this package will ship.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.Id">
            
            Unique identifier of a package.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.PackagingType">
            
            The package type associated with this physical package. Possible values include Tube, Letter, Pak, Small Box (carrier_box_small), Medium Box (carrier_box_medium), Large Box (carrier_box_large), or Custom.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.ShipmentId">
            
            Unique identifier of the shipment associated with this package.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.ShippingMethodCode">
            
            The code associated with the carrier's shipping method service type. Service type codes include a prefix that indicates the carrier. For example: FEDEX_INTERNATIONAL_STANDARD
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.ShippingMethodName">
            
            Name of the shipping method associated with the package. For example: UPS Ground or 2nd Day Air.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.Status">
            
            Status of the package, which is "Fulfilled" or "NotFulfilled".
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.TrackingNumber">
            
            Tracking number for the package supplied by the carrier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package.Measurements">
            
            Dimensional properties of the package.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.PackageItem">
            
            	Properties of an item shipped in a physical package.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.PackageItem.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.PackageItem.Quantity">
            
            The quantity of an item shipped in the specified package.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup">
            
            	Properties of an in-store pickup defined to fulfill items in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup.AvailableActions">
            
            Array list of actions that can be performed for the in-store pickup.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup.FulfillmentDate">
            
            The date and time the customer picked up the order items.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup.FulfillmentLocationCode">
            
            The location code that represents the location where the shopper will fulfill this pickup.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup.Id">
            
            Unique identifier of the in-store pickup.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup.Status">
            
            The fulfillment status of the in-store pickup, which is "Fulfilled," "NotFulfilled," or "PartiallyFulfilled."
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.PickupItem">
            
            	Properties of an item in an in-store pickup.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.PickupItem.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.PickupItem.Quantity">
            
            The quantity of the item in the in-store pickup.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment">
            
            	Properties of a shipment used to ship order items to a shopper. A shipment can include any number of packages.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment.Cost">
            
            Total cost of shipping the shipment to the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment.Id">
            
            Unique identifier of the shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment.PackageIds">
            
            Array list of identifiers that represent the packages in this shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment.ShippingMethodCode">
            
            Code that identifies the service type method used to perform the shipment, such as UPS_GROUND.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment.SignatureRequired">
            
            If true, a shopper signature is required to deliver this shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment.TrackingNumber">
            
            The shipping tracking number supplied by the shipping provider to track the shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment.DestinationAddress">
            
            The address to which to shipment will ship.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment.OriginAddress">
            
            The address from which the shipment will ship.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate">
            
            	Properties of an estimated shipping rate for a shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate.IsValid">
            
            If true, the estimated shipping rate is valid.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate.Messages">
            
            Array list of validation messages associated with the shipping rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate.Price">
            
            The amount the company and the shopper pay for shipping based on the current rate. Depending on any company discounts or fees, the price the company pays for shipping may differ from what the shopper pays.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate.ShippingMethodCode">
            
            The code that identifies the service type shipping method, such as FED_EX_INTERNATIONAL.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate.ShippingMethodName">
            
            The name of the shipping method associated with the estimated rate, such as "UPS Ground".
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order">
            
            	Properties of an order, including its components.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.AcceptedDate">
            
            The date and time the order was accepted by the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.AmountAvailableForRefund">
            
            The amount of the order the shopper can receive in the event of a return. This amount represents the amount captured at the time the order was submitted, not when the order was returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.AmountRemainingForPayment">
            
            The total amount of the order not currently associated with a payment. The shopper must create one or more payments to satisfy this amount before the order can be fully paid.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.AvailableActions">
            
            The available order, payment, and shipment actions a user can perform for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.CancelledDate">
            
            Date when the order was cancelled. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ChannelCode">
            
            Code that identifies the channel associated with the site where the order was submitted.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ClosedDate">
            
            Date when the order was closed. Closed order is an order that has been processed and the items shipped. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.CouponCodes">
            
            Array list of coupon codes associated with an order submitted using an external system. Mozu populates this list during the order import process.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.CustomerAccountId">
            
            Numeric identifer of the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.CustomerInteractionType">
            
            The type of interaction the shopper used to submit the order. Possible values are Website, Call, Store, or Unknown.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.CustomerTaxId">
            
            The tax identification number (TIN) of the customer who submitted the order. If the customer who submitted the order has a customer account defined for the tenant, the system sets this value when the order is submitted.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.DiscountedSubtotal">
            
            The aggregate total for all line items in the order, including costs associated with shopper-defined options or extras and any applied discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.DiscountedTotal">
            
            The subtotal of the order including any applied discount calculations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.DiscountTotal">
            
            Estimated amount of discounts applied to all items in the order, which is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Email">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ExpirationDate">
            
            The date when the order will no longer be active or considered abandoned. For example, if a guest or anonymous shopper has 14 days of inactivity, the order is considered abandoned after that period of inactivity. An order never expires for shoppers who are logged into their account. Date in UTC Date/Time. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ExternalId">
            
            Unique identifier used by an external program to identify a Mozu order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.FeeTotal">
            
            The monetary sum of all fees incurred in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.FulfillmentStatus">
            
            The current fulfillment status of the order, which is "Fulfilled," "NotFulfilled," or "PartiallyFulfilled." The order is considered fulfilled when all packages are shipped or all pickups are picked up.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.HandlingAmount">
            
            The combined price for all items in the order, including all selected options but excluding any discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.HandlingTaxTotal">
            
            If the handling fee for the order is subject to sales tax, the total tax amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.HandlingTotal">
            
            This total represents the handling amount value with any applied discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.HasDraft">
            
            If true, the order has a draft that may include one or more uncommitted changes to the order or its components.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Id">
            
            Unique identifier of the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ImportDate">
            
            If the order was imported from an external program, the date and time the order was imported into Mozu.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.IpAddress">
            
            The IP address from which the order originated.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.IsDraft">
            
            If true, this version of the order is a draft that might contain uncommitted changes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.IsEligibleForReturns">
            
            If true, the shopper can return any of the items in this order to the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.IsImport">
            
            If true, this order was submitted using an external system, and the order record was imported into Mozu.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.IsTaxExempt">
            
            If true, the order is exempt from applied sales tax.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ItemTaxTotal">
            
            The total amount of tax applied to items in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.LastValidationDate">
            
            The date when the order was last validated against the product catalog. Date in UTC Date/Time. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.LocationCode">
            
            The unique code that identifies the location where the order was submitted.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.OrderNumber">
            
            The order number that displays on the storefront which differs from the order ID.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.OriginalCartId">
            
            Identifier of the cart prior to the customer proceeding to checkout.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ParentReturnId">
            
            If this order was created to fulfill an item replacement as part of a return merchandise authorization (RMA), the unique identifier of the return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.PaymentStatus">
            
            Status of the payment for the specified order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ReturnStatus">
            
            Status of any returns associated with this order after it was completed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ShippingSubTotal">
            
            The shipping subtotal amount calculated without any applied discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ShippingTaxTotal">
            
            The total amount of sales tax incurred for shipping charges on the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ShippingTotal">
            
            Amount of the shipping fees for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.SiteId">
            
            Unique identifier of the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.SourceDevice">
            
            The device from which the order originated in the case of offline orders.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Status">
            
            The current status of this order. Possible values are "Pending", "Submitted", "Processing", "Pending Review", "Closed", or "Cancelled". System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.SubmittedDate">
            
            The date and time the order was submitted. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Subtotal">
            
            Amount of the order without sales tax, shipping costs, and other fees.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.TaxTotal">
            
            The total monetary sum of sales tax for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Total">
            
            Amount of the order, including items, sales tax, shipping costs, and other fees.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.TotalCollected">
            
            The total amount collected to date for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Version">
            
            The current version number of the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.VisitId">
            
            Unique identifier of the customer visit in which the order was created or last updated.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.WebSessionId">
            
            Unique identifier of the web session in which the order was created or last updated.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Adjustment">
            
            Properties of an ad-hoc price adjustment for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Attributes">
            
            Paged list collection of order attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.BillingInfo">
            
            Container for the customer billing information associated with an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ChangeMessages">
            
            Paged list of notes entered when the order was modified.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.FulfillmentInfo">
            
            Properties of the item fulfillment information associated with the order. Shoppers can fulfill order items using in-store pickup or direct shipping.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Notes">
            
            Paged list collection of order notes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.OrderDiscounts">
            
            List of order-level discounts that apply to the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Packages">
            
            Array list of physical packages shipped for the specified order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Payments">
            
            Wrapper for a collection of payments associated with this order. An order can include any number of payments.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Pickups">
            
            Array list of the in-store pickups defined for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.Shipments">
            
            Array list of the shipments defined to fulfill items in this order using the direct ship fulfillment method.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ShippingAdjustment">
            
            Properties of an ad-hoc price adjustment made for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ShippingDiscounts">
            
            List of shipping discounts to apply to the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ShopperNotes">
            
            A paged list collection of shopper notes for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.Order.ValidationResults">
            
            Response returned by an order validation capability application.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAction">
            
            	The action to perform for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAction.ActionName">
            
            The name of the action for the order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute">
            
            	Properties of an attribute applied to an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute.AttributeDefinitionId">
            
            Unique identifier of the order attribute definition.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute.FullyQualifiedName">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute.Values">
            
            The values defined for the order attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection">
            
            	Paged collection of orders sorted and filtered by any query parameters specified in the request.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem">
            
            	The details associated with a specific item in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.DiscountedTotal">
            
            The subtotal of the order item including any applied discount calculations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.DiscountTotal">
            
            Estimated amount of discounts applied to the item in the order, which is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.ExtendedTotal">
            
            Represents the total price of the order item extended to the shopper. This begins with the Unit Price, then uses any of the following prices if they are defined, in the following order: Override Amount, Sale Amount, List Amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.FeeTotal">
            
            The total sum of all fees incurred for an item in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.FulfillmentLocationCode">
            
            Code that identifies the location used to fulfill this order item, whether via in-store pickup or direct shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.FulfillmentMethod">
            
            The method used to fulfill the item in the order, which is "PickUp" or "Ship".
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.Id">
            
            Unique identifier of a specific item in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.IsRecurring">
            
            If true, the item in the order can be purchased or fulfilled at regular intervals such as a monthly billing cycle or a digital or physical subscription. This property is reserved for future functionality and is system-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.IsTaxable">
            
            If true, the entity is subject to tax based on the relevant tax rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.ItemTaxTotal">
            
            The total amount of tax that applied to an item in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.OriginalCartItemId">
            
            The unique identifier of the item when it was applied to a cart, prior to checkout, when the cart became an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.Quantity">
            
            The quantity of a specific item in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.ShippingTaxTotal">
            
            The total amount of sales tax incurred for shipping charges associated with this item in a cart.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.ShippingTotal">
            
            Total amount of shipping fees associated with the specified item in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.Subtotal">
            
            Amount of the item in the order without sales tax, shipping costs, and other fees.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.TaxableTotal">
            
            The amount of the item in the order that is subject to tax. This amount typically represents the order item subtotal before applied discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.Total">
            
            The total monetary sum of a specific item in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.Product">
            
            The product properties of an item in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.ProductDiscounts">
            
            List of product discounts that apply to the item in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.ShippingDiscounts">
            
            List of shipping discounts that apply to the item in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem.UnitPrice">
            
            Properties of the unit price associated with the order item.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection">
            
            	Collection of all order items that appear on the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote">
            
            	Properties of an order note for a merchant, which is internal only for administrative purposes and not available to the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote.Id">
            
            Unique identifier of the order note.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote.Text">
            
            The text content of the order note.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationMessage">
            
            	Properties of a message returned by an order validation capability for the order specified in the request.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationMessage.Message">
            
            The body of the message returned by the order validation capability.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationMessage.MessageType">
            
            The type of message returned by the order validation capability, such as "Fraud Score."
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationMessage.OrderItemId">
            
            Unique identifier of the order item associated with the validation message.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult">
            
            	Properties of the resulting order validation performed by an order validation capability.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult.CreatedDate">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult.Status">
            
            The status returned from the order validation capability for the order specified in the request, which is Pass, Fail, Error, or Review.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult.ValidationId">
            
            Read-only identifier defined by the order validation capability that uniquely identifies this validation operation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult.ValidatorName">
            
            Read-only name of this order validator supplied by the capability.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult.ValidatorType">
            
            The type of order validator supplied by the capability. At this time, the only supported validator type is Fraud.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult.Messages">
            
            Collection of messages returned by the order validation capability.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Orders.ShopperNotes">
            
            	Comments and/or gift message provided by the shopper which are associated with the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.ShopperNotes.Comments">
            
            Shopper-entered notes for the associated order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Orders.ShopperNotes.GiftMessage">
            
            Shopper-entered gift message for the associated order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo">
            
            	Properties of the billing information entered for an order during checkout.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo.IsSameBillingShippingAddress">
            
            If true, the system overrides the customer's billing address information with the supplied fulfillment information.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo.PaymentType">
            
            The type of payment, such as credit card, check, or PayPal Express. Additional payment types will be supported in future releases.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo.StoreCreditCode">
            
            The code that identifies the store credit to apply to the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo.BillingContact">
            
            The cardholder's billing contact information, including addresses.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo.Card">
            
            If the customer is paying by card, the credit card information.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment">
            
            	Properties of a payment transaction submitted for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.AmountCollected">
            
            The total monetary amount collected in this payment transaction for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.AmountCredited">
            
            If the payment transaction is a shopper store credit, the total monetary amount credited in this payment transaction for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.AmountRequested">
            
            The total amount originally requested for this payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.AvailableActions">
            
            The actions a user can perform for a payment at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.Id">
            
            Unique identifier of the payment transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.IsRecurring">
            
            If true, the payment transaction occurs at regular intervals such as a monthly billing cycle or a digital or physical subscription.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.OrderId">
            
            Unique identifier of the order associated with the payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.PaymentServiceTransactionId">
            
            The transaction ID supplied by the payment service to associate with this order payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.PaymentType">
            
            The type of payment transaction performed, such as check, credit card, or PayPal Express. Additional payment types will be supported in future releases.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.Status">
            
            Current status of the payment transaction for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.BillingInfo">
            
            Properties of the customer billing information associated with this payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment.Interactions">
            
            Container for the interactions associated with the payment, which includes details for each action performed for the payment.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction">
            
            	Properties of the payment action performed for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.ActionName">
            
            The name of the payment action, such as "AuthorizeAndCapture".
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.Amount">
            
            The total monetary amount of the payment transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.CancelUrl">
            
            The URL provided to cancel payments submitted using PayPal Express or another non-gateway payment provider.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.CheckNumber">
            
            If applicable, the check number associated with the payment action.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.InteractionDate">
            
            Date and time the payment gateway interaction was performed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.ReferenceSourcePaymentId">
            
            Unique ID that references an original transaction in the event of a credit back.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.ReturnUrl">
            
            The URL provided to redirect users who submit payments using PayPal Express or another non-gateway payment provider.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.ManualGatewayInteraction">
            
            Properties of a manually performed interaction with the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction.NewBillingInfo">
            
            The billing information associated with this payment action.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard">
            
            	Properties of a credit card used to submit payment for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.CardNumberPartOrMask">
            
            The masked credit card number part returned from the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.ExpireMonth">
            
            The two-digit month the credit card expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.ExpireYear">
            
            The four-digit year the credit card expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.IsCardInfoSaved">
            
            If true, the credit card information is saved to the customer account for future use.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.IsUsedRecurring">
            
            If true, the credit card is used for a recurring order payment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.NameOnCard">
            
            The name printed on the credit card.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.PaymentOrCardType">
            
            The type of credit card, such as Visa or Amex.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCard.PaymentServiceCardId">
            
            Unique identifier of the credit card from the payment service.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection">
            
            	Collection of payment transactions associated with an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction">
            
            	Properties of an interaction with the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction.GatewayAuthCode">
            
            If required by the payment gateway, the authorization code of the transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction.GatewayAVSCodes">
            
            AVS codes supplied by the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction.GatewayCVV2Codes">
            
            CVV2 codes supplied by the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction.GatewayInteractionId">
            
            Unique identifier of the payment interaction from the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction.GatewayResponseCode">
            
            Response code from the gateway associated with the payment interaction. For example, if the gateway returns "Not Authorized," an interaction for voiding the payment transaction would result.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentGatewayInteraction.GatewayTransactionId">
            
            Unique identifier of the gateway transaction associated with the payment interaction.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction">
            
            	Properties of a resulting payment interaction that occurs when a payment action is performed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.Amount">
            
            If applicable, the total monetary amount associated with this payment interaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.CheckNumber">
            
            If applicable, the check number associated with this payment interaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.GatewayAuthCode">
            
            If required by the payment gateway, the authorization code of the transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.GatewayAVSCodes">
            
            AVS codes supplied by the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.GatewayCVV2Codes">
            
            CVV2 codes supplied by the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.GatewayInteractionId">
            
            Unique identifier of the gateway interaction. Used for credit card transactions where the payment creates a GatewayInteractionId for each interaction. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.GatewayResponseCode">
            
            Response code from the gateway associated with the payment interaction. For example, if the gateway returns "Not Authorized," an interaction for voiding the payment transaction would result.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.GatewayTransactionId">
            
            Unique identifier of the gateway transaction associated with the payment interaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.Id">
            
            Unique identifier of the payment interaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.InteractionDate">
            
            Date and time the payment interaction occured.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.InteractionType">
            
            The type of payment interaction, such as Capture or CheckReceived.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.IsManual">
            
            If true, the payment interaction was manually defined s part of offline order processing.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.IsRecurring">
            
            If true, this payment interaction repeats on a scheduled interval.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.Note">
            
            Note content entered for a payment interaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.OrderId">
            
            Unique identifier of the order associated with this payment interaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.PaymentEntryStatus">
            
            The status of the payment prior to the interaction being performed, which enables manual rollback of previous transactions.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.PaymentId">
            
            Unique identifier of the payment associated with this transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.PaymentTransactionInteractionIdReference">
            
            Unique identifier of previous interaction that this payment interaction is modifying. For example, when refunding a payment, the crediting interaction would reference the capture interaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.Status">
            
            The status of this payment interaction. Possible values are New, Authorized, Captured, Declined, Failed, Voided, Credited, CheckRequested, or RolledBack.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentInteraction.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct">
            
            	Properties of a component product in a product bundle. A product bundle can represent either a collection of multiple products sold as a single entity, or a collection of the same product sold as a package. For example, a 10-pack of socks.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.Description">
            
            The description defined for a component product in a product bundle. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.IsPackagedStandAlone">
            
            If true, this product cannot be shipped in a package with other items and must ship in a package by itself.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.Name">
            
            The name of a component product in a product bundle. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.ProductReservationId">
            
            Unique identifier of the product reservation associated with the component product in a product bundle. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.Quantity">
            
            The quantity of a component product in its product bundle. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.BundledProduct.Measurements">
            
            Dimensions of the packaged product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Products.Category">
            
            	The category into which products are classified.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Category.Id">
            
            Identifier of the category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Category.Parent">
            
            If applicable, the parent category in the category tree.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Products.Product">
            
            	Properties of a product set up in admin and added as an item in a cart or order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Description">
            
            Short description of the product in the language specified in the locale code for the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.ImageAlternateText">
            
            The alternate image description defined for the product, in the language specified in the locale code for the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.ImageUrl">
            
            The URL of the image file associated with a product on a storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.IsPackagedStandAlone">
            
            If true, this product cannot ship in a package with other items and must ship in a package by itself.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.IsRecurring">
            
            If true, the product can be purchased or fulfilled at regular intervals such as a monthly billing cycle or a digital or physical subscription.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.IsTaxable">
            
            If true, the entity is subject to sales tax based on the relevant tax rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Name">
            
            The name of the product that appears on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.ProductReservationId">
            
            The unique identifier of the product reservation created for this item in the cart or order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.ProductType">
            
            The product type template associated with the product on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.ProductUsage">
            
            The usage type that applies to this product, which is Standard (a single product without configurable options), Configurable (a product that includes configurable option attributes), Bundle (a collection of products sold as a single entity), or Component (an invididual product that represents a component in a bundle).
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.VariationProductCode">
            
            Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.BundledProducts">
            
            Collection of component products that make up a single product bundle with its own product code, added to a cart or order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Categories">
            
            The list of all categories associated with the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Measurements">
            
            Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Options">
            
            The list of option attributes configured for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Price">
            
            The price of the product that appears on the storefront including any applied discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.Product.Properties">
            
            Collection of property attributes defined for the item in the cart or order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption">
            
            	An option attribute configured for a product on a storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption.DataType">
            
            The data type, such as bool or string, used in this option attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption.Name">
            
            The name of the product option attribute in the language of the locale code specified for the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption.ShopperEnteredValue">
            
            The value a shopper entered for an option attribute that requires additional input for the product on a storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption.StringValue">
            
            If the value is a string, the string entered for the value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductOption.Value">
            
            If the value if an object, the value selected.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPrice">
            
            	The price of a product that appears on a storefront after any applied discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPrice.Price">
            
            The price the merchant charges for a product on a storefront if no sales price is defined.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPrice.SalePrice">
            
            Current sale price defined for a product on a storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPrice.TenantOverridePrice">
            
            The override price defined by the tenant for this cart or order item.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Products.ProductProperty">
            
            	Details of a property attribute defined for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductProperty.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductProperty.DataType">
            
            The data type of the property attribute, which is Bool, DateTime, Number, or String.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductProperty.IsMultiValue">
            
            If true, the product property can have more than one value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductProperty.Name">
            
            The name of the product property.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductProperty.Values">
            
            The list of possible values for the product property.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPropertyValue">
            
            	Values of a product property attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPropertyValue.StringValue">
            
            Property string value in the language specified in the locale code for the product storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Products.ProductPropertyValue.Value">
            
            Value of the product property.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return">
            
            	Properties of a return of one or more previously fulfilled items.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.AvailableActions">
            
            The actions a user can perform for the return at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.ChannelCode">
            
            The code that identifies the channel associated with the return, which is typically the same channel associated with the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.CustomerAccountId">
            
            Unique identifier of the customer account associated with the return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.CustomerInteractionType">
            
            String that describes the customer interaction used to return an item. Possible values are Website, Store, Call, and Unknown.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.Id">
            
            Unique identifier of the return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.LocationCode">
            
            The code that uniquely identifies the location where items were returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.LossTotal">
            
            The total value of the return to the merchant for accounting purposes. This total represents the combined product loss and shipping loss associated with the return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.OriginalOrderId">
            
            If this return is associated with a previously completed order, the unique identifier of the original order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.ProductLossTaxTotal">
            
            The total tax amount levied on the product loss amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.ProductLossTotal">
            
            The total value of the product returned to the merchant for accounting purposes, calculated by multiplying the cost of the item by its quantity returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.RefundAmount">
            
            If a refund action was performed for this return, the total amount refunded to the shopper. The refund amount can differ from the sum of the price of the returned items.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.ReturnNumber">
            
            A merchant-specific identifier used to sequentially order returns.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.ReturnOrderId">
            
            Unique identifier for the order created as a result of the return. If the return results in shipping a replacement item, the order includes shipment information for the replaced items. If the return results in a refund, the order includes payment transactions to credit the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.ReturnType">
            
            The type of return, which is "Refund" or "Replace".
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.RmaDeadline">
            
            The date by which a shopper must ship items associated with a return in an "awaiting items" state to the merchant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.ShippingLossTaxTotal">
            
            The total tax amount levied on the shipping loss amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.ShippingLossTotal">
            
            The total value of shipping the returned product to the merchant for accounting purposes, calculated by multiplying the shipping cost of the item by its quantity returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.SiteId">
            
            Unique identifier of the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.Status">
            
            Current status of the return, such as "ReturnAuthorized".
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.UserId">
            
            Unique identifier of the user responsible for the return. Read only and supplied by the original order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.VisitId">
            
            The unique identifier of the customer visit associated with the return transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.WebSessionId">
            
            Unique identifier of the web session in which the return was created or last modified, which is system-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.Notes">
            
            Collection of merchant-supplied notes entered for the return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.Packages">
            
            List of packages associated with a replacement order for a return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.Return.Payments">
            
            Array list of payments associated with this return, if applicable.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnAction">
            
            	Properties of an action a user can perform for a return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnAction.ActionName">
            
            The name of the action to perform for the return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnAction.ReturnIds">
            
            The list of returns for which to perform the action.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnBundle">
            
            	Properties of a product bundle returned to a tenant for replacement or refund. Shoppers can return either the entire bundle or an individual component product in the bundle. If a component is returned and the shopper requests a refund, it is up to the client to determine the refund amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnBundle.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnBundle.Quantity">
            
            The number of returned product bundles in the return.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection">
            
            	List of returns and the details of each return in the list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem">
            
            	Properties of a previously fulfilled item associated with a return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.OrderItemId">
            
            Unique identifier of the item in the original completed order. All return items should be associated with a corresponding order item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.ProductLossAmount">
            
            The total value of the product returned to the merchant for accounting purposes, calculated by multiplying the cost of the item by its quantity returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.ProductLossTaxAmount">
            
            The total tax amount levied on the product loss amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.QuantityReceived">
            
            The actual quantity received for the return item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.QuantityRestockable">
            
            The quantity of returned items that can be returned to active product stock.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.QuantityShipped">
            
            The quantity of the item shipped to the shopper in the event of a return item replacement.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.ShippingLossAmount">
            
            The total value of shipping the returned product to the merchant for accounting purposes, calculated by multiplying the shipping cost of the item by its quantity returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.ShippingLossTaxAmount">
            
            The total tax amount levied on the shipping loss amount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.BundledProducts">
            
            Properties of a collection of component products that make up a single returned product bundle with its own product code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.Notes">
            
            List of merchant-supplied notes associated with the return item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.Product">
            
            Properties of the product definition associated with the item in the return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem.Reasons">
            
            The list of return reasons for the item and the quantity associated with each return reason.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnReason">
            
            	The reason for which the item is returned. Valid values include Damaged, Defective, MissingParts, DifferentExpectations, Late, NoLongerWanted, or Other.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnReason.Quantity">
            
            The quantity of the item returned for the specified reason.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnReason.Reason">
            
            The reason for which an item is returned to the merchant.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist">
            
            	Properties of a shopper wish list defined for a site, associated with a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.ChannelCode">
            
            Unique identifier of the channel associated with the wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.CustomerAccountId">
            
            Unique identifier of the customer account associated with the wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.CustomerInteractionType">
            
            The interaction type the shopper uses to create the wish list, which is Website, Store, Call, or Unknown. This property is not used at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.DiscountedSubtotal">
            
            The discounted subtotal of items in the wish list. This property value is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.DiscountedTotal">
            
            The subtotal of the cart including any applied discount calculations. This property value is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.DiscountTotal">
            
            Estimated amount of discounts applied to all items in the wish list, which is system-supplied and read-only.   This property value is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.ExpirationDate">
            
            The date and time this wish list expires. This property value is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.ExternalId">
            
            The identifier an external program uses to identify the Mozu wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.FeeTotal">
            
            The fee total of items in the wish list. This property value is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.HandlingTaxTotal">
            
            The tax amount levied against the handling fee for items in the wish list. This property value is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.Id">
            
            Unique identifier of this shopper wish list. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.ImportDate">
            
            If this wish list was imported from an external program, the date and time the wish list was imported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.IsImport">
            
            If true, this wish list was imported from an external program.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.ItemTaxTotal">
            
            The total amount of tax for items in the wish list. This property value is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.LastValidationDate">
            
            The date and time the wish list was last validated against the product catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.Name">
            
            The user-defined name of the shopper wish list. The name defined for a wish list does not have to be unique.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.PrivacyType">
            
            The type of privacy to apply to this wish list. Possible values are "Private" which makes the wish list viewable only to the shopper, "DirectShare" which makes the wish list viewable only to people with whom the shopper shares the wish list link, or "Public" which makes the wish list available to everyone. At this time, the system treats all shopper wish lists as "Public" regardless of the defined privacy type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.ShippingSubTotal">
            
            The subtotaled shipping amount for items in the wish list. This property value is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.ShippingTaxTotal">
            
            The total amount of tax levied against shipping charges for items in the wish list. This property value is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.ShippingTotal">
            
            The total shipping costs for items in the wish list. This property value is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.SiteId">
            
            Unique identifier of the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.SortOrder">
            
            The integer that represents the sequential order of this wish list in the customer's collection of wish lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.Subtotal">
            
            The subtotal of items in the wish list. This property value is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.TaxTotal">
            
            The total tax amount for items in the wish list. This property value is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.Total">
            
            The total amount of items in the wish list. This property value is not calculated at this time and is reserved for future functionality. If a site's structure distinguishes between wish list types, the site uses the value in this property to categorize the wish lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.TypeTag">
            
            User-defined string that defines the type of wish list to define, such as wish list, baby registry, or Christmas list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.Version">
            
            System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.VisitId">
            
            Unique identifier of the customer visit in which the wish list was created or last modified. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.WebSessionId">
            
            Unique identifier of the web session in which the wish list was created or last modified. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.ChangeMessages">
            
            Collection of change messages logged for each modification to a shopper wish list. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.FulfillmentInfo">
            
            Properties that determine how items in the wish list are fulfilled.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist.OrderDiscounts">
            
            Any order discounts that apply to items in the wish list. This property is not used at this time and is reserved for future functionality.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistCollection">
            
            	Collection of shopper wish lists associated with a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem">
            
            	Properties of an item in a shopper wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.Comments">
            
            Shopper-entered comments for an item in a wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.DiscountedTotal">
            
            The subtotal of the wishlist item including any applied discount calculations. This property value is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.DiscountTotal">
            
            Estimated amount of discounts applied to the item in the wish list, which is system-supplied and read-only.  This property value is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.ExtendedTotal">
            
            The extended total of an item in a wish list. This property value is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.FeeTotal">
            
            The fee total of an item in a wish list. This property value is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.Id">
            
            Unique identifier of an item in a shopper wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.IsRecurring">
            
            If true, the item in the wish list is a recurring purchase, such as a subscription. This property is reserved for future use and is system-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.IsTaxable">
            
            If true, the item in a wish list is subject to sales tax.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.ItemTaxTotal">
            
            The total sales tax of the item in the wish list. This property value is not calculated at this time, and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.PriorityType">
            
            User-defined string that indicates the priority of an item in a wish list. Possible values are Lowest, Low, Medium, High, and Highest.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.PurchasableStatusType">
            
            The status of the item that indicates whether an item in a wish list can be purchased. Possible values are "Purchasable" which indicates the item can be purchased, "NotPurchasable" which indicates the item is out of stock or otherwise unavailable, or "Missing" which indicates the item has been deleted from the catalog since it was added to the wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.Quantity">
            
            The quantity of an item in a shopper wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.ShippingTaxTotal">
            
            The total amount of tax levied against shipping charges for an item in a wish list. This property is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.ShippingTotal">
            
            The total amount of shipping for an item in a wish list. This property is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.Subtotal">
            
            The subtotal of an item in a wish list. This property is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.TaxableTotal">
            
            The taxable total of an item in a wish list. This property is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.Total">
            
            The total of an item in a wish list. This property is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.Product">
            
            The properties of the product associated with an item in a wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.ProductDiscounts">
            
            Array of product discounts applicable to an item in a wish list. This property is not used at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.ShippingDiscounts">
            
            Array of shipping discounts applicable for an item in a wish list. This property is not used at this time and is reserved for future functionality.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem.UnitPrice">
            
            The unit price of an item in a wish list. This property is not calculated at this time and is reserved for future functionality.
            
        </member>
        <member name="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection">
            
            	Collection of items in a shopper wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.Document">
            
            	The document properties that define the content used by the content management system (CMS).
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.ContentLength">
            
            The character length associated with the document content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.ContentMimeType">
            
            The mime type associated with the document content, if applicable.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.ContentUpdateDate">
            
            The date and time the most recent content update was made. UTC date/time. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.Extension">
            
            If applicable, the file extension associated with the document content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.Id">
            
            Unique identifier of the document.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.InsertDate">
            
            When the document was added to the document list. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.Name">
            
            The name of the document, which is unique within its folder.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.PublishState">
            
            The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.UpdateDate">
            
            Date and time when the entity was last updated, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Document.Properties">
            
            List of properties for the given property value.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentCollection">
            
            	A collection of documents in the content resource.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentDraftSummary">
            
            	Summary properties of an unpublished document draft.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummary.Id">
            
            Identifier of document draft.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummary.Name">
            
            Name of the document draft.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummary.PublishType">
            
            Whether the draft has been published.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummary.UpdatedBy">
            
            Unique identifier of the user who last modified the item. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection">
            
            	A paged list collection of document draft summaries.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentList">
            
            	The list of document types and related properties that define content used by the content management system (CMS).
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentList.DocumentTypes">
            
            List of document types associated with this document list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentList.EnablePublishing">
            
            If true, publishing of draft documents in this document list is enabled for the site. If false, all document changes are immediately published in live mode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentList.Name">
            
            The name of the document list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentList.SupportsPublishing">
            
            If true, changes documents in this list can be saved as drafts until they are published to the site. If false, all document changes are immediately published in live mode. System-supplied and read only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentListCollection">
            
            	Collection of document lists used to organize content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentListCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentType">
            
            	The type of documents used in the CMS such as "web_page" or "template" or "image_url".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentType.Name">
            
            The name of the document type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.DocumentTypeCollection">
            
            	Collection of document types for the content service.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentTypeCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentTypeCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentTypeCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentTypeCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.DocumentTypeCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.Facet">
            
            	Properties of the facet used to retrieve documents.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Facet.Count">
            
            The number of facet results.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.Facet.Name">
            
            The name of the facet.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.PropertyType">
            
            	Property type available for content. Property types are like templates that can be reused.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.IsAggregatable">
            
            If true, this entity can be grouped.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.IsQueryable">
            
            If true, the entity can be searched. If false, the entity cannot be searched.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.IsSortable">
            
            If true, the property type results are sortable. If false, the property type results cannot be sorted by any options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyType.Name">
            
            The name of the content property type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Content.PropertyTypeCollection">
            
            	Collection of content property types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyTypeCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyTypeCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyTypeCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyTypeCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Content.PropertyTypeCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Address">
            
            	Address information to supply for a contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.Address1">
            
            Physical or mailing address line one. Usually includes the street number and street name or it could be a P.O. Box. Max length: 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.Address2">
            
            Physical or mailing address line two. Usually supplements the main street address with apartment, floor, suite, building, or unit information. Max length: 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.Address3">
            
            Physical or mailing address line three. Max length: 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.Address4">
            
            Physical or mailing address line four. Max length: 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.AddressType">
            
            The type of address, which is commercial or residential.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.CityOrTown">
            
            City or town for the physical or mailing address. The maximum character length is 100.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.CountryCode">
            
            The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.IsValidated">
            
            If true, the address has been verified by an address validation service.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.PostalOrZipCode">
            
            The postal or zip code for the address. For example, a USPS-approved ZIP code standard is ZIP+4: 12345-6789. The maximum character length is 100.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Address.StateOrProvince">
            
            The two-letter geographic code representing the state for the physical or mailing address. This is currently limited to the US.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.AuditInfo">
            
            	Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.AuditInfo.CreateBy">
            
            Unique identifier of the user created the resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.AuditInfo.CreateDate">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.AuditInfo.UpdateBy">
            
            Unique identifier of the user who last modified the item. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.AuditInfo.UpdateDate">
            
            Date and time when the entity was last updated, represented in UTC Date/Time.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Behavior">
            
            	Properties of an application behavior.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Behavior.CategoryId">
            
            Unique identifier of the behavior category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Behavior.Id">
            
            Unique identifier of the behavior.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Behavior.IsPrivate">
            
            If true, this application behavior is not part of the public Mozu API.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Behavior.Name">
            
            The name of the behavior.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Behavior.RequiresBehaviorIds">
            
            For validation purposes, the integer value must be a list of behavior IDs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Behavior.ValidUserTypes">
            
            The user types that are valid for this behavior.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.BehaviorCategory">
            
            	Properties of a category of application behaviors.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.BehaviorCategory.Id">
            
            Unique identifier of the behavior.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.BehaviorCategory.Name">
            
            The name of the behavior.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.BehaviorCategoryCollection">
            
            	List of categories of application behaviors.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.BehaviorCategoryCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.BehaviorCategoryCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.BehaviorCollection">
            
            	List of application behaviors and details for each record in the list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.BehaviorCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.BehaviorCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Contact">
            
            	Contact information for an account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.CompanyOrOrganization">
            
            The legal or doing business as (DBA) or tradestyle name of the business or organization. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.Email">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.FirstName">
            
            The first name of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.Id">
            
            Identifier of the contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.LastNameOrSurname">
            
            The last name or surname of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.MiddleNameOrInitial">
            
            The middle name or the first initial of the middle name of the contact. The maximum character length is 100.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.Address">
            
            Address information for the contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Contact.PhoneNumbers">
            
            List of phone numbers associated with the customer account contact.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.Attribute">
            
            	Properties of an attribute used to describe customers or orders.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.AdminName">
            
            Name of this extensible attribute defined in Mozu Admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.AttributeCode">
            
            Merchant-defined code for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.DataType">
            
            The data type of the customer or order attribute, which is Bool, DateTime, Number, or String.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.InputType">
            
            The type of input selection used to define a value for the attribute, which is YesNo, Date, DateTime, List, TextBox, or TextArea.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.IsActive">
            
            If true, the customer or order attribute is active.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.Namespace">
            
            Namespace associated with this extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.AttributeMetadata">
            
            List of metadata key-value pairs defined for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.Content">
            
            The localized name and description of the attribute, displayed in the locale code specified for the master catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.Validation">
            
            Properties used when validating a value entered for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.Attribute.VocabularyValues">
            
            List of valid vocabulary values defined for an attribute.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeCollection">
            
            	Array list of customer or order attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeLocalizedContent">
            
            	The localized name and description of the attribute, displayed in the locale defined for the master catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeMetadataItem">
            
            	Properties of a metadata item defined for an attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeMetadataItem.Key">
            
            Key used for metadata defined for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeMetadataItem.Value">
            
            Value of a metadata item defined for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.MaxDateTime">
            
            The latest possible date and time the extensible attribute can be validated.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.MaxNumericValue">
            
            The maximum number that can be entered as a value for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.MaxStringLength">
            
            The maximum length possible for a string value entered for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.MinDateTime">
            
            The earliest date and time an extensible attribute can be validated.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.MinNumericValue">
            
            The minimum numeric value required to validate an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.MinStringLength">
            
            The maximum length possible for a string value entered for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValidation.RegularExpression">
            
            Regular expression used to validate the extensible attribute value.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeValueLocalizedContent">
            
            	The attribute value localized content are the content strings used to describe an attribute value in the localized language specified by the site's locale code. Extensible only for customer and order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValueLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeValueLocalizedContent.Value">
            
            Localized content for the extensible attribute value.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue">
            
            	Properties of a vocabulary value defined for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue.Sequence">
            
            The numeric order of a vocabulary value defined for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue.Value">
            
            Possible value associated with a vocabulary value defined for an extensible attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue.Content">
            
            List of content associated with a vocabulary value defined for an extensible attribute.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Measurement">
            
            	Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Measurement.Unit">
            
            The unit of measurement, such as length or weight.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Measurement.Value">
            
            The value of the measured unit.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.Phone">
            
            	Phone number information for a contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Phone.Home">
            
            Home phone number.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Phone.Mobile">
            
            Mobile phone number.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.Phone.Work">
            
            Work phone number.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.ThirdParty.ActiveShippingCountry">
            
            	Properties of a shipping country active for a third-party capability.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.ThirdParty.ActiveShippingCountry.ActiveCarriers">
            
            Array list of the active shipping carriers for the country.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.ThirdParty.InitializablePropertyValue">
            
            	Properties of a value that can be initialized for a capability property.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.ThirdParty.InitializablePropertyValue.Initialized">
            
            If true, the property value is initialized.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.ThirdParty.InitializablePropertyValue.Value">
            
            Value of the initializable third-party capability property.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.ThirdParty.InitializableShippingCountryPropertyValue">
            
            	Property value that can be initialized for a capability that uses shipping countries.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.ThirdParty.InitializableShippingCountryPropertyValue.Initialized">
            
            If true, the property value is initialized.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.ThirdParty.InitializableShippingCountryPropertyValue.Value">
            
            Value of the initializable third-party capability property.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.ThirdParty.InitializableShippingCountryPropertyValue.Child">
            
            Child value in a hierarchy of shipping country properties.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.ThirdParty.OperationUrl">
            
            	Properties of a URL endpoint associated with a capability operation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.ThirdParty.OperationUrl.Name">
            
            The name of the URL endpoint.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.ThirdParty.OperationUrl.Url">
            
            The URL endpoint address.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.User">
            
            	Properties of the user.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.EmailAddress">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.FirstName">
            
            The first name of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.Id">
            
            Identifier of the user.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.IsActive">
            
            If true, the user is an active user.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.LastName">
            
            The last name or surname of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.Password">
            
            The user password.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.Roles">
            
            Collection of roles assigned to the user.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.User.SystemData">
            
            Collection of system-supplied data about the user.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.UserAuthInfo">
            
            	Information required to authenticate a user.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserAuthInfo.EmailAddress">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserAuthInfo.Password">
            
            Password of the user.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.UserProfile">
            
            	Properties of the admin user profile.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserProfile.EmailAddress">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserProfile.FirstName">
            
            The first name of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserProfile.LastName">
            
            The last name or surname of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserProfile.UserId">
            
            Identifier of the user.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserProfile.UserName">
            
            The user name associated with the user profile.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.UserRole">
            
            	Properties of a role assigned to a user for a defined scope.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserRole.RoleId">
            
            Unique identifier of the user role.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserRole.RoleName">
            
            The name of the user role, such as "developer" or "administrator".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserRole.UserId">
            
            Unique identifier of the user the role is assigned to.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserRole.AssignedInScope">
            
            Properties of the developer account or Mozu tenant associated with the user role.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserRole.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.UserScope">
            
            	Properties of the scope in which a user operates, which represents a developer account or Mozu production tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserScope.Id">
            
            Identifier of the scope, which represents a developer account ID or tenant ID.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserScope.Name">
            
            The name of the developer account or tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserScope.Type">
            
            The type of scope, which is a developer account or production tenant.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Core.UserSystemData">
            
            	System-supplied and read-only information about the user.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.CreatedOn">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.FailedLoginAttemptCount">
            
            The number of failed authentication attempts associated with the user.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.FirstFailedLoginAttemptOn">
            
            The date and time the initial login was unsuccessful, which is system-supplied and read only. Each time user authentication fails, an update occurs on this field.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.IsLocked">
            
            If true, the user account is locked due to multiple failed authentication attempts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.IsPasswordChangeRequired">
            
            If true, the login requires a password change for increased security. If false, the login does not require a password change.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.LastLockedOn">
            
            When the user's account was last locked. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.LastLoginOn">
            
            When the user last logged into the store. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.LastPasswordChangeOn">
            
            When the password was last modified. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.RemainingLoginAttempts">
            
            The number of login attempts left for the user. The user must login successfully before this value reaches zero otherwise the account will be locked.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Core.UserSystemData.UpdatedOn">
            
            Date and time when the entity was last updated, represented in UTC Date/Time.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.AddressValidationRequest">
            
            	Properties of the address to validate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.AddressValidationRequest.Address">
            
            Properties of the address to validate.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.AddressValidationResponse">
            
            	Array list of possible valid address matches based on the entry supplied in the request.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.AddressValidationResponse.AddressCandidates">
            
            Array list of possible valid address matches based on the entry supplied in the request.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.Card">
            
            	Properties of a credit card used to submit payment for an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Card.CardNumberPart">
            
            The masked credit card number part returned from the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Card.CardType">
            
            The type of credit card, such as Visa or Amex.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Card.ContactId">
            
            Unique identifier of the customer account contact associated with the credit card.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Card.ExpireMonth">
            
            The two-digit month the credit card expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Card.ExpireYear">
            
            The four-digit year the credit card expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Card.Id">
            
            Unique ID of the credit card for the customer account. This identifier is separate from the credit card number.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Card.NameOnCard">
            
            The name printed on the credit card.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CardCollection">
            
            	Collection of credit cards defined for the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CardCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CardCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CommerceSummary">
            
            	Properties of the commerce summary associated with a customer account, which includes details about the shopper's most recent order, wish lists, and total order value over time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CommerceSummary.LastOrderDate">
            
            The date and time the shopper last submitted an order for any site associated with the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CommerceSummary.OrderCount">
            
            The total number of order the shopper submitted across all sites associated with the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CommerceSummary.VisitsCount">
            
            The number of visits to a site associated with a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CommerceSummary.WishlistCount">
            
            The number of wish lists associated with a customer account. This number represents the total number of a shopper's wish lists across all sites associated with a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CommerceSummary.TotalOrderAmount">
            
            The aggregate total amount of all orders the shopper submitted, across all sites associated with the tenant.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.ContactType">
            
            	Properties of a type of contact associated with a customer account, such as Billing or Fulfillment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.ContactType.IsPrimary">
            
            If true, this is the primary contact of this contact type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.ContactType.Name">
            
            The name of this contact type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.Credit.Credit">
            
            	Properties of the store credit of gift card applied to a customer account. At this time, gift card functionality is reserved for future use.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.Credit.ActivationDate">
            
            The date and time the store credit or gift card was activated by the shopper. Credits cannot be used until activated. After the credit is activated, this property value is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.Credit.Code">
            
            User-defined identifier of the credit, which is unique within the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.Credit.CreditType">
            
            The type of customer credit, which is "GiftCard" or "StoreCredit".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.Credit.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.Credit.CurrentBalance">
            
            The current remaining balance of the credit applied to the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.Credit.CustomerId">
            
            Unique identifier of the shopper associated with the applied credit. For gift cards, this property is not required.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.Credit.ExpirationDate">
            
            The date and time the credit expires and can no longer be redeemed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.Credit.InitialBalance">
            
            The initial balance of the credit applied to the customer account. This value cannot be changed after it is set.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.Credit.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntry">
            
            	Properties of an audit entry logged for a store credit or gift card.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntry.ActivityType">
            
            The type of activity associated with the audit entry. Possible values are: Created, Updated, Deleted, Activated, Deactivated, or Transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntry.Details">
            
            Detail log that describes the activity performed for this credit audit entry.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntry.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntryCollection">
            
            	Paged list of audit entries associated with a customer's store credit or gift card.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntryCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntryCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntryCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntryCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntryCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.Credit.CreditCollection">
            
            	Paged list of store credits and gift cards defined for a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.Credit.CreditTransaction">
            
            	Properties of a transaction performed for a customer credit that update the remaining balance of the credit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditTransaction.Comments">
            
            Comments entered for a transaction. Depending on the interface, these comments might be visible to authorized shoppers and users.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditTransaction.Id">
            
            Unique identifier of the customer credit transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditTransaction.ImpactAmount">
            
            The amount to apply to the credit balance. The defined transaction type determines whether this amount represents a positive or negative integer.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditTransaction.TransactionType">
            
            The type of transaction to perform for the customer credit. To decrease the balance, set this parameter to "Debit". To increase the balance, set this parameter to "Credit".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditTransaction.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.Credit.CreditTransactionCollection">
            
            	Paged list of transactions associated with a customer credit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditTransactionCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditTransactionCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditTransactionCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditTransactionCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Credit.CreditTransactionCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CurrencyAmount">
            
            	The currency code and the total monetary sum of the order. Currently, only USD is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CurrencyAmount.Amount">
            
            The monetary amount in the specified currency locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CurrencyAmount.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerAccount">
            
            	Properties of the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.AcceptsMarketing">
            
            If true, the customer prefers to receive marketing material such as newsletters or email offers.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.CompanyOrOrganization">
            
            The legal or doing business as (DBA) or tradestyle name of the business or organization. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.EmailAddress">
            
            The email address associated with the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.ExternalId">
            
            Unique identifier an external system uses to identify this customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.FirstName">
            
            The first name associated with the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.Id">
            
            Identifier of the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.IsAnonymous">
            
            If true, this customer account represents an anonymous shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.LastName">
            
            The last name associated with the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.TaxExempt">
            
            If true, this customer account has tax exempt status.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.TaxId">
            
            The tax identification number associated with the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.UserId">
            
            Unique identifier of the user associated with the customer account. All customer accounts must have a defined user ID. If the shopper user is anonymous, the user ID represents a system-generated user ID string.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.UserName">
            
            The user name of the user associated with the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.Attributes">
            
            Collection of customer account attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.CommerceSummary">
            
            Properties of the commerce summary associated with a customer account, which includes details about the shopper's most recent order, wish lists, and total order value over time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.Contacts">
            
            Contact information, including the contact's name, address, phone numbers, email addresses, and company (if supplied). Also indicates whether this is a billing, shipping, or billing and shipping contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.Notes">
            
            List of customer account notes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccount.Segments">
            
            List of customer segments associated with the customer account. Customer accounts can be members of any number of segments.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerAccountAndAuthInfo">
            
            	The authentication information associated with a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccountAndAuthInfo.IsImport">
            
            If true, this customer account and its associated data was imported from an external source.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccountAndAuthInfo.Password">
            
            The password required to authenticate this customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccountAndAuthInfo.Account">
            
            The unique identifier of the customer account.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerAccountCollection">
            
            	Paged list of customer accounts sorted and filtered by any query parameters specified in the request.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccountCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccountCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccountCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAccountCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerAttribute">
            
            	Properties of an attribute associated with a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttribute.AttributeDefinitionId">
            
            Unique identifier of the attribute definition.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttribute.FullyQualifiedName">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttribute.Values">
            
            List of values for the attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttribute.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerAttributeCollection">
            
            	Collection of customer account attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttributeCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttributeCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttributeCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttributeCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAttributeCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket">
            
            	Properties of an authentication ticket generated for a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAuthTicket.AccessToken">
            
            Access token string that enables authentication for the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAuthTicket.AccessTokenExpiration">
            
            The date and time the access token expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAuthTicket.RefreshToken">
            
            Refresh token string used to generate a new access token after expiration for a customer account authentication ticket.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAuthTicket.RefreshTokenExpiration">
            
            The date and time the refresh token expires.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAuthTicket.UserId">
            
            User ID associated with the customer account authentication ticket.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerAuthTicket.CustomerAccount">
            
            Properties of the customer account associated with the authentication ticket.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerContact">
            
            	Contact information, including the contact's name, address, phone numbers, email addresses, and company (if supplied). Also indicates whether this is a billing, shipping, or billing and shipping contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.AccountId">
            
            Unique identifier of the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.CompanyOrOrganization">
            
            The legal or doing business as (DBA) or tradestyle name of the business or organization. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.Email">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.FaxNumber">
            
            The fax number associated with the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.FirstName">
            
            The first name of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.Id">
            
            Identifier of the customer contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.LastNameOrSurname">
            
            The last name or surname of the contact. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.MiddleNameOrInitial">
            
            The middle name or the first initial of the middle name of the contact. The maximum character length is 100.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.Address">
            
            Address associated with the customer account contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.PhoneNumbers">
            
            List of phone numbers associated with the customer account contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContact.Types">
            
            List of the types associated with a customer contact, such as Billing or Fulfillment.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerContactCollection">
            
            	Paged list of contact information for a specified customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContactCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContactCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContactCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContactCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerContactCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerLoginInfo">
            
            	The login information for a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerLoginInfo.EmailAddress">
            
            The email address associated with the customer login.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerLoginInfo.IsImport">
            
            If true, this customer account data was imported from an external program.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerLoginInfo.Password">
            
            The password associated with the customer login.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerLoginInfo.Username">
            
            The user name associated with the customer login.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerNote">
            
            	Properties of a note configured for a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNote.Content">
            
            The contents of a customer account note.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNote.Id">
            
            Identifier of the customer account note.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNote.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerNoteCollection">
            
            	Collection of notes for a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNoteCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNoteCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNoteCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNoteCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerNoteCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerSegment">
            
            	The Customer Segment object includes properties of a defined customer segment used to group customer accounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerSegment.Code">
            
            The user-defined code assigned for the customer segment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerSegment.Description">
            
            Description of the customer segment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerSegment.Id">
            
            Unique identifier of the customer segment. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerSegment.Name">
            
            Name of the customer segment.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerSegmentCollection">
            
            	Paged list of customer segments.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerSegmentCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerSegmentCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerSegmentCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.CustomerUserAuthInfo">
            
            	The authentication information required to generate an authentication ticket for a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerUserAuthInfo.Password">
            
            The password of the user associated with the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.CustomerUserAuthInfo.Username">
            
            The user name of the user associated with the customer account.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.InStockNotificationSubscription">
            
            	Properties of a push notification to which the shopper subscribes. This notification sends the shopper an alert when a new product or a product previously out of stock becomes available in the specified location's active product inventory.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscription.CustomerId">
            
            Unique identifier of the customer associated with the in-stock notification subscription.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscription.Email">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscription.Id">
            
            Unique identifier of the customer in-stock notification subscription.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscription.LocationCode">
            
            Tenant-defined code that identifies the customer in-stock notification subscription.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscription.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscription.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.InStockNotificationSubscriptionCollection">
            
            	Collection of push notifications to which the shopper subscribes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscriptionCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscriptionCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscriptionCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscriptionCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.InStockNotificationSubscriptionCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.LoginState">
            
            	Properties of the login state of a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.LoginState.CreatedOn">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.LoginState.FailedLoginAttemptCount">
            
            The total number of times the customer account has unsuccessfully attempted to log in.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.LoginState.FirstFailedLoginAttemptOn">
            
            The date and time the customer's first unsuccessful attempt to log in was recorded.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.LoginState.IsLocked">
            
            If true, the customer account is locked and the customer cannot log in.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.LoginState.IsPasswordChangeRequired">
            
            If true, the customer account user must change the password for the account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.LoginState.LastLockedOn">
            
            The date and time the customer account was most recently locked.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.LoginState.LastLoginOn">
            
            The date and time the customer account last logged in.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.LoginState.LastPasswordChangeOn">
            
            The date and the time the user associated with the customer account last changed the account password.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.LoginState.RemainingLoginAttempts">
            
            The remaining number of login attempts the customer can perform before the system locks the customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.LoginState.UpdatedOn">
            
            Date and time when the entity was last updated, represented in UTC Date/Time.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.ResetPasswordInfo">
            
            	Information required to reset the password for a customer account.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.ResetPasswordInfo.EmailAddress">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.ResetPasswordInfo.UserName">
            
            User name of the user associated with the customer account.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.Transaction">
            
            	Properties of a transaction performed by a customer account. The system creates a transaction each time the customer submits an order, returns an item, picks up items for an order, or manages items on a wish list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Transaction.Amount">
            
            If applicable, the amount of the transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Transaction.Date">
            
            The date and time the customer transaction occurred.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Transaction.InteractionType">
            
            The type of interaction the customer used to perform the transaction, which is "Website," "Call," "Store," or "Unknown."
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Transaction.TransactionId">
            
            The unique identifier of the transaction.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Transaction.TransactionType">
            
            The type of transaction the customer performed, which is "Order," "Return," "OrderPickup," or "Wishlist."
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Transaction.VisitId">
            
            Unique identifier of the customer visit associated with the transaction. Customers can perform multiple transactions in the same visit.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.Visit">
            
            	Properties of a customer visit to one of a company's sites.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.AccountId">
            
            Unique identifier of the customer account associated with the visit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.BrowserLocationCode">
            
            If the customer visit is made online, the location code associated with the website visited.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.Date">
            
            The date and time of the customer visit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.Id">
            
            Unique identifier of the customer visit.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.LocationCode">
            
            If the customer visit is made in person and associated with a defined location, the code that identifies the location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.Type">
            
            The type of customer visit, which is "Website," "Store," "Call," or "Unknown."
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.UserId">
            
            The user ID of the customer who visited the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.WebReferrer">
            
            The HTTP_Referrer that initiatied the visit started. If the shopper was not referred from another source, this value is null.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.WebSessionId">
            
            If the visit was made online, the identifier of the web session associated with the visit, which is system-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.WebSiteId">
            
            Unique identifier of the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.WebUserAgent">
            
            The user agent string for the browser.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.Visit.Transactions">
            
            Array list of transactions the customer performed during the visit. A customer can perform multiple transactions in a single visit, or the visit can have no associated transactions.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Customer.VisitCollection">
            
            	Paged collection of customer visits.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.VisitCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.VisitCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.VisitCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.VisitCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Customer.VisitCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Event.Event">
            
            	Properties of an event the system creates each time a create, read, update, or delete operation is performed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.CatalogId">
            
            The unique identifier of the catalog of products used by a site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.CorrelationId">
            
            The unique identifier of the API request associated with the event action, which might contain multiple actions.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.EntityId">
            
            The unique identifier of the entity that caused the event. For example, if the event is "product.created", the entity ID value represents the product code of the product that was created.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.Id">
            
            The unique identifier of the event.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.IsTest">
            
            If true, the event record was generated as a test request for an application.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.MasterCatalogId">
            
            The unique identifier of the master catalog associated with the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.Topic">
            
            The type of event that was performed, such as "product.created" or "category.deleted".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.Event.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Event.EventCollection">
            
            	The paged collection of events.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Event.EventCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Location.Coordinates">
            
            	Properties of the geographical coordinates associated with a specific location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Coordinates.Lat">
            
            The latitude coordinate of the location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Coordinates.Lng">
            
            The longitude coordinate of the location.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Location.FulfillmentType">
            
            	Properties of a method used to fulfill items for an order. Fulfillment types are system-supplied, and include direct ship (DS) or in-store pickup (SP) at this time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.FulfillmentType.Code">
            
            The system-supplied code that identifies the fulfillment type, which is "DS" for direct ship or "SP" for in-store pickup.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.FulfillmentType.Name">
            
            The system-supplied name of the fulfillment type, which is "Direct Ship" or "In Store Pickup".
            
        </member>
        <member name="T:Mozu.Api.Contracts.Location.Hours">
            
            	Container for the label that describes the range of operating hours for a location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Hours.Label">
            
            Label that describes the range of operating hours for a location. For example - {"Label": "10:00 AM - 6:00 PM"}
            
        </member>
        <member name="T:Mozu.Api.Contracts.Location.Location">
            
            	Properties of a physical location a tenant uses to manage inventory and fulfills orders, provide store finder functionality, or both.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.Code">
            
            User-defined code to assign to this location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.Description">
            
            User-defined description of this location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.Fax">
            
            The fax number associated with this location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.Name">
            
            The user-defined name of the location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.Note">
            
            Any tenant-defined notes associated with this location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.Phone">
            
            The phone number associated with this location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.SupportsInventory">
            
            If true, this location maintains its own product inventory. If the location uses the direct ship fulfillment type, it must also support inventory.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.Tags">
            
            List of tenant-defined tags associated with this location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.Address">
            
            The physical address properties of the location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.FulfillmentTypes">
            
            List of order fulfillment types associated with this location. The location can have fulfillment types of direct ship (DS), in-store pickup (SP), or both.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.Geo">
            
            The geographical coordinates associated with this location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.LocationTypes">
            
            List of location types associated with this location. You can associate individual locations with any number of location types.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.RegularHours">
            
            List of standard operating hours for each day of the week this location is open for shopper business.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.Location.ShippingOriginContact">
            
            Properties of a fulfillment contact for the shipping origin address associated with a location.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Location.LocationCollection">
            
            	A list of physical locations defined for a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Location.LocationType">
            
            	Properties of a type of physical location, such as warehouse or kiosk. Location types enable tenants to group similar locations for filtering and location usage type definition.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationType.Code">
            
            User-defined identifying code for the location type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationType.Name">
            
            The name of the location type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Location.LocationUsage">
            
            	Configuration properties of a location usage type for a specified site. The direct ship location usage type consists of a single location that represents location that supports direct ship (DS) fulfillment. The in-store pickup location usage type consists of a list of location types that represent locations that support in-store pickup (SP) fulfillment. The store finder location usage type consists of a list of location codes, location types, or both.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationUsage.LocationCodes">
            
            List of location codes to associate with the location usage. At this time, you can only specify one location code in the request for the direct ship location usage type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationUsage.LocationTypeCodes">
            
            List of location type codes associated with the location usage. The location service identifies the locations of the designated type. The in-store pickup (SP) and store finder (storeFinder) location usage types allow specification or multiple location type codes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationUsage.LocationUsageTypeCode">
            
            The system-defined code used to identify the location usage type, which is "DS" for direct ship, "SP" for in-store pickup, or "storeFinder".
            
        </member>
        <member name="T:Mozu.Api.Contracts.Location.LocationUsageCollection">
            
            	Properties of the location usage for direct ship, in-store pickup, or the store finder.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationUsageCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.LocationUsageCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Location.RegularHours">
            
            	Array list of standard operating hours for each day of the week this location is open for shopper business.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.RegularHours.Friday">
            
            The Friday label array describes the range of hours this location is normally open on Fridays. For example: {"Label": "10:00 AM - 6:00 PM"}.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.RegularHours.Monday">
            
            The Monday label array describes the range of hours this location is normally open on Mondays. For example: {"Label": "10:00 AM - 6:00 PM"}.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.RegularHours.Saturday">
            
            The Saturday label array describes the range of hours this location is normally open on Saturdays. For example: {"Label": "10:00 AM - 6:00 PM"}.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.RegularHours.Sunday">
            
            The Sunday label array describes the range of hours this location is normally open on Sundays. For example: {"Label": "10:00 AM - 6:00 PM"}.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.RegularHours.Thursday">
            
            The Thursday label array describes the range of hours this location is normally open on Thursdays. For example: {"Label": "10:00 AM - 6:00 PM"}.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.RegularHours.Tuesday">
            
            The Tuesday label array describes the range of hours this location is normally open on Tuesdays. For example: {"Label": "10:00 AM - 6:00 PM"}.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.RegularHours.Wednesday">
            
            The Wednesday label array describes the range of hours this location is normally open on Wednesdays. For example: {"Label": "10:00 AM - 6:00 PM"}.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Location.ShippingOriginContact">
            
            	Properties of a fulfillment contact for the shipping origin address associated with a location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.ShippingOriginContact.CompanyOrOrganization">
            
            The legal or doing business as (DBA) or tradestyle name of the business or organization. The maximum character length is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.ShippingOriginContact.Email">
            
            The email address of the specified user or the email address associated with the specified entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.ShippingOriginContact.FirstName">
            
            The first name of the shipping origin contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.ShippingOriginContact.LastNameOrSurname">
            
            The last name of the shipping origin contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.ShippingOriginContact.MiddleNameOrInitial">
            
            The middle name or middle initial of the shipping origin contact.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Location.ShippingOriginContact.PhoneNumber">
            
            Collection of phone numbers associated with the shipping origin contact.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PaymentService.GatewayAccount">
            
            	Account information for the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayAccount.CountryCode">
            
            The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayAccount.GatewayDefinitionId">
            
            Identifier of the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayAccount.Id">
            
            Identifier of the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayAccount.IsActive">
            
            If true, the product is marked as available for sale. Setting a product to IsActive = false will prevent it from being shown on the customer facing storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayAccount.CredentialFields">
            
            List of credential fields for the payment gateway account.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PaymentService.GatewayCredentialFieldDefinition">
            
            	Properties of the credential fields associated with the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayCredentialFieldDefinition.AdminDisplayOrder">
            
            The sequential display order of the gateway in Mozu Admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayCredentialFieldDefinition.DisplayName">
            
            The name that displays for the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayCredentialFieldDefinition.Name">
            
            The localizable name of the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayCredentialFieldDefinition.VolusionStoreName">
            
            The name of the Volusion store.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PaymentService.GatewayCredentialFieldValue">
            
            	Field value information for the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayCredentialFieldValue.Name">
            
            The name of the payment gateway field.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayCredentialFieldValue.Value">
            
            The value of the payment gateway field.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PaymentService.GatewayDefinition">
            
            	Properties of the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.CountryCode">
            
            The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.Id">
            
            Unique identifier of the payment gateway definition.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.IntegrationImplTypeName">
            
            The implementing type name of the integration with the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.Name">
            
            Name of the payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.ProdServiceURL">
            
            URL of the production payment service.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.TestServiceURL">
            
            URL of the test payment service environment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.CredentialDefinitions">
            
            Credential fields for the payment gateway. For security purposes, Mozu does not return these credential fields.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.PreAuthorizeDefinition">
            
            Definition of the preauthorization gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.GatewayDefinition.SupportedCards">
            
            The types of credit cards supported by this payment gateway.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PaymentService.PreAuthorizeDefinition">
            
            	Definition of the preauthorization gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PreAuthorizeDefinition.Id">
            
            Identifier of the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PreAuthorizeDefinition.PreAuthorizeProdUrl">
            
            The product environment URL associated with the preauthorization gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PreAuthorizeDefinition.PreAuthorizeTestUrl">
            
            The test environment URL associated with the preauthorization gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PreAuthorizeDefinition.Type">
            
            The type of preauthorization gateway.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PaymentService.PreAuthorizeTransactionTypeDataContract">
            
            	The type of preauthorization gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PreAuthorizeTransactionTypeDataContract.Description">
            
            Description of the preauthorization transaction type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PreAuthorizeTransactionTypeDataContract.Id">
            
            Identifier of the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.PreAuthorizeTransactionTypeDataContract.Type">
            
            The type of preauthorization transaction.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PaymentService.SupportedCard">
            
            	Properties of a supported credit card for the site's payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.SupportedCard.FriendlyName">
            
            Company-defined friendly name that identifies the supported card.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PaymentService.SupportedCard.Type">
            
            The card type of the supported payment card, such as Visa or Amex.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.ProductAttribute">
            
            	Details of the product attribute, such its name and description.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductAttribute.DataType">
            
            The data type of the attribute. There are four valid data types: "Bool", "DateTime", "Number", "String"
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductAttribute.Description">
            
            The description of this product attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductAttribute.InputType">
            
            The storefront interface input type for this attribute such as a radio button or drop-down menu selection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductAttribute.Name">
            
            The name of the product attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductAttribute.ValueType">
            
            An attribute value type is either predefined vocabulary by the admin during product attribute set up or it can be "AdminEntered" or "ShopperEntered". The difference between predefined values versus manually entered values is such that the first choice is a set of options to choose from. AdminEntered and ShopperEntered are values that are entered rather than system-supplied and are not stored in the database, but captured during a live commerce operations such as during an order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.ProductProperty">
            
            	Details of a property defined for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductProperty.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductProperty.IsHidden">
            
            If true, this product property does not appear on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductProperty.IsMultiValue">
            
            If true, the product property has multiple values.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductProperty.AttributeDetail">
            
            Details of a product attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductProperty.Values">
            
            List of values predefined for the product property attribute.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.ProductPropertyValue">
            
            	Properties of a value for a product property.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductPropertyValue.StringValue">
            
            If the product property value is a text entry, the string value of the product property.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ProductPropertyValue.Value">
            
            If the product property value is selected from a list of possible values, the selected value.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem">
            
            	Properties of a line item in an order that is subject to tax.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.Id">
            
            Unique identifier of the taxable line item.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.IsTaxable">
            
            If true, the line item in the order is subject to tax.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.LineItemPrice">
            
            The sale price of the line item in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.ProductName">
            
            The name of the product that represents a line item in a taxable order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.Quantity">
            
            The quantity of the line item in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.Reason">
            
            The reason the item is either taxed or returned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.ShippingAmount">
            
            The amount of shipping calculated for a line item in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableLineItem.ProductProperties">
            
            Properties of the product that represents the line item in the order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.TaxableOrder">
            
            	Properties of an order for which to calculate tax. When a tax capability is enabled for a tenant, Mozu sends the TaxableOrder properties to the capability as read-only, system-supplied information.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.HandlingFee">
            
            Handling fee associated with the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.OrderDate">
            
            The date and time the order was submitted.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.OriginalDocumentCode">
            
            The unique identifier of the original order, used to track order changes for tax purposes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.OriginalOrderDate">
            
            The date and time the original order was placed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.ShippingAmount">
            
            The total shipping amount calculated for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.TaxRequestType">
            
            The type of request for which to tax this entity, which is "Order" or "Return."
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.LineItems">
            
            The line items associated with the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxableOrder.TaxContext">
            
            The tax properties associated with the order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.TaxContext">
            
            	The tax properties associated with the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxContext.CustomerId">
            
            Unique identifier of the customer.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxContext.TaxContextId">
            
            Unique identifier of the tax context.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxContext.TaxExemptId">
            
            If the order is exempt from sales tax, the unique identifier of the tax exempt entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxContext.DestinationAddress">
            
            The address to which the order ships.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.TaxContext.OriginAddress">
            
            The address from which the order ships.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.ThirdParty.ItemTaxContext">
            
            	Properties of the tax context applicable for line items in an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.ItemTaxContext.Id">
            
            Unique identifier of the line item in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.ItemTaxContext.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.ItemTaxContext.Quantity">
            
            Quantity of the line item in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.ItemTaxContext.ShippingTax">
            
            Amount of tax applied to shipping costs for the line item in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.ItemTaxContext.Tax">
            
            The total tax amount applied to the line item in the order, minus any shipping taxes.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.ThirdParty.OrderTaxContext">
            
            	Properties of the tax context applicable for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.OrderTaxContext.HandlingFeeTax">
            
            Tax amount applied to the handling fee defined for orders on this site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.OrderTaxContext.OrderTax">
            
            Tax amount applied to the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.OrderTaxContext.ShippingTax">
            
            Tax amount applied to the shipping costs on the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.OrderTaxContext.ItemTaxContexts">
            
            Properties of the tax context applicable for line items in an order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxableOrder">
            
            	Properties of an order for which to calculate tax. When a tax capability is enabled for a tenant, Mozu sends the TaxableOrder properties to the capability as read-only, system-supplied information.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxableOrder.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxableOrder.HandlingFee">
            
            Handling fee associated with the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxableOrder.OrderDate">
            
            The date and time the order was submitted.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxableOrder.OriginalDocumentCode">
            
            The unique identifier of the original order, used to track order changes for tax purposes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxableOrder.OriginalOrderDate">
            
            The date and time the original order was placed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxableOrder.ShippingAmount">
            
            The total shipping amount calculated for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxableOrder.TaxRequestType">
            
            The type of request for which to tax this entity, which is "Order" or "Return."
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxableOrder.LineItems">
            
            List of line items in a taxable order object.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxableOrder.TaxContext">
            
            The tax properties associated with the order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxContext">
            
            	Properties of the taxable context associated with the order or return.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxContext.CustomerId">
            
            Unique identifier of the customer.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxContext.TaxContextId">
            
            Unique identifier of the tax context.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxContext.TaxExemptId">
            
            If the order is exempt from sales tax, the unique identifier of the tax exempt entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxContext.TaxShipping">
            
            The taxable amount that can be levied against shipping charges.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxContext.DestinationAddress">
            
            The address to which item in the order will ship.
            
        </member>
        <member name="P:Mozu.Api.Contracts.PricingRuntime.ThirdParty.TaxContext.OriginAddress">
            
            The address from which the item in the order will ship.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.Attribute">
            
            	Details of an attribute used to describe individual aspects of a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AdminName">
            
            The administrative name of the product attribute as it appears in Mozu Admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AttributeCode">
            
            Merchant-defined identifier of the product attribute used to generate the attribute's fully qualified name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AttributeDataTypeSequence">
            
            Generated sequence that increments for each attribute and data type combination created. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AttributeSequence">
            
            Generated sequence that increments for each product attribute created. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.DataType">
            
            The data type of the product attribute, which is a Bool, DateTime, Number, or String. The attribute's data type cannot be changed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.InputType">
            
            The storefront interface input type for the product attribute, which is a Date, DateTime, List, TextArea, TextBox, or YesNo. The attribute's input type cannot be changed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.IsExtra">
            
            If true, the product attribute is an add-on configuration made by the shopper that does not represent a product variation, such as a monogram.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.IsOption">
            
            If true, the product attribute is a merchant- or shopper-configurable option, such as size or color, that represents a product variation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.IsProperty">
            
            If true, the product attribute describes aspects of the product that do not represent an option configurable by the shopper, such as screen resolution or brand.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.MasterCatalogId">
            
            The unique identifier of the master catalog associated with the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.Namespace">
            
            If applicable, the registered namespace associated with the product attribute, used to generate the fully qualified name. If no namespace is defined, the namespace associated with the tenant is automatically assigned.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.ValueType">
            
            The type of value associated with the product attribute, which is ShopperEntered (the shopper selects or enters an attribute value during checkout), Predefined (the merchant sets the attribute value from a list during product attribute definition), or AdminEntered (the merchant selects or enters a value during product definition). The attribute value type cannot be changed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AttributeMetadata">
            
            List of key-value pairs that store metadata associated with the product attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.Validation">
            
            Properties of the validation of a product attribute, which contains rules that dictate what values are valid entries for product attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Attribute.VocabularyValues">
            
            Array list of the defined vocabulary values for the specified product attribute. For example, for a Color attribute, vocabulary values might include black, white, and purple.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeCollection">
            
            	Paged list of defined product attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType">
            
            	Properties of an attribute definition associated with a specific product type. When an attribute is applied to a product type, each product of that type maintains the same set of attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.IsHiddenProperty">
            
            If true, this property is hidden on the storefront. If false, this property is not hidden from the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.IsInheritedFromBaseType">
            
            If true, this entity is inherited from the base type. If false, this entity is not inherited from the base type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.IsMultiValueProperty">
            
            If true, this attribute has more than one possible value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.IsRequiredByAdmin">
            
            If true, the entity is required by the admin. If false, the entity is not required by the admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.Order">
            
            The sequence of this attribute within its product type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.AttributeDetail">
            
            The wrapper for the properties of the product attribute to set up or generate from the system in the product admin. Properties include namespace, attribute code, attribute sequence, site group ID, input type, value type, data type, boolean flags, and metadata key value pairs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType.VocabularyValues">
            
            The list of vocabulary values available for the attribute associated with the product type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent">
            
            	Localized content displayed in the storefront for this attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent.Description">
            
            Localized content for the description of this attribute displayed in the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent.Name">
            
            Localized content for the attribute name displayed in the storefront.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeMetadataItem">
            
            	Item used to define additional key-value pairs of data associated with a product attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeMetadataItem.Key">
            
            User-defined key for attribute metadata.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeMetadataItem.Value">
            
            Value for the user-defined key.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRule">
            
            	Properties of the attribute type rule.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRule.AttributeDataType">
            
            The data type of the attribute. There are four valid data types: "Bool", "DateTime", "Number", "String"
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRule.AttributeInputType">
            
            An attribute's data type would be either "NotSpecified", "Textbox", "Textarea", "Date", "DateTime", "Dropdown", "Listbox", "Radio", "Currency", or "Checkbox" and will be a valid value defined in the type rules resource.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRule.AttributeUsageType">
            
            Describes how an attribute will be used. Valid types are "Extra", "Option", and "Property".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRule.AttributeValueType">
            
            An attribute value type is either predefined vocabulary by the admin during product attribute set up or it can be "AdminEntered" or "ShopperEntered". The difference between predefined values versus manually entered values is such that the first choice is a set of options to choose from. AdminEntered and ShopperEntered are values that are entered rather than system-supplied and are not stored in the database, but captured during a live commerce operations such as during an order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection">
            
            	Collection of attribute type rules.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeValidation">
            
            	Validates the attribute configured for the product in the storefront against the attribute configured in product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.MaxDateValue">
            
            System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.MaxNumericValue">
            
            The maximum number of characters for the numeric length.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.MaxStringLength">
            
            The maximum number of characters for the string length.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.MinDateValue">
            
            System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.MinNumericValue">
            
            The minimum number of characters for the numeric length.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.MinStringLength">
            
            The minimum character length of the string.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeValidation.RegularExpression">
            
            Regular expression used to process attribute values that require special formatting such as phone numbers.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue">
            
            	Properties of an individual vocabulary value for an attribute. For example, a "color" attribute might have the following vocabulary values: Red, Blue, Green.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue.Value">
            
            The actual vocabulary value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue.ValueSequence">
            
            The number that denotes the order of the entity value within a list of entity values.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueInProductType">
            
            	The actual vocabulary value of the attribute that exists as a part of the product type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueInProductType.Order">
            
            Sequence of the attribute value within the product type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueInProductType.Value">
            
            The vocabulary value of an attribute defined for a product type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueInProductType.VocabularyValueDetail">
            
            Navigates vocabulary value details for an attribute defined for a product type.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent">
            
            	The localized text for the string value of a product attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent.StringValue">
            
            The localized value of the string in the language of the locale code.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.BundledProduct">
            
            	Properties of a component product in a product bundle. A product bundle can represent either a collection of multiple products sold as a single entity, or a collection of the same product sold as a package. For example, a 10-pack of socks.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.BundledProduct.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.BundledProduct.ProductName">
            
            The read-only name of the component in a bundled product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.BundledProduct.Quantity">
            
            The quantity of an individual component product in a bundle. For example, if a product bundle represents a 10-pack of socks, the quantity value for the bundled product would be 10.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.BundledProduct.PackageHeight">
            
            Height of the bundle package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.BundledProduct.PackageLength">
            
            Length of the bundle package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.BundledProduct.PackageWeight">
            
            Weight of the bundle package in imperial units of pounds and ounces.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.BundledProduct.PackageWidth">
            
            Width of the bundle package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.BundledProduct.Price">
            
            The price of the bundled product set for the tenant.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.Category">
            
            	A descriptive container in a storefront hierarchy to organize collections of products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.ChildCount">
            
            The number of children (subcategories, for example) that stem from a parent (top-level category).
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.Id">
            
            Identifier of the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.IsDisplayed">
            
            If true, the admin product category is displayed in the store. If true, the category is not displayed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.ParentCategoryId">
            
            Identifier of the parent or top-level category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.ProductCount">
            
            The number of products in a list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.Sequence">
            
            The numeric value that denotes the place this entity occupies in the order of the entity list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Category.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.CategoryCollection">
            
            	The container for a non-paged list of related site-specific product category properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.CategoryDiscountCondition">
            
            	Properties of the conditions that must be met for a discount to apply to a product category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryDiscountCondition.CategoryId">
            
            The unique identifier of the product category associated with the discount.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent">
            
            	The container for category properties that are shown in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.Description">
            
            Description of the product category in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.MetaTagDescription">
            
            Description defined for the product category metadata, used to manage internal product information, in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.MetaTagKeywords">
            
            Keywords defined for the product category metadata, used to manage internal product information, in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.MetaTagTitle">
            
            Title defined for the product category metadata, used to manage internal product information, in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.Name">
            
            The name of the product category in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.PageTitle">
            
            Title that appears on new product category pages, in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.Slug">
            
            Human-readable identifier to assign to the category to generate user-friendly URLs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedContent.CategoryImages">
            
            Array of localized product category images in the language specified by the LocaleCode.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedImage">
            
            	The localized product category image in the language specified by the LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedImage.AltText">
            
            Descriptive text associated with the image or video that appears on the web storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedImage.CmsId">
            
            The identifier of the category image in the Mozu CMS. Supply a value for either the CMS ID or Image URL parameter.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedImage.Id">
            
            Identifier of the localized product category image.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedImage.ImageLabel">
            
            Image title that appears on the web storefront set to the language specified by the site's LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedImage.ImageUrl">
            
            URL of the product category image.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedImage.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedImage.MediaType">
            
            Type of media specification required to successfully render the image, video, or other media content for the product category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedImage.Sequence">
            
            Integer that represents the sequential order of this category image or video.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryLocalizedImage.VideoUrl">
            
            The URL of the product category video. The path name is set in the language specified by the LocaleCode.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection">
            
            	The container for paged lists of related site-specific product category properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.CustomerSegment">
            
            	Properties of a customer segment used to group sets of customers for targeted reporting and discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.CustomerSegment.Id">
            
            Unique identifier of the customer segment.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.Discount">
            
            	Discount used to calculate SalePrice. Includes coupon code if applicable, amount of the discount, and discount savings. Discounts can be either an absolute price or a percentage off. The sale price beats any discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.Amount">
            
            The integer amount of the discount. For example, an entry of "10" could represent a discount of $10.00 or a discount of 10%, depending on the type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.AmountType">
            
            The type of discount amount, such as an amount or a percentage.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.CurrentRedemptionCount">
            
            The number of times this discount has been redeemed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.DoesNotApplyToSalePrice">
            
            If true, this discount does not apply to a line item product with a defined sale price. The default is false, which applies the discount to products with and without defined sale prices.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.Id">
            
            Unique identifier of the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.Scope">
            
            The scope to which the discount applies, which is "Order" for order discounts or "LineItem" for individual product discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.Status">
            
            Current status of the product discount. Possible values are "Active", "Scheduled", or "Expired".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.Conditions">
            
            List of conditions that must be met for the discount to apply.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Discount.Target">
            
            Properties of the target object to which the discount applies, such as a product or an order.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.DiscountCollection">
            
            	The container for a list of discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.DiscountCondition">
            
            	Properties of the conditions that must be met for a discount to apply to an order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.CouponCode">
            
            If the discount is a coupon, the code required to redeem the coupon.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.ExpirationDate">
            
            The date and time on which the discount expires and cannot be redeemed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.MaxRedemptionCount">
            
            The maximum number of times the discount can be redeemed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.MinimumLifetimeValueAmount">
            
            The minimum customer lifetime value amount required to redeem this discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.MinimumOrderAmount">
            
            The minimum order amount required to redeem this discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.RequiresCoupon">
            
            If true, redemption of this discount requires entry of a coupon code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.StartDate">
            
            The earliest date and time this discount can be redeemed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.CustomerSegments">
            
            List of customer segments associated with the discount. Shoppers who are members of an associated customer segment can redeem this discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.ExcludedCategories">
            
            List of the product categories that are not eligible for the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.ExcludedProducts">
            
            List of the products that are not eligible for the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.IncludedCategories">
            
            List of product categories that are eligible for the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountCondition.IncludedProducts">
            
            List of products that are eligible for the discount.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent">
            
            	The container for the language-specific name of the discount. A container exists for each supported language (LocaleCode). This parameter enables you to display the discount name in multiple languages yet manage it as a single discount internally.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent.Name">
            
            The localizable name of the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.DiscountTarget">
            
            	Properties of the target to which the discount applies, such as the type of discount and which products, categories, or shipping methods are eligible for the discount and the properties of this discount target.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.IncludeAllProducts">
            
            If true, the target discount applies to all products sold on the site, regardless of product category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.Type">
            
            Properties of the object to which this discount is targeted, which can be Product or Shipping. If the discount type is Product, the target properties describe the product or product categories to which the discount applies. If the discount type is Shipping, the target properties describe the shipping methods eligible for the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.Categories">
            
            The product categories to which the discount can apply. When a discount applies to a category, all products in the category are eligible for the discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.ExcludedCategories">
            
            Array list of categories to exclude for this discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.ExcludedProducts">
            
            Array list of products to exclude for this discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.Products">
            
            List of  product codes that represent the products to which the discount can apply.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.DiscountTarget.ShippingMethods">
            
            The list of shipping method codes that represents the shipping service types to which the discount can apply.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.Facet">
            
            	Properties of the category, price, or attribute facet shoppers use to filter product display results on a storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.CategoryId">
            
            Unique identifier for the storefront container used to organize products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.FacetId">
            
            Unique identifier of the facet.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.FacetType">
            
            The type of facet. Valid values are "range," which enables creation of a range of values, or "value," which populates the facet values based on the associated attribute or category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.IsHidden">
            
            If true, disables a facet inherited from a parent category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.Order">
            
            The numeric sequence of the facet for its associated category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.OverrideFacetId">
            
            Overrides a facet inherited from a parent category for a specified subcategory. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.RangeQueries">
            
            For range type facets, an array of ranges to use for the facet values. For example, a price facet might have range queries for $0-$25, $25-$50, and $50-$100.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.Source">
            
            Container for the facet source information, which includes the category, price, or attribute properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Facet.Validity">
            
            System-supplied and read only parameter that validates a facet for its associated category.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.FacetRangeQuery">
            
            	For range type facets, a single range of facet values. For example, a price facet might have a $0-$25 range query.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetRangeQuery.RangeValueEnd">
            
            The maximum value to use for the facet range query.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetRangeQuery.RangeValueStart">
            
            The minimum value to use for the facet range query.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.FacetSet">
            
            	The list of category, price, and attribute facets defined or available for definition for the category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSet.Available">
            
            The list of subcategories and attributes that have not been defined as facets for the category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSet.Configured">
            
            The list of category, price, and attribute facets defined for the category.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.FacetSource">
            
            	Container for the facet source information, which includes the category, price, or attribute properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSource.AllowsRangeQuery">
            
            If true, the facet allows for values that consist of one or more ranges, such as 0-100, 100-200, and 200-300.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSource.DataType">
            
            The data type associated with the attribute or category that generates the facet, such as bool or string.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSource.Id">
            
            Identifier of the facet source, which is attribute, category, or price. For attribute facets, the AttributeFQN.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSource.Name">
            
            System-supplied and read-only name of the associated facet source.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetSource.Type">
            
            The source type for the facet, either "Attribute" or "Element". Category and price facets are elements.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.FacetValidity">
            
            	System-supplied and read only parameter that validates a facet for its associated category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetValidity.IsValid">
            
            If true, the facet source is valid for its associated category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.FacetValidity.ReasonCode">
            
            Code associated with a reason for facet validation to return false for its associated category.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory">
            
            	Properties of an inventory definition that defines the level of inventory for a specific product at a given location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventory.LocationCode">
            
            User-defined code that uniquely identifies the location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventory.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventory.ProductName">
            
            The name defined in the product definition. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventory.StockAvailable">
            
            The stock level for the associated product currently available at this location, based on the number of pending product reservations. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventory.StockOnBackOrder">
            
            The stock level for the associated product currently on back order for this location, based on the number of pending product reservations. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventory.StockOnHand">
            
            The current physical stock level for the associated product, which does not account for pending product reservations.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventory.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.LocationInventoryAdjustment">
            
            	Properties of an adjustment to the active product inventory of a specific location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventoryAdjustment.LocationCode">
            
            User-defined code that identifies the location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventoryAdjustment.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventoryAdjustment.Type">
            
            The type of inventory adjustment to perform, which is "Absolute" or "Delta". If adjusting by an absolute value, enter the integer in the Value parameter. If adjusting by a delta value, enter the delta in the Value parameter.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventoryAdjustment.Value">
            
            Value of the location inventory adjustment, which is an absolute integer or delta. For example, to decrease the current inventory level by 2, set the Type parameter to "Delta" and the Value parameter to "-2". To adjust the inventory to a current level of 12, set the Type parameter to "Absolute" and the Value parameter to "12".
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection">
            
            	Array list of inventory definitions that manage the stock level of products at a given location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.MasterCatalog">
            
            	Properties of a master catalog associated with a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.MasterCatalog.Id">
            
            The unique identifier of the master catalog associated with the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.MasterCatalog.Name">
            
            The name of the master catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.MasterCatalog.ProductPublishingMode">
            
            The mode this master catalog uses for product updates. Possible values are "Pending" which saves product updates as a draft until they are published, and "Live" which publishes all product updates immediately.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.MasterCatalogCollection">
            
            	Collection of master catalogs associated with a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.MasterCatalogCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.MasterCatalogCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.Product">
            
            	Properties of a product in a master catalog. Product properties include discounts, localizable content, inventory information, attribute configurations, price data, and the catalogs associated with a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.BaseProductCode">
            
            Product code defined by the tenant administrator to use as a base prefix when generating product codes for any variations of this product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.FulfillmentTypesSupported">
            
            Describes the types of fulfillment that are supported for this product. A product can support direct ship, in-store pickup, or both. Supported fulfillment types are defined at the master catalog level. Client administrators cannot override the supported fulfillment types at the catalog level.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.HasConfigurableOptions">
            
            If true, the product has configurable options. This option means that a product is not purchasable until the shopper selects options that resolve into a product variation. Configurable options for a product are the choices a shopper makes when ordering a product. Size and color are configurable options. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.HasStandAloneOptions">
            
            If true, this product has standalone options that a shopper can select without configuring a defined product variations. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.IsPackagedStandAlone">
            
            If true, the product must be packaged on its own and should not be jointly packaged with other products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.IsRecurring">
            
            If true, the product can be purchased or fulfilled at regular intervals such as a monthly billing cycle or a digital or physical subscription. This property is reserved for future functionality and is system-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.IsTaxable">
            
            If true, the entity is subject to sales tax based on the relevant tax rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.IsValidForProductType">
            
            If true, this product is valid for the assigned product type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.IsVariation">
            
            If true, this configured product represents a product variation defined with configurable options. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.MasterCatalogId">
            
            The unique identifier of the master catalog associated with the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.ProductSequence">
            
            Integer that represents the sequential order of the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.ProductTypeId">
            
            Unique identifier of the product type assigned for this product. Tenant administrators can only define one product type per product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.ProductUsage">
            
            The usage type that applies to this product, which is Standard (a single product without configurable options), Configurable (a product that includes configurable option attributes), Bundle (a collection of products sold as a single entity), or Component (an invididual product that represents a component in a bundle).
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.ShippingClassId">
            
            Identifier of the shipping class.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.StandAlonePackageType">
            
            If the product must be packaged separately, the type of standalone package to use.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.Upc">
            
            The universal product code associated with the product. The UPC of a product is unique across all sales channels.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.VariationKey">
            
            System-generated key that represents the attribute values that uniquely identify a specific product variation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.ApplicableDiscounts">
            
            List of discounts available for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.BundledProducts">
            
            Properties of a collection of component products that make up a single product bundle with its own product code. Tenants can define product bundles for any product type that supports the Bundle product usage.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.Extras">
            
            List of extra product attributes defined for this product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.InventoryInfo">
            
            Properties of the inventory levels manages for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.Options">
            
            List of option product attributes defined for this product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.PackageHeight">
            
            Height of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.PackageLength">
            
            Length of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.PackageWeight">
            
            Weight of the package in imperial units of pounds and ounces.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.PackageWidth">
            
            Width of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.Price">
            
            Unit price that the client intends to sell the product if no sale price is set.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.PricingBehavior">
            
            Describes the behavior the system uses when determining the price of the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.ProductInCatalogs">
            
            Properties defined for a product as they appear in its associated catalogs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.Properties">
            
            List of property product attributes defined for this product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.PublishingInfo">
            
            Properties of the product publishing settings for the associated product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.SeoContent">
            
            The search engine optimized content defined for this product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.SupplierInfo">
            
            Supplier-defined properties assigned for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.Product.VariationOptions">
            
            The list of product variation configurations defined for this product based on its available product option attributes.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductCategory">
            
            	The site category to which a product belongs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductCategory.CategoryId">
            
            Unique identifier for the storefront container used to organize products.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductCollection">
            
            	The container for a set of products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductDiscountCondition">
            
            	Properties of the conditions that must be met for a discount to apply to a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductDiscountCondition.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra">
            
            	Properties of an extra attribute to defined for a product that is associated with a product type that uses the extra. Setting up extras for a product enables shopper-entered information, such as initials for a monogram.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtra.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtra.IsMultiSelect">
            
            If true, the shopper can select more than one value from a predefined list for this extra.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtra.IsRequired">
            
            If true, the shopper must select the product extra and specify a value for it during checkout.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtra.Values">
            
            The list of predefined values a shopper can select for the product when defining this extra.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValue">
            
            	Properties of a defined value for a product extra attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValue.DeltaWeight">
            
            The difference between the weight associated with this product extra and the base product. For example, if a product with a monogram weighs an extra 1/4 lb, the DeltaWeight value is "0.25".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValue.IsDefaulted">
            
            If true, the value for the product extra is selected by default. Shopper entered extras cannot be defaulted.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValue.Value">
            
            Properties of a defined value for a product extra attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValue.AttributeVocabularyValueDetail">
            
            Detail of the product extra attribute vocabulary value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValue.DeltaPrice">
            
            The difference between the price associated with this product extra and the base product. For example, if a product with a defined monogram extra costs an additional $10, the DeltaPrice value is "10".
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice">
            
            	The properties of the price difference between the product extra and the base product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice.DeltaPrice">
            
            The difference between the price associated with this product extra and the base product. For example, if a product with a defined monogram extra costs an additional $10, the DeltaPrice value is "10".
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo">
            
            	Properties of a product associated with a specific catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo.CatalogId">
            
            The unique identifier of the catalog of products used by a site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo.IsActive">
            
            If true, the product is actively available (for sale) in the associated catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo.IsContentOverridden">
            
            If true, the content defined for this product in the master catalog in overridden in the catalog with the content specified in the request body. If false, this catalog uses the content defined in the master catalog for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo.IsPriceOverridden">
            
            If true, the price defined for this product in the master catalog in overridden in the catalog with the price specified in the request body. If false, this catalog uses the price defined in the master catalog for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo.IsseoContentOverridden">
            
            If true, the SEO content defined for this product in the master catalog in overridden in the catalog with the SEO content specified in the request body. If false, this catalog uses the SEO content defined in the master catalog for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo.Content">
            
            Localizable content for a product associated with a specific catalog. If no catalog-level content is specified, the master catalog content is used. To override content at the catalog level, the IsContentOverridden flag must be set to "true".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo.Price">
            
            The price of the product associated with the specified catalog. If no price is specified in the request, this catalog uses the price defined in the master catalog. To override the product price for this catalog, the IsPriceOverridden flag must be set to "true".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo.ProductCategories">
            
            The product categories to define for the product associated with the specified catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo.SeoContent">
            
            The SEO content of the product associated with the specific catalog. If no SEO content is specified in the request, this catalog uses the SEO content defined in the master catalog. To override the SEO content for this catalog, the IsSEOContentOverridden flag must be set to "true".
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductInventoryInfo">
            
            	Properties of the inventory behavior associated with a product definition.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInventoryInfo.ManageStock">
            
            If true, Mozu manages inventory levels for this product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductInventoryInfo.OutOfStockBehavior">
            
            Determines the method this product uses when active stock is depeleted. Options are "DisplayMessage" to display an out of stock message to the shopper, "HideProduct" to disable the product on the storefront, or "AllowBackOrder" to allow the shopper to back order the product. This property is required only if Mozu manages inventory for this product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedContent">
            
            	The localized product content in the language specified by the LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedContent.ProductFullDescription">
            
            More detailed or full product description typically used for a product details page.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedContent.ProductName">
            
            The descriptive brief product name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedContent.ProductShortDescription">
            
            Brief description of the product typically used when the product is displayed in a list or in search results.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedContent.ProductImages">
            
            List of product images associated with a product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage">
            
            	The localized product image in the language specified by the LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.AltText">
            
            Descriptive text associated with the image or video that appears on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.CmsId">
            
            The identifier of the product image in the Mozu CMS. Supply a value for either the CMS ID or the Image URL parameter.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.Id">
            
            Identifier of the localized product image.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.ImageLabel">
            
            Image title that appears on the storefront set to the language specified by the site's LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.ImageUrl">
            
            URL of the image.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.MediaType">
            
            Type of media specification required to successfully render the image, video, or other content for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.Sequence">
            
            Integer that represents the order of the localized product image in the sequence.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedImage.VideoUrl">
            
            The physical link or URL of the product video. The physical path name is set in the language specified by the LocaleCode.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent">
            
            	The localized product search engine optimized content in the language specified by the LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent.MetaTagDescription">
            
            The description of the metatag used for the product SEO content set to the locale code language. The metadata description is used to manage information internally.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent.MetaTagKeywords">
            
            The metatag keywords for the product SEO content set in the locale code language. The metatag keywords are used to manage information internally.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent.MetaTagTitle">
            
            The metatag title for the product SEO content set in the locale code language. The metatag title is used to manage information internally.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent.SeoFriendlyUrl">
            
            The search engine optimized human-readable portion of the URL in the language of the product's locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductLocalizedSEOContent.TitleTagTitle">
            
            Customizes the HTML title tag within the header section of the product details page for the specified product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductOption">
            
            	Properties of the product option to create such as attribute detail, fully qualified name, and list of product option values.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductOption.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductOption.Values">
            
            List of values for the product option. Each value includes an attribute vocabulary value detail and value object.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductOptionValue">
            
            	Properties of a value associated with a product option attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductOptionValue.Value">
            
            Value of the product option attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductOptionValue.AttributeVocabularyValueDetail">
            
            Detailed properties of the product option attribute's vocabulary value.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductPrice">
            
            	The price of the product in the specified currency code (USD). This price can either be the sale price or the price for which the merchang intends to sell the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPrice.IsoCurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPrice.Map">
            
            The minimum advertised price a client can charge for the associated product, as determined by the supplier. Client administrators can override the minimum advertised price at the catalog level.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPrice.MapEndDate">
            
            If the product has a supplier-defined minimum advertised price, the date and time after which the client can sell the product for less than the minimum advertised price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPrice.MapStartDate">
            
            If the product has a supplier-defined minimum advertised price, the date and time after which the client cannot sell the product for less than the minimum advertised price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPrice.Msrp">
            
            The manufacturer's suggested retail price, as defined by the supplier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPrice.Price">
            
            Price that the merchant intends to sell the product which is not necessarily the list price. This is the price the merchant intends to sell the product if no sale price is present.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPrice.SalePrice">
            
            Price of the product with a discount already applied which the merchant intends to sell the product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductPricingBehaviorInfo">
            
            	Properties that describe the behavior the system uses when determining the price of the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPricingBehaviorInfo.DiscountsRestricted">
            
            If true, the system cannot apply any discounts to this product. Discount restrictions are defined at the master catalog level. Client administrators cannot override discount restrictions at the catalog level, but they can limit the restriction to a defined time interval.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty">
            
            	Properties of the product property to create such as attribute detail, fully qualified name, and list of product property values.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductProperty.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductProperty.Values">
            
            The actual values that populate a product property to set in the Admin to appear on the Storefront.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValue">
            
            	Value details for a product property attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValue.Value">
            
            Value details for a product property attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValue.AttributeVocabularyValueDetail">
            
            Details of the vocabulary value for predefined product property attributes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValue.Content">
            
            Content of the product property value.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent">
            
            	Content of the product property value in the language defined for the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent.StringValue">
            
            The string value of the product property set in the language specified the locale code.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductPublishingInfo">
            
            	Properties of the publishing status of the product, including its current state and the details of the last product change published to the catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPublishingInfo.LastPublishedBy">
            
            The user ID of the user who last published changes for this product in the catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPublishingInfo.LastPublishedDate">
            
            The date and time a draft change for this product was published to the catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductPublishingInfo.PublishedState">
            
            The current publishing state of this product in the catalog, which is Live, New, or Draft. Live products appear on the storefront and have no pending changes. New products have been created but do not yet appear on the storefront. Draft products appear on the storefront but have pending changes that have not yet been published.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation">
            
            	A hold placed on product inventory for a particular product so that the quantity specified is set aside and available for purchase during the ordering process.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservation.Id">
            
            Identifier of the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservation.LocationCode">
            
            Code that identifies the location associated with this product reservation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservation.OrderId">
            
            Unique identifier of the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservation.OrderItemId">
            
            The unique identifier of the item in the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservation.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservation.Quantity">
            
            The quantity of items associated with the product reservation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservation.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection">
            
            	A collection of holds placed on product inventory so that the quantities specified are made available for the ordering process.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductSupplierInfo">
            
            	Supplier-defined properties assigned for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductSupplierInfo.DistPartNumber">
            
            The distributor part number associated with this product, defined by the product distributor.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductSupplierInfo.MfgPartNumber">
            
            The manufacturer part number associated with this product, defined by the product manufacturer.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductSupplierInfo.Cost">
            
            The amount the client pays the supplier to stock this product in its catalogs.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductType">
            
            	A product type is like a product template.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.Id">
            
            Unique identifier of the product type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.IsBaseProductType">
            
            If true, this product is associated with the overall product type. There is only one BaseProductType per site group. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.MasterCatalogId">
            
            The unique identifier of the master catalog associated with the entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.Name">
            
            Name of the product type, such as "Shoes" or "TVs."
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.ProductCount">
            
            The number of products associated with this product type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.ProductUsages">
            
            List of product usages that describe how products of this type are used. Products of this type can be Standard (a single product without configurable options), Configurable (a product that includes configurable option attributes), Bundle (a collection of products sold as a single entity), or Component (an invididual product that represents a component in a bundle). Product type usages cannot be both Bundle and Configurable.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.Extras">
            
            The list of product type attributes which exist as extras. Example: monogram
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.Options">
            
            The list of product type attributes which exist as options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductType.Properties">
            
            The list of product type attributes which exist as properties, such as color.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection">
            
            	A group of product type lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductVariation">
            
            	Properties of a specific product variation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.DeltaWeight">
            
            The difference between the base weight for a product and this variation of the product, which can be a positive or negative decimal value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.FulfillmentTypesSupported">
            
            Describes the types of fulfillment that are supported for this product variation. A variation can support direct ship, in-store pickup, or both. Supported fulfillment types are defined at the master catalog level. Client administrators cannot override the supported fulfillment types at the catalog level.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.IsActive">
            
            If true, this variation of this product is marked available for sale.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.IsOrphan">
            
            If true, the production variation is no longer available for sale. For example, if a client stops selling all "small" shirts, all product variations with the "small" option are set to IsOrphan. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.VariationExists">
            
            If true, one or more product variations are configured for the specified product code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.Variationkey">
            
            System-generated key that represents the attribute values that uniquely identify a specific product variation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.VariationProductCode">
            
            Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.DeltaPrice">
            
            The difference between the base price for the product and this variation of the product, which can be a positive or negative decimal value. For example, if the base price for a t-shirt product is $10, but the XL variation should cost $12, the DeltaPrice value should be "2". However, if the XS variation should only cost $8, the DeltaPrice value should be "-2".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.Options">
            
            Wrapper for the list of option attributes configured for the product variation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariation.SupplierInfo">
            
            Supplier-defined properties assigned for the product variation.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection">
            
            	Collection of variations configured for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice">
            
            	The difference between the base price for the product and this variation of the product, which can be a positive or negative decimal value. For example, if the base price for a t-shirt product is $10, but the XL variation should cost $12, the DeltaPrice value should be "2". However, if the XS variation should only cost $8, the DeltaPrice value should be "-2".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice.Msrp">
            
            The manufacturer's suggested retail price, as defined by the supplier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice.Value">
            
            Positive or negative decimal value that represents the difference between this variation and the base product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationOption">
            
            	Details of a product variation option.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationOption.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationOption.Value">
            
            The value of an attribute option specified for this product variation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationOption.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection">
            
            	Paged list of collections of variations for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.PublishingScope">
            
            	Describes the scope of the product publishing update, which can include individual product codes or all pending changes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.PublishingScope.AllPending">
            
            If true, publish or discard all pending product changes in the master catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.PublishingScope.ProductCodes">
            
            List of product codes for each pending product change you want to publish or delete.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.TargetedCategory">
            
            	Properties of a product category targeted for a defined discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.TargetedCategory.Id">
            
            Identifier of the product category associated with the targeted discount.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.TargetedProduct">
            
            	Product definition targeted for a defined discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.TargetedProduct.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductAdmin.TargetedShippingMethod">
            
            	Shipping method service type, such as UPS Ground or USPS Priority Mail, targeted for a defined discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.TargetedShippingMethod.Code">
            
            The code associated with the carrier's shipping method service type. Service type codes include a prefix that indicates the carrier. For example: FEDEX_INTERNATIONAL_STANDARD
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductAdmin.TargetedShippingMethod.Name">
            
            Name of the shipping method service type associated with the targeted discount.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.AppliedDiscount">
            
            	The discount currently applied to the cart or order, represented as a negative currency amount to be subtracted from the final price. If multiple discounts are applied to the same order, the Applied Discount displays the most valuable discount for the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AppliedDiscount.CouponCode">
            
            Alphanumeric code associated with the coupon or promotion that results in a discounted price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AppliedDiscount.Impact">
            
            The value of the discount applied to the product, represented as a negative currency amount to apply to the original price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AppliedDiscount.Discount">
            
            Properties of the discount currently applied to the product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.AttributeDetail">
            
            	The product attribute details common between all attribute types - properties, options, and extras.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.Description">
            
            Description of the attribute in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.DataType">
            
            The data type (such as datetime or string) associated with the attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.DataTypeSequence">
            
            Unique sequence of the attribute for its data type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.InputType">
            
            The input type (such as date or text area) accepted for the attribute's data type.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.Name">
            
            Name of the atrribute in the language specified by the locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.UsageType">
            
            The usage type of the product attribute, which is property, option, or extra.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.ValueType">
            
            The type of value for the attribute, which is either ShopperEntered, AdminEntered, or Predefined.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeDetail.Validation">
            
            Validation rules of an attribute that determine which values are valid for ShopperEntered and AdminEntered ValueTypes.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.AttributeValidation">
            
            	Validates the attribute configured for the product in the storefront against the attribute configured in product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.MaxDateValue">
            
            System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.MaxNumericValue">
            
            The maximum number of characters for the numeric length.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.MaxStringLength">
            
            The maximum number of characters for the string length.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.MinDateValue">
            
            System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.MinNumericValue">
            
            The minimum number of characters for the numeric length.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.MinStringLength">
            
            The minimum character length of the string.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.AttributeValidation.RegularExpression">
            
            Regular expression used to process attribute values that require special formatting such as phone numbers.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.BundledProduct">
            
            	Properties of a component product in a product bundle. A product bundle can represent either a collection of multiple products sold as a single entity, or a collection of the same product sold as a package. For example, a 10-pack of socks.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProduct.IsPackagedStandAlone">
            
            If true, the component product of the bundle should not ship in a package with the rest of the product bundle, and should ship in a package by itself. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProduct.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProduct.Quantity">
            
            The quantity of the component product in the product bundle. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProduct.Content">
            
            Localizable product content defined for the product bundle. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProduct.Measurements">
            
            Dimensions of the packaged product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.BundledProductSummary">
            
            	System-supplied and read only information for component products in a product bundle.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProductSummary.IsPackagedStandAlone">
            
            If true, the component product of the bundle should not ship in a package with the rest of the product bundle, and should ship in a package by itself. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProductSummary.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProductSummary.ProductName">
            
            The read-only name of the component in the bundled product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProductSummary.ProductShortDescription">
            
            The short description defined for the component in a bundled product. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProductSummary.Quantity">
            
            The quantity of a component product in its product bundle.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.BundledProductSummary.Measurements">
            
            Dimensions of the packaged product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.Category">
            
            	Properties of the product category that appears on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Category.CategoryId">
            
            Unique identifier for the storefront container used to organize products.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Category.Sequence">
            
            The numeric value that denotes the place this entity occupies in the order of the entity list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Category.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Category.ChildrenCategories">
            
            List of the subcategories in the hierarchy for the specified categories.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Category.ParentCategory">
            
            If applicable, the parent category in the hierarchy for the specified category.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.CategoryCollection">
            
            	The container for a non-paged list of related site-specific product category properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.CategoryContent">
            
            	Localized page content for a product category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.Description">
            
            The localized description of the category to display on a storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.MetaTagDescription">
            
            Defined description of the metadata used to manage product information internally, such as search engine optimization.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.MetaTagKeywords">
            
            Defined keywords of the metadata used to manage product information internally, such as search engine optimization.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.MetaTagTitle">
            
            Defined title of the metadata used to manage product information internally, such as search engine optimization.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.Name">
            
            Name of the product category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.PageTitle">
            
            Title that appears on the top of new pages associated with the product category on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.Slug">
            
            Human-readable identifier to associated with a product category to create friendly URLs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryContent.CategoryImages">
            
            Array list of image media associated with the product category.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.CategoryImage">
            
            	Properties of an image or other media file associated with a product category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryImage.AltText">
            
            Descriptive text associated with the image or video that appears on the web storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryImage.CmsId">
            
            The identifier of the category image in the Mozu CMS. Supply a value for either the CMS ID or Image URL parameter.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryImage.ImageLabel">
            
            Image title that appears on the web storefront, set to the language specified by the site's LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryImage.ImageUrl">
            
            URL of the product category image.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryImage.MediaType">
            
            Type of media specification required to successfully render the image, video, or other category content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryImage.Sequence">
            
            Integer that represents the sequential order of the category image in the collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryImage.VideoUrl">
            
            The link or URL of the product category video. The file path name is set in the language specified by the LocaleCode.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection">
            
            	Paged collection of categories and related properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct">
            
            	Properties of a product configuration with shopper-selected options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.VariationProductCode">
            
            Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.AvailableShippingDiscounts">
            
            List of shipping discounts that can be applied to the configured product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.InventoryInfo">
            
            Properties of the inventory of the configured product, including the number of items in stock, whether the item appears on the storefront, and whether the item is out of stock or can be back ordered.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.Measurements">
            
            Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.Options">
            
            The list of options set up in product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.Price">
            
            Unit price that the tenant intends to sell the product if no sale price is set.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.PriceRange">
            
            For products with options that vary the cost of the product, the range between lowest and highest possible price of the product based on the current selection of options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct.PurchasableState">
            
            The current state of the configured product determines whether or not the product is eligible for purchase. Products with options are only purchasable if the shopper has selected all required options. If the product is not ready for purchase, a message lists missing options that are required.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.Discount">
            
            	Properties of a defined product, order, or shipping discount.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Discount.DiscountId">
            
            Unique identifier of the discount. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Discount.ExpirationDate">
            
            The date and time the discount can no longer be redeemed. Date in UTC Date/Time. System-supplied and read only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Discount.Name">
            
            The localizable name assigned for the product discount.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.Facet">
            
            	Properties of the facet used to index product searches on a storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Facet.FacetType">
            
            The type of facet. Valid values are "range," which enables creation of a range of values, or "value," which populates the facet values based on the associated attribute or category.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Facet.Field">
            
            The field name associated with the facet.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Facet.Label">
            
            The descriptive label for the facet.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Facet.Values">
            
            The values associated with the facet.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.FacetValue">
            
            	The value selected for a facet when indexing a product search.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.Count">
            
            The number of facet value selections in a product search result set.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.FilterValue">
            
            Submits the selected facet value as a facet value filter.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.IsApplied">
            
            If true, the facet value is applied as a filter in the storefront product search.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.Label">
            
            The descriptive label of the facet value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.ParentFacetValue">
            
            If applicable, the values of any parent category facets in a hierarchy. Hierarchical facets only apply for product categories.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.RangeQueryValueEnd">
            
            The maximum value selected or entered for the facet range query.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.RangeQueryValueStart">
            
            The minimum value selected or entered for the facet range query.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.Value">
            
            String representation of the facet value selected for the product search.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.FacetValue.ChildrenFacetValues">
            
            If applicable, the values of any subcategory facets in a hierarchy. Hierarchical facets only apply for product categories.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.LocationInventory">
            
            	Properties of the active product inventory levels for a specific location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.LocationInventory.LocationCode">
            
            User-defined code that uniquely identifies the location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.LocationInventory.StockAvailable">
            
            The current level of active product stock available at the specified location.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.LocationInventoryCollection">
            
            	Paged collection of product inventory information by location.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.LocationInventoryCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.LocationInventoryCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.PackageMeasurements">
            
            	Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.PackageMeasurements.PackageHeight">
            
            Height of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.PackageMeasurements.PackageLength">
            
            Length of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.PackageMeasurements.PackageWeight">
            
            Weight of the package in imperial units of pounds and ounces.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.PackageMeasurements.PackageWidth">
            
            Width of the package in imperial units of feet and inches.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.Product">
            
            	Properties of the product that appears on a designated storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.CreateDate">
            
            Date and time when the entity was created, represented in UTC Date/Time.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.IsActive">
            
            If true, the product is marked as available for sale. Setting a product to IsActive = false will prevent it from being shown on the customer facing storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.IsPackagedStandAlone">
            
            If true, this product cannot ship in a package with other products and must ship in a package by itself.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.IsRecurring">
            
            If true, the product can be purchased or fulfilled at regular intervals such as a monthly billing cycle or a digital or physical subscription.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.IsTaxable">
            
            If true, the entity is subject to tax based on the relevant tax rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.ProductSequence">
            
            Integer that represents the sequential order of the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.ProductType">
            
            A product type is like a product template that can be reused.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.ProductUsage">
            
            The usage type that applies to this product, which is Standard (a single product without configurable options), Configurable (a product that includes configurable option attributes), Bundle (a collection of products sold as a single entity), or Component (an invididual product that represents a component in a bundle).
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.PublishState">
            
            The publishing state of the product definition in the master catalog, which is "New", "Draft", or "Live".
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Upc">
            
            The universal product code associated with the product. The UPC of a product is unique across all sales channels.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.VariationProductCode">
            
            Product code that represents the product variation selected based on the option values the shopper entered.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.AvailableShippingDiscounts">
            
            List of shipping discounts that can be applied to the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.BundledProducts">
            
            Properties of a collection of component products that make up a single product bundle with its own product code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Categories">
            
            List of categories associated with the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Content">
            
            Complex type that contains content for a language specified by LocaleCode.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.InventoryInfo">
            
            Array of active inventory level information associated with the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Measurements">
            
            Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Options">
            
            The list of options set up in product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Price">
            
            Unit price that the tenant intends to sell the product if no sale price is set.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.PriceRange">
            
            For products with options that vary the cost of the product, the range between lowest and highest possible price of the product based on the current selection of options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.Properties">
            
            The list of product property attributes defined for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.Product.PurchasableState">
            
            The current state of the configured product determines whether or not the product is eligible for purchase. Products with options are only purchasable if the shopper has selected all required options. If the product is not ready for purchase, a message lists missing options that are required.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductCollection">
            
            	Collection of products and their related properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductContent">
            
            	Content associated with a product definition that can be localized.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.MetaTagDescription">
            
            Description defined for the metadata used to internally manage information about the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.MetaTagKeywords">
            
            Keywords defined for the metadata used to internally manage information about the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.MetaTagTitle">
            
            Title defined for the metadata used to internally manage information about the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.ProductFullDescription">
            
            Full description of the product, which typically appears on the product details page.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.ProductName">
            
            The descriptive brief product name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.ProductShortDescription">
            
            Brief description of the product typically used when the product is displayed in a list or in search results.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.SeoFriendlyUrl">
            
            Product URL defined for search engine optimization.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductContent.ProductImages">
            
            List of image files associated with the product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductImage">
            
            	Properties of an image defined for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductImage.AltText">
            
            Descriptive text associated with the image or video that appears on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductImage.CmsId">
            
            The identifier of the product image in the Mozu CMS. Supply a value for either the CMS ID or the Image URL parameter.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductImage.ImageLabel">
            
            Image title that appears on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductImage.ImageUrl">
            
            URL of the product image.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductImage.MediaType">
            
            Type of media specification required to successfully render the product image, video, or other content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductImage.Sequence">
            
            The numeric value that denotes the place this entity occupies in the order of the entity list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductImage.VideoUrl">
            
            The file link or URL of the product video.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductInventoryInfo">
            
            	Properties of the active inventory managed for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductInventoryInfo.ManageStock">
            
            If true, Mozu manages inventoried stock levels for this product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductInventoryInfo.OnlineLocationCode">
            
            The location code for the direct ship location associated with the available online stock.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductInventoryInfo.OnlineStockAvailable">
            
            The current number of products that are available for purchase.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductInventoryInfo.OutOfStockBehavior">
            
            Determines the method this product uses when active stock is depeleted. Options are "DisplayMessage" to display an out of stock message to the shopper, "HideProduct" to disable the product on the storefront, or "AllowBackOrder" to allow the shopper to back order the product. This property is required only if Mozu manages inventory for this product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductOption">
            
            	Represents configurable options that a shopper can choose when ordering a product, such as a t-shirt color and size.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOption.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOption.IsMultiValue">
            
            If true, the product attribute or option has multiple values.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOption.IsRequired">
            
            If true, the entity is required for the request to return a valid response.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOption.AttributeDetail">
            
            Details of the product option attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOption.Values">
            
            List of possible values for a product option attribute.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelection">
            
            	The selection the shopper made from a list of options set up in product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelection.ShopperEnteredValue">
            
            The custom value the shopper entered for an option set up in product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelection.Value">
            
            The attribute value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelection.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelection.AttributeValueId">
            
            Identifier of the value of this attribute.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections">
            
            	For a product with shopper-configurable options, the properties of the product options selected by the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections.VariationProductCode">
            
            Product code that represents the product variation selected based on the option values the shopper entered.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections.Options">
            
            List of option attributes associated with the product and the associated values currently defined for this product configuration.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue">
            
            	Represents the values that are the product option selections for a shopper to choose when ordering a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.AttributeValueId">
            
            Unique identifier of the product attribute value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.DeltaPrice">
            
            The difference between the highest price and the lowest price.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.DeltaWeight">
            
            The difference between the highest weight and the lowest weight.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.IsDefault">
            
            If true, the product option value is the default value that the merchant supplied.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.IsEnabled">
            
            If true, the product option value is available for a shopper to choose. During configuration, this property will be false if the option value is invalid with other selected options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.IsSelected">
            
            If true, the entity is selected. If false, the entity is not selected.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.ShopperEnteredValue">
            
            The product attribute value entered by the shopper, if applicable.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.StringValue">
            
            The string value entered for a product option attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductOptionValue.Value">
            
            The value of a product option attribute.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductPrice">
            
            	The price of the product in the specified currency code (USD). This price can either be the sale price or the price for which the merchant intends to sell the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPrice.Price">
            
            The price the merchant intends to charge for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPrice.SalePrice">
            
            The sale price defined for the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPrice.Discount">
            
            The discount applied to the product price.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductPriceRange">
            
            	For products with options that vary the cost of the product, the range between lowest and highest possible price of the product based on the current selection of options.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPriceRange.Lower">
            
            The lowest possible price value for a product with options that vary the cost of the product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPriceRange.Upper">
            
            Thw highest possible price value for a product with options that vary the cost of the product.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductProperty">
            
            	Details of a property attribute defined for a product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductProperty.AttributeFQN">
            
            The fully qualified name of the attribute, which is a user defined attribute identifier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductProperty.IsHidden">
            
            If true, the product property does not appear for the product in the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductProperty.IsMultiValue">
            
            If true, the product property can have more than one selected value.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductProperty.AttributeDetail">
            
            Details of the attribute defined as a product property.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductProperty.Values">
            
            List of values defined for the product property attribute.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductPropertyValue">
            
            	Values of a product property attribute.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPropertyValue.StringValue">
            
            Property string value in the language specified in the locale code for the product storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPropertyValue.Value">
            
            Value of the product property.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductPurchasableState">
            
            	The current state of the product purchase determines whether or not the product is eligible for purchase. Products with options are only purchasable if the shopper has selected all required options. If the product is not ready for purchase, a message lists missing options that are required.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPurchasableState.IsPurchasable">
            
            If true, the entity has met all requirements and considered a purchasable entity.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductPurchasableState.Messages">
            
            List of messages associated with the product if the product is not ready for purchase.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult">
            
            	The result of a product search.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult.Facets">
            
            The facets applied to index products in the product search result.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary">
            
            	Summary list of the product validation in a storefront, including options selected by the shopper.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.IsPackagedStandAlone">
            
            If true, this product should not be packaged with other items and should ship by itself.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.IsTaxable">
            
            If true, the entity is subject to tax based on the relevant tax rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.ProductCode">
            
            Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.ProductName">
            
            The descriptive brief product name.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.ProductShortDescription">
            
            Brief description of the product typically used when the product is displayed in a list or in search results.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.ProductUsage">
            
            The usage type of this product, which is Standard (a single product without configurable options), Configurable (a product that includes configurable option attributes), Bundle (a collection of products sold as a single entity), or Component (an invididual product that represents a component in a bundle).
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.VariationProductCode">
            
            Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.BundledProducts">
            
            Properties of a collection of component products that make up a single product bundle with its own product code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.Categories">
            
            The list of product categories for the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.Image">
            
            The image configured for the product on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.InventoryInfo">
            
            Properties of the active inventory level of the associated product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.Measurements">
            
            Dimensions of the packaged product.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.Price">
            
            Price that the merchant intends to sell the product which is not necessarily the list price. This is the price the merchant intends to sell the product if no sale price is present.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.Properties">
            
            The list of product properties configured in product admin.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary.PurchasableState">
            
            The current state of the product and whether or not it is available for purchasing. If the product is not eligible for purchase, the validation message is included.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.SearchSuggestion">
            
            	Suggest product search terms to a customer based on defined queries.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ProductRuntime.ValidationMessage">
            
            	Properties of a message displayed when a product validation failure occurs for a shopper in a storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ValidationMessage.Message">
            
            The contents of the message displayed to the user when the product validation failure occurs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ValidationMessage.Severity">
            
            The severity level of the product validation failure.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ValidationMessage.Source">
            
            The entity that triggered the product validation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ProductRuntime.ValidationMessage.SourceId">
            
            Unique identifier of the entity that triggered the validation.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.AddressSchema">
            
            	Describes the structure of postal addresses based on the country specified. Because addresses vary from country to country, this schema allows a flexible storage structure.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.AddressSchema.CountryCode">
            
            The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.AddressSchema.CountryLabel">
            
            The label associated with this country.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.AddressSchema.Id">
            
            The unique identifier of this postal address schema.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.AddressSchema.Fields">
            
            The fields to display for postal addresses associated with this country.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.AddressSchemaCollection">
            
            	The paged collection of address schema components.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.AddressSchemaCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.AddressSchemaCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.ContentLocale">
            
            	Properties of a content locale that determines the language and format used for a site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.ContentLocale.Code">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.ContentLocale.Name">
            
            The name of the content locale.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.ContentLocaleCollection">
            
            	The paged collection of content locale codes that the system supports.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.ContentLocaleCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.ContentLocaleCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.Country">
            
            	The 2-letter code and corresponding country name that the system supports.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Country.Code">
            
            The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Country.Name">
            
            The name of the country.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.CountryCollection">
            
            	The paged collection of country codes and their corresponding names.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.CountryCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.CountryCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.Currency">
            
            	Three-letter currency code that the system supports, which is derived from the ISO 4217 standard. For example, the code "EUR" for the name "Euro Member Countries" is an entry that returns in a list of items.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Currency.Code">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Currency.Name">
            
            The name of the currency represented by the ISO currency code.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.CurrencyCollection">
            
            	The paged collection of currency codes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.CurrencyCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.CurrencyCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.Field">
            
            	A property that is a wrapper for additional properties pertaining to the schema such as the type, label, any associated data, an ID, and the order of the response.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Field.Id">
            
            Identifier of the field.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Field.Label">
            
            Label for the field.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Field.Order">
            
            Sequence of the field.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Field.Type">
            
            Type of field.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.Field.Data">
            
            Data for the field property.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.FieldData">
            
            	The field property that describes the type of information pertaining to how the field renders and functions.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.FieldData.Code">
            
            Code of the field.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.FieldData.Value">
            
            The field value.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.TimeZone">
            
            	A world date and time standard such as "Dateline Standard Time" or "UTC-12".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TimeZone.Id">
            
            Identifier of the time zone.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TimeZone.IsDaylightSavingsTime">
            
            If true, the time zone standard observes daylight savings time advancements, for example, twice a year so that evenings have more daylight and mornings have less. If false, the time zone standard does not adhere to daylight savings changes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TimeZone.Offset">
            
            The offset associated with the time zone, such as "-12".
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.TimeZoneCollection">
            
            	The paged collection of time zone properties.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TimeZoneCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TimeZoneCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.TopLevelDomainCollection">
            
            	The paged collection of all top level internet domains that the system supports including general, USA-specific, infrastructure, and country codes. The Internet Assigned Numbers Authority (IANA) maintains this list.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TopLevelDomainCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.TopLevelDomainCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.UnitOfMeasure">
            
            	Properties to describe the unit of measure.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.UnitOfMeasure.Name">
            
            The name of the unit of measure, such as "foot".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.UnitOfMeasure.PluralName">
            
            The plural name of the unit of measure, such as "feet".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.UnitOfMeasure.Symbol">
            
            The abbreviated symbol for the unit of measure, such as "ft".
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.UnitOfMeasure.UnitOfMeasureType">
            
            The type of measurement, such as length or volume.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Reference.UnitOfMeasureCollection">
            
            	The paged collection of all units of measure that the system currently supports.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.UnitOfMeasureCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Reference.UnitOfMeasureCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.CarrierRatesResponse">
            
            	Arrayed list of calculated shipping rates for the specified carrier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.CarrierRatesResponse.CarrierId">
            
            Unique identifier of the shipping carrier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.CarrierRatesResponse.CustomAttributes">
            
            Collection of carrier-specific key-value attribute pairs required to retrieve a shipping rate request.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.CarrierRatesResponse.ShippingRates">
            
            Array list of calculated shipping rates for the specified carrier.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.CustomAttribute">
            
            	Properties of a custom attribute used to integrate with a shipping provider, which consists of an array of necessary key-value pairs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.CustomAttribute.Key">
            
            Key required for a custom attribute associated with a shipping provider integration, as part of a key-value pair.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.CustomAttribute.Value">
            
            Value for a custom attribute associated with a shipping provider integration, as part of a key-value pair.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.CustomAttribute.ChildAttributes">
            
            Collection of child attributes associated with a shipping provider integration.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.ItemMeasurements">
            
            	Measured weight and dimensions of the packaged item to be shipped.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ItemMeasurements.Girth">
            
            Girth of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ItemMeasurements.Height">
            
            Height of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ItemMeasurements.Length">
            
            Length of the package in imperial units of feet and inches.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ItemMeasurements.Weight">
            
            Weight of the package in imperial units of pounds and ounces.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ItemMeasurements.Width">
            
            Width of the package in imperial units of feet and inches.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.RateRequest">
            
            	Properties required to request a shipping rate calculation.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.RateRequestItem">
            
            	Properties of an item for which to calculate a shipping rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequestItem.ItemId">
            
            Unique identifier of the item to ship, for which to calculate a shipping rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequestItem.Quantity">
            
            Quantity of the item for which to calculate the shipping rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequestItem.ShipsByItself">
            
            If true, this item must ship separately from other items in a shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RateRequestItem.UnitMeasurements">
            
            The measured weight and dimensions of the item to ship.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.RatesResponse">
            
            	Properties of the calculated shipping rate based on the information supplied in the request.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.RatesResponse.Rates">
            
            Arrayed list of calculated shipping rates for each assocuated carrier.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.ShippingItemRate">
            
            	Properties of a shipping rate calculated for a line item in a shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingItemRate.Amount">
            
            The calculated shipping amount for an item in a shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingItemRate.ItemId">
            
            Unique identifier of the item for which to calculate a shipping rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingItemRate.Quantity">
            
            The quantity of the line item for which to calculate shipping.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.ShippingRate">
            
            	Properties of a shipping rate calculated for a specified carrier.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRate.Amount">
            
            The total calculated shipping amount requested for the package or shipment.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRate.Code">
            
            The carrier-defined alphanumeric code associated with this shipping rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRate.Content">
            
            Localized content for a shipping rate based on the defined locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRate.CustomAttributes">
            
            Collection of carrier-specific key-value attribute pairs required to retrieve a shipping rate request.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRate.Messages">
            
            Array list of success/failure messages associated with the shipping rate validation.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRate.ShippingItemRates">
            
            Properties of a calculated shipping rate for individual line items in a shipment.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.ShippingRateLocalizedContent">
            
            	The name of the shipping rate in the language specified by the defined locale code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRateLocalizedContent.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRateLocalizedContent.Name">
            
            The name of the shipping rate in the language specified by the defined locale code.
            
        </member>
        <member name="T:Mozu.Api.Contracts.ShippingRuntime.ShippingRateValidationMessage">
            
            	Properties of a success/failure message notification associated with validating a shipping rate.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRateValidationMessage.HelpLink">
            
            URL displayed with the shipping validation message that links to help information.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRateValidationMessage.Message">
            
            Content of the shipping rate validation message.
            
        </member>
        <member name="P:Mozu.Api.Contracts.ShippingRuntime.ShippingRateValidationMessage.Severity">
            
            Severity level of the shipping rate validation failure.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Application.Application">
            
            	Properties of an application installed in a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Application.AppId">
            
            The unique identifier of the application in Mozu Dev Center.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Application.Enabled">
            
            If true, the application is enabled for the tenant. System-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Application.Initialized">
            
            If true, the third party application settings have been configured and the application is initialized.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Application.IsExtension">
            
            If true, the application type is Extension.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Application.UiConfigurationUrl">
            
            URL of the application's setting configuration user interface, supplied by the capability developer in Dev Center.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Application.Capabilities">
            
            List of capabilities installed in a tenant.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Application.Capability">
            
            	Properties of a capability application installed in a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.ActiveCreditTypes">
            
            Array list of credit types active for the capability.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.ActiveShoppingCountries">
            
            Array list of the countries for which this capability can actively shop.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.CapabilityMode">
            
            The enablement mode of the capability.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.CapabilityType">
            
            The capability type installed in the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.Enabled">
            
            If true, the capability is enabled in the installed tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.Id">
            
            Unique identifier of the capability.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.Initialized">
            
            If true, the application is initialized with the defined settings.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.ScopeId">
            
            Unique identifier of the developer account or tenant associated for which the capability is entitled.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.ScopeType">
            
            The type of scope for which the tenant is entitled, which is developer or tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.ActiveShippingCountries">
            
            Array list of the countries to which this capability can actively ship.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.OperationUrls">
            
            Array list of URL endpoints for the operations associated with this capability.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.SupportedCreditTypes">
            
            Array list of credit types this capability supports.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.SupportedShippingCountries">
            
            Array list of countries this capability supports for shipping.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Application.Capability.SupportedShoppingCountries">
            
            Array list of countries this capability supports for shopping.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings">
            
            	General settings used on the storefront site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.AllowInvalidAddresses">
            
            If true, the site allows entry of addresses not verified by an address validation service.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.FavIconMobilePath">
            
            The physical directory path or URL where the mobile favicon image file is stored. The favicon icon is generally 57x57 pixels. The icon appears on a mobile website or on the mobile device's OS Home.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.FavIconPath">
            
            The physical directory path or URL where the mobile favicon image file is stored. The favicon icon is generally 16x16 pixels. The icon appears on a a browser tab as the website's mini logo or on a browser address bar, or next to the page name in a list of bookmarks.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.GoogleAnalyticsCode">
            
            The Google Analytics code associated with a particular store. This could be the web tracking code.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.IsAddressValidationEnabled">
            
            If true, a service to verify addresses as valid is enabled for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.IsGoogleAnalyticsEcommerceEnabled">
            
            If true, the Google analytics for eCommerce is enabled for this site. If false, the analytics are not enabled.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.IsGoogleAnalyticsEnabled">
            
            If true, enable Google analytics for this site. If false, analytics are not enabled.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.IsMozuWebSite">
            
            If true, this site represents a Mozu-hosted web storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.IsWishlistCreationEnabled">
            
            If true, shoppers on this site can create customer wish lists.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.LogoPath">
            
            The physical directory path or URL where the website logo is stored.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.LogoText">
            
            The tagline or text that appears when hovering over the site logo.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.MobileTheme">
            
            The mobile theme is the storefront name for the theme.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.ReplyToEmailAddress">
            
            Email address to display on email messages sent from the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.SenderEmailAddress">
            
            Email address to set up so that shoppers and users browsing the site can use to contact the merchant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.SiteTimeFormat">
            
            Choose a format to use on the site: 12-hour (hh:mm:ss tt) or 24-hour format (HH:mm:ss).
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.SiteTimeZone">
            
            Choose the time zone to use for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.TemplateSiteId">
            
            Unique identifier of the tenant site that site uses to render content for the shopper. For example, if this site represents a third-party sales channel such as Amazon but the company wants to send shopper emails, this value represents the Mozu-hosted web storefront site that maintains this content.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.Theme">
            
            The name of the theme used on the storefront.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.WebsiteName">
            
            The name of the website to display on the storefront with no spaces.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings.TaxableTerritories">
            
            The territories configured for the site that are subject to sales tax.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory">
            
            	Properties of the territory which is subject to sales tax.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory.CountryCode">
            
            The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory.IsShippingTaxable">
            
            If true, all shipping charges for this territory are subject to sales tax.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory.StateOrProvinceCode">
            
            The two-letter geographic code representing the state for the physical or mailing address. This is currently limited to the US.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Order.CheckoutSettings">
            
            	Settings used when checking out an active order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.CheckoutSettings.CustomerCheckoutSettings">
            
            Settings for the checkout login. Choose whether or not shoppers must first login before a purchase can be processed. Choose the option for guests to purchase without logging in, prompt guests to login, or require them to login before a purchase can be completed.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.CheckoutSettings.OrderProcessingSettings">
            
            Credit card payment authorization setting defined for the site for order processing.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.CheckoutSettings.PaymentSettings">
            
            Payment gateway settings defined for the site. A payment gateway is an eCommerce application service provider that authorizes payments for eBusinesses, online retailers, and other stores that have an online commerce component. Currently, only the Authorize.net gateway is supported.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings">
            
            	The properties of the customer checkout settings such as whether shoppers must be logged in.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings.CustomerCheckoutType">
            
            The type of customer checking out in the order such as a guest who has not logged in or a customer who has logged in. Valid strings are either "LoginOptional," where shoppers are prompted to sign in but are not required to do so, or "LoginRequired," where shopppers must login before purchasing.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Order.ExternalPaymentWorkflowDefinition">
            
            	Properties of an external payment processing workflow defined for the site. At this time, only PayPal Express is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.ExternalPaymentWorkflowDefinition.IsEnabled">
            
            If true, the associated external payment workflow definition is enabled for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.ExternalPaymentWorkflowDefinition.Name">
            
            The name of the external payment workflow definition.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.ExternalPaymentWorkflowDefinition.Credentials">
            
            The credential fields required to communicate with the external payment processor.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Order.Gateway">
            
            	Properties of a payment gateway defined for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.Gateway.AreGatewayCredentialFieldsSet">
            
            If true, the credential fields for the gateway are configured with valid values. For security purposes, Mozu does not return the credential fields for the gateway subresource.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.Gateway.SupportedCards">
            
            The types of credit cards the merchant supports using this payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.Gateway.GatewayAccount">
            
            Account information associated with the specified payment gateway.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.Gateway.GatewayDefinition">
            
            Properties of the payment gateway definition.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Order.OrderProcessingSettings">
            
            	Settings that determine how orders are processed and order payments are authorized for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.OrderProcessingSettings.PaymentProcessingFlowType">
            
            Determines whether payment authorization occurs when the order is placed or when the order is shipped.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.OrderProcessingSettings.UseOverridePriceToCalculateDiscounts">
            
            If true, use the override price defined for products in the order to calculate discounts for the order.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.OrderProcessingSettings.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Order.PaymentSettings">
            
            	Properties of the payment settings used at order checkout time for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.PaymentSettings.PayByMail">
            
            Settings that provide for the ability to pay for an order by mail.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.PaymentSettings.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.PaymentSettings.ExternalPaymentWorkflowDefinitions">
            
            The external payment workflwo definitions configured for the site's payment settings. At this time, only PayPal Express is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.PaymentSettings.Gateways">
            
            List of name and account information for a payment gateway. Additional payment gateway providers will be supported in future releases.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Order.ThirdPartyCredentialField">
            
            	The properties of the credentials required to communicate with the external payment processor.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.ThirdPartyCredentialField.ApiName">
            
            System-supplied API name required to communicate with the external payment processor.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.ThirdPartyCredentialField.DisplayName">
            
            System-supplied name that displays for the third party credential field.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Order.ThirdPartyCredentialField.Value">
            
            The value supplied for the third party credential.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee">
            
            	Properties of the handling fee to apply to order shipments for the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee.Amount">
            
            The amount of the order handling fee.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings">
            
            	Properties of the shipping settings configured for an individual site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings.AuditInfo">
            
            Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings.OrderHandlingFee">
            
            The combined price for all items in the order, including all selected options but excluding any discounts.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings.SignatureRequirement">
            
            Properties of the package signature requirements for the site.
            
        </member>
        <member name="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSignatureRequirement">
            
            	Properties of the shipment signature requirements for the specified site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSignatureRequirement.IsSignatureRequired">
            
            If true, this site requires signatures on shipments for orders that exceed the minimum value threshold.
            
        </member>
        <member name="P:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSignatureRequirement.MinimumValueThreshold">
            
            The minimum order amount that requires a signature on shipments. For example, if you want to require customer signatures on all orders over $5,000, the MinimumValueThreshold would be 5001.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Tenant.Catalog">
            
            	Properties of an individual product catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Catalog.DefaultCurrencyCode">
            
            The default currency code for the product catalog. Currently, only "USD" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Catalog.DefaultLocaleCode">
            
            The default locale code for the product catalog. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Catalog.DeleteDate">
            
            The date and time the catalog was deleted.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Catalog.IsDeleted">
            
            If true, the catalog has been deleted.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Catalog.Name">
            
            The user-defined name of the product catalog.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Tenant.MasterCatalog">
            
            	Properties of a master product catalog defined for a tenant. All catalogs and sites associated with a master catalog share product definitions.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.MasterCatalog.DefaultCurrencyCode">
            
            The default three-letter ISO currency code associated with this master catalog. At this time, only "USD" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.MasterCatalog.DefaultLocaleCode">
            
            The default locale code associated with this master catalog. At this time, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.MasterCatalog.DeleteDate">
            
            The date and time the master catalog was deleted.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.MasterCatalog.IsDeleted">
            
            If true, this master catalog and its associated catalogs have been deleted from the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.MasterCatalog.Name">
            
            User-defined name of the master catalog.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.MasterCatalog.Catalogs">
            
            Collection of product catalogs that use product definitions from the master catalog.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Tenant.Site">
            
            	Properties of a site associated with a tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.CatalogId">
            
            The unique identifier of the catalog of products used by a site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.CurrencyCode">
            
            3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.Domain">
            
            The domain associated with the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.LocaleCode">
            
            Language used for the entity. Currently, only "en-US" is supported.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.Name">
            
            The name of the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.PrimaryCustomDomain">
            
            The primary custom domain of the site.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Site.TenantId">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Tenant.Tenant">
            
            	Properties of a tenant, which the logical grouping of all a company's sites and catalogs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.Domain">
            
            The domain information associated with the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.Id">
            
            Unique identifier of the Mozu tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.IsDevTenant">
            
            If true, the tenant represents a collection of master catalogs and catalogs for a development tenant, used by a developer account to test applications and themes.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.Name">
            
            The name of the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.MasterCatalogs">
            
            Collection of master catalogs associated with the tenant.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.Tenant.Sites">
            
            Collection of sites associated with the tenant.
            
        </member>
        <member name="T:Mozu.Api.Contracts.Tenant.TenantCollection">
            
            	Collection of tenants, which represent the logical grouping for a company's sites and catalogs.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.TenantCollection.PageCount">
            
            The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.TenantCollection.PageSize">
            
            The number of results to display on each page when creating paged results from a query. The maximum value is 200.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.TenantCollection.StartIndex">
            
            When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.TenantCollection.TotalCount">
            
            The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
            
        </member>
        <member name="P:Mozu.Api.Contracts.Tenant.TenantCollection.Items">
            
            An array list of objects in the returned collection.
            
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Admin.LocationResource">
            <summary>
            Use the Locations resource to manage each physical location associated with a tenant. Locations enable tenants to associate a physical address with product inventory, provide a store finder for in-store pickup, or both. Locations that support inventory can use both direct ship and in-store pickup fulfillment types.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Admin.LocationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationResource.GetLocations(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of all locations associated with a tenant, according to any filter and sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationCollection"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var locationCollection = location.GetLocations( startIndex,  pageSize,  sortBy,  filter);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationResource.GetLocation(System.String)">
            <summary>
            Retrieves the details of the location specified in the request by location code.
            </summary>
            <param name="locationCode">The merchant-defined code of the location to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = location.GetLocation( locationCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationResource.AddLocation(Mozu.Api.Contracts.Location.Location)">
            <summary>
            Creates a new physical location for the tenant specified in the request header.
            </summary>
            <param name="location">Properties of the location to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = location.AddLocation( location);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationResource.UpdateLocation(Mozu.Api.Contracts.Location.Location,System.String)">
            <summary>
            Updates one or more details of a the location specified in the request by location code.
            </summary>
            <param name="locationCode">The merchant-defined code associated with the location to update.</param>
            <param name="location">Properties of the location to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = location.UpdateLocation( location,  locationCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationResource.DeleteLocation(System.String)">
            <summary>
            Deletes the location specified in the request.
            </summary>
            <param name="locationCode">The merchant-defined code of the location to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var location = new Location();
              location.DeleteLocation( locationCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Admin.LocationTypeResource">
            <summary>
            Use the Location Types resource to manage the types of locations your tenant maintains, such as warehouses, physical storefronts, and kiosks.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Admin.LocationTypeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationTypeResource.GetLocationTypes">
            <summary>
            Retrieve a list of all location types defined for the tenant.
            </summary>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Location.LocationType"/>}
            </returns>
            <example>
            <code>
              var locationtype = new LocationType();
              var locationType = locationtype.GetLocationTypes();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationTypeResource.GetLocationType(System.String)">
            <summary>
            Retrieves the details of the location type specified in the request.
            </summary>
            <param name="locationTypeCode">The user-defined code that identifies the location type.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationType"/>
            </returns>
            <example>
            <code>
              var locationtype = new LocationType();
              var locationType = locationtype.GetLocationType( locationTypeCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationTypeResource.AddLocationType(Mozu.Api.Contracts.Location.LocationType)">
            <summary>
            Creates a new location type based on the information specified in the request.
            </summary>
            <param name="locationType">Properties of the location type to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationType"/>
            </returns>
            <example>
            <code>
              var locationtype = new LocationType();
              var locationType = locationtype.AddLocationType( locationType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationTypeResource.UpdateLocationType(Mozu.Api.Contracts.Location.LocationType,System.String)">
            <summary>
            Updates the name of a defined location type.
            </summary>
            <param name="locationTypeCode">The user-defined code that identifies the location type.</param>
            <param name="locationType">Properties of the location type to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationType"/>
            </returns>
            <example>
            <code>
              var locationtype = new LocationType();
              var locationType = locationtype.UpdateLocationType( locationType,  locationTypeCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Admin.LocationTypeResource.DeleteLocationType(System.String)">
            <summary>
            Deletes the location type specified in the request.
            </summary>
            <param name="locationTypeCode">User-defined code used to identify the location type.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var locationtype = new LocationType();
              locationtype.DeleteLocationType( locationTypeCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.CartResource">
            <summary>
            Use the Carts resource to manage storefront shopping carts as items are added and removed. Each time a shopper's cart is modified, the Carts resource updates the estimated total with any applicable discounts.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.CartResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.GetCart(System.String,System.String)">
            <summary>
            Retrieves the cart specified in the request.
            </summary>
            <param name="cartId">Identifier of the cart to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cart = cart.GetCart( cartId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.GetOrCreateCart(System.String)">
            <summary>
            Retrieves a cart's contents for the current shopper. If the shopper does not have an active cart on the site, the service creates one.
            </summary>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cart = cart.GetOrCreateCart( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.GetCartSummary(System.String)">
            <summary>
            Retrieves summary information associated with the cart of the current shopper, including the number of items, the current total, and whether the cart has expired. All anonymous idle carts that do not proceed to checkout expire after 14 days.
            </summary>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cartSummary = cart.GetCartSummary( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.GetUserCartSummary(System.String,System.String)">
            <summary>
            Retrieves summary information associated with the cart of user specified in the request, including the number of items in the cart, the current total, and whether the cart has expired. All anonymous idle carts that do not proceed to checkout expire after 14 days.
            </summary>
            <param name="responseFields"></param>
            <param name="userId">Unique identifier of the user whose cart details you want to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartSummary"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cartSummary = cart.GetUserCartSummary( userId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.GetUserCart(System.String,System.String)">
            <summary>
            Retrieves the cart of the user specified in the request.
            </summary>
            <param name="responseFields"></param>
            <param name="userId">Unique identifier of the user whose cart you want to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cart = cart.GetUserCart( userId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.UpdateCart(Mozu.Api.Contracts.CommerceRuntime.Carts.Cart,System.String)">
            <summary>
            Update the current shopper's cart.
            </summary>
            <param name="responseFields"></param>
            <param name="cart">All of the properties of the cart to update. The product code is required.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var cart = new Cart();
              var cart = cart.UpdateCart( cart,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.DeleteCart(System.String)">
            <summary>
            Deletes the cart specified in the request.
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var cart = new Cart();
              cart.DeleteCart( cartId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.CartResource.DeleteCurrentCart">
            <summary>
            Deletes the cart of the currently active shopper.
            </summary>
            <returns>
            
            </returns>
            <example>
            <code>
              var cart = new Cart();
              cart.DeleteCurrentCart();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Carts.AppliedDiscountResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Carts.AppliedDiscountResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.AppliedDiscountResource.ApplyCoupon(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="cartId"></param>
            <param name="couponCode"></param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var cart = applieddiscount.ApplyCoupon( cartId,  couponCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.AppliedDiscountResource.RemoveCoupons(System.String)">
            <summary>
            
            </summary>
            <param name="cartId"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var cart = applieddiscount.RemoveCoupons( cartId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.AppliedDiscountResource.RemoveCoupon(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="cartId"></param>
            <param name="couponCode"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var cart = applieddiscount.RemoveCoupon( cartId,  couponCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Carts.CartItemResource">
            <summary>
            Use the Cart Items subresource to manage a collection of items in an active shopping cart.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Carts.CartItemResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.GetCartItem(System.String,System.String)">
            <summary>
            Retrieves a particular cart item by providing the cart item ID.
            </summary>
            <param name="cartItemId">Identifier of the cart item to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cartItem = cartitem.GetCartItem( cartItemId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.GetCartItems(System.String)">
            <summary>
            Retrieves a list of cart items including the total number of items in the cart.
            </summary>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItemCollection"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cartItemCollection = cartitem.GetCartItems( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.AddItemToCart(Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem,System.String)">
            <summary>
            Adds a product to the current shopper's cart.
            </summary>
            <param name="responseFields"></param>
            <param name="cartItem">All properties of the new cart item. The product code is required.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cartItem = cartitem.AddItemToCart( cartItem,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.UpdateCartItemQuantity(System.String,System.Int32,System.String)">
            <summary>
            Update the quantity of an individual cart item in the cart of the current shopper.
            </summary>
            <param name="cartItemId">Identifier of the cart item to update quantity.</param>
            <param name="quantity">The number of cart items in the shopper's active cart.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cartItem = cartitem.UpdateCartItemQuantity( cartItemId,  quantity,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.UpdateCartItem(Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem,System.String,System.String)">
            <summary>
            Update the product or product quantity of an item in the current shopper's cart.
            </summary>
            <param name="cartItemId">Identifier of the cart item to update.</param>
            <param name="responseFields"></param>
            <param name="cartItem">The properties of the cart item to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cartItem = cartitem.UpdateCartItem( cartItem,  cartItemId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.RemoveAllCartItems">
            <summary>
            Removes all items in the current shopper's active cart.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              var cart = cartitem.RemoveAllCartItems();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.CartItemResource.DeleteCartItem(System.String)">
            <summary>
            Deletes a specific cart item by providing the cart item ID.
            </summary>
            <param name="cartItemId">Identifier of the cart item to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var cartitem = new CartItem();
              cartitem.DeleteCartItem( cartItemId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Carts.ChangeMessageResource">
            <summary>
            Use the Cart Messages resource to retrieve messages for live carts that the system logs when a product's price or inventory level changes.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Carts.ChangeMessageResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ChangeMessageResource.GetMessages(System.String)">
            <summary>
            Retrieves the messages associated with the current shopper's cart.
            </summary>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Carts.CartChangeMessageCollection"/>
            </returns>
            <example>
            <code>
              var changemessage = new ChangeMessage();
              var cartChangeMessageCollection = changemessage.GetMessages( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ChangeMessageResource.RemoveAllMessages">
            <summary>
            Deletes all messages associated with the cart of the current shopper.
            </summary>
            <returns>
            
            </returns>
            <example>
            <code>
              var changemessage = new ChangeMessage();
              changemessage.RemoveAllMessages();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Carts.ChangeMessageResource.RemoveMessage(System.String)">
            <summary>
            Removes a single message associated with the cart of the current shopper.
            </summary>
            <param name="messageId">Identifier of the message to remove from the cart.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var changemessage = new ChangeMessage();
              changemessage.RemoveMessage( messageId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource">
            <summary>
            Use the Attribute Definition resource to manage the properties, options, and extras that uniquely describe products of a specific type. Attributes can be associated with a product type, assigned values by a client or shopper, and added as faceted search filters for a product category. Options are product attributes that describe unique configurations made by the shopper, such as size or color, and generate a new product variation (or unique SKU). Properties are product attributes that describe aspects of the product that do not represent an option configurable by the shopper, such as screen resolution or brand. Extras are product attributes that describe add-on configurations made by the shopper that do not represent a product variation, such as a monogram.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.GetAttributes(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a paged list of attributes according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeCollection"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attributeCollection = attribute.GetAttributes( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.GetAttribute(System.String,System.String)">
            <summary>
            Retrieves the details of the specified product attribute.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = attribute.GetAttribute( attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.AddAttribute(Mozu.Api.Contracts.ProductAdmin.Attribute,System.String)">
            <summary>
            Creates a new attribute to describe one aspect of a product such as color or size, based on its defined product type. The attribute name, attribute type, input type, and data type are required.
            </summary>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attribute">Properties of the new product attribute to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = attribute.AddAttribute( attribute,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.UpdateAttribute(Mozu.Api.Contracts.ProductAdmin.Attribute,System.String,System.String)">
            <summary>
            Updates an existing attribute with attribute properties to set.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attribute">Any properties of the attribute that to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = attribute.UpdateAttribute( attribute,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.AttributeResource.DeleteAttribute(System.String)">
            <summary>
            Deletes a defined product attribute. You cannot delete an attribute assigned a value for a product.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              attribute.DeleteAttribute( attributeFQN);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource.GetAttributeLocalizedContents(System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var attributelocalizedcontent = new AttributeLocalizedContent();
              var attributeLocalizedContent = attributelocalizedcontent.GetAttributeLocalizedContents( attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource.GetAttributeLocalizedContent(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>
            </returns>
            <example>
            <code>
              var attributelocalizedcontent = new AttributeLocalizedContent();
              var attributeLocalizedContent = attributelocalizedcontent.GetAttributeLocalizedContent( attributeFQN,  localeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource.AddLocalizedContent(Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>
            </returns>
            <example>
            <code>
              var attributelocalizedcontent = new AttributeLocalizedContent();
              var attributeLocalizedContent = attributelocalizedcontent.AddLocalizedContent( localizedContent,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource.UpdateLocalizedContents(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent},System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent"></param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var attributelocalizedcontent = new AttributeLocalizedContent();
              var attributeLocalizedContent = attributelocalizedcontent.UpdateLocalizedContents( localizedContent,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource.UpdateLocalizedContent(Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeLocalizedContent"/>
            </returns>
            <example>
            <code>
              var attributelocalizedcontent = new AttributeLocalizedContent();
              var attributeLocalizedContent = attributelocalizedcontent.UpdateLocalizedContent( localizedContent,  attributeFQN,  localeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentResource.DeleteLocalizedContent(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var attributelocalizedcontent = new AttributeLocalizedContent();
              attributelocalizedcontent.DeleteLocalizedContent( attributeFQN,  localeCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleResource">
            <summary>
            Type rules are subresources of product attributes which could be specifications that can be shared across products in a store or assigned to specific products. Attribute type rules provide definitions of how attribute types will appear on the user interface.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleResource.GetAttributeTypeRules(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of attribute type rules according to optional filter criteria and sort options. Attribute type rules help drive the behavior of attributes on a storefront page.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeTypeRuleCollection"/>
            </returns>
            <example>
            <code>
              var attributetyperule = new AttributeTypeRule();
              var attributeTypeRuleCollection = attributetyperule.GetAttributeTypeRules( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource">
            <summary>
            Vocabulary values are predefined for an attribute.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.GetAttributeVocabularyValues(System.String)">
            <summary>
            Retrieves a list of vocabulary values defined for the attribute specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValue = attributevocabularyvalue.GetAttributeVocabularyValues( attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.GetAttributeVocabularyValueLocalizedContents(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="value"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValueLocalizedContent = attributevocabularyvalue.GetAttributeVocabularyValueLocalizedContents( attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.GetAttributeVocabularyValueLocalizedContent(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValueLocalizedContent = attributevocabularyvalue.GetAttributeVocabularyValueLocalizedContent( attributeFQN,  value,  localeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.GetAttributeVocabularyValue(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a vocabulary value defined for an attribute by providing the attribute's fully qualified name and the value to retrieve.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields"></param>
            <param name="value">The actual unique value of the attribute vocabulary to retrieve. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValue = attributevocabularyvalue.GetAttributeVocabularyValue( attributeFQN,  value,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.AddAttributeVocabularyValueLocalizedContent(Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValueLocalizedContent = attributevocabularyvalue.AddAttributeVocabularyValueLocalizedContent( localizedContent,  attributeFQN,  value,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.AddAttributeVocabularyValue(Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue,System.String,System.String)">
            <summary>
            Creates a vocabulary value for a defined product attribute.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeVocabularyValue">The predefined vocabulary value to add to the attribute content.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValue = attributevocabularyvalue.AddAttributeVocabularyValue( attributeVocabularyValue,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.UpdateAttributeVocabularyValues(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue},System.String)">
            <summary>
            Update existing vocabulary values for an attribute.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="vocabularyValues">The actual vocabulary values for the attribute being updated.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValue = attributevocabularyvalue.UpdateAttributeVocabularyValues( vocabularyValues,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.UpdateAttributeVocabularyValueLocalizedContents(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent},System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="value"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent"></param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValueLocalizedContent = attributevocabularyvalue.UpdateAttributeVocabularyValueLocalizedContents( localizedContent,  attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.UpdateAttributeVocabularyValueLocalizedContent(Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="localizedContent"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValueLocalizedContent"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValueLocalizedContent = attributevocabularyvalue.UpdateAttributeVocabularyValueLocalizedContent( localizedContent,  attributeFQN,  value,  localeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.UpdateAttributeVocabularyValue(Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue,System.String,System.String,System.String)">
            <summary>
            Updates existing attribute vocabulary values.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields"></param>
            <param name="value">The actual unique value of the attribute vocabulary value to update. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeVocabularyValue">The predefined vocabulary value to add to the attribute content to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeVocabularyValue"/>
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              var attributeVocabularyValue = attributevocabularyvalue.UpdateAttributeVocabularyValue( attributeVocabularyValue,  attributeFQN,  value,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.DeleteAttributeVocabularyValue(System.String,System.String)">
            <summary>
            Deletes an attribute's vocabulary value.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="value">The actual unique value of the attribute vocabulary to delete. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              attributevocabularyvalue.DeleteAttributeVocabularyValue( attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueResource.DeleteAttributeVocabularyValueLocalizedContent(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="value"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var attributevocabularyvalue = new AttributeVocabularyValue();
              attributevocabularyvalue.DeleteAttributeVocabularyValueLocalizedContent( attributeFQN,  value,  localeCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource">
            <summary>
            Use the Product Types resource to manage the types for your product catalog. Product types act as configuration templates, which store a set of attributes common to all products associated with that type. Unlike categories, products can only be associated with a single product type.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.GetProductTypes(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of product types according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product type search results by any of its properties. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=Name+cont+shoes"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductTypeCollection"/>
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              var productTypeCollection = producttype.GetProductTypes(_dataViewMode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.GetProductType(System.Int32,System.String)">
            <summary>
            Retrieves the details of the product type specified in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type to retrieve.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              var productType = producttype.GetProductType(_dataViewMode,  productTypeId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.AddProductType(Mozu.Api.Contracts.ProductAdmin.ProductType,System.String)">
            <summary>
            Creates a new product type based on the information supplied in the request.
            </summary>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productType">Properties of the product type to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              var productType = producttype.AddProductType(_dataViewMode,  productType,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.UpdateProductType(Mozu.Api.Contracts.ProductAdmin.ProductType,System.Int32,System.String)">
            <summary>
            Updates one or more properties of a product type.
            </summary>
            <param name="productTypeId">Identifier of the product type to update.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productType">The details of the product type to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductType"/>
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              var productType = producttype.UpdateProductType(_dataViewMode,  productType,  productTypeId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.ProductTypeResource.DeleteProductType(System.Int32)">
            <summary>
            Deletes the product type by providing the product type ID.
            </summary>
            <param name="productTypeId">Identifier of the product type to delete.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var producttype = new ProductType();
              producttype.DeleteProductType(_dataViewMode,  productTypeId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource">
            <summary>
            Use the Extras subresource to define how a product attribute classified as an "extra" is used for a specific product type. Product attribute defintions are unique for each associated product type.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource.GetExtras(System.Int32)">
            <summary>
            Retrieves a list of extra attributes defined for the specified product type.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var producttypeextra = new ProductTypeExtra();
              var attributeInProductType = producttypeextra.GetExtras(_dataViewMode,  productTypeId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource.GetExtra(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the details of an extra attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type whose extra is being retrieved.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeextra = new ProductTypeExtra();
              var attributeInProductType = producttypeextra.GetExtra(_dataViewMode,  productTypeId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource.AddExtra(Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String)">
            <summary>
            Assigns a defined extra attribute to the product type based on the information supplied in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">The properties of the extra attribute definition for this product type assignment.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeextra = new ProductTypeExtra();
              var attributeInProductType = producttypeextra.AddExtra(_dataViewMode,  attributeInProductType,  productTypeId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource.UpdateExtra(Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String,System.String)">
            <summary>
            Update the definition of an extra attribute for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">The properties of the extra attribute definition to update for the product type.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeextra = new ProductTypeExtra();
              var attributeInProductType = producttypeextra.UpdateExtra(_dataViewMode,  attributeInProductType,  productTypeId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraResource.DeleteExtra(System.Int32,System.String)">
            <summary>
            Removes an extra attribute definition from the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var producttypeextra = new ProductTypeExtra();
              producttypeextra.DeleteExtra(_dataViewMode,  productTypeId,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource">
            <summary>
            Use the Options subresource to define how an option attribute is used for a specific product type. Product attribute definitions are unique for each associated product type.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource.GetOptions(System.Int32)">
            <summary>
            Retrieves a list of option product attributes defined for the specified product type.
            </summary>
            <param name="productTypeId">Identifier of the product type to retrieve.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var producttypeoption = new ProductTypeOption();
              var attributeInProductType = producttypeoption.GetOptions(_dataViewMode,  productTypeId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource.GetOption(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the details of an option attribute defined for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">The identifier of the product type.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeoption = new ProductTypeOption();
              var attributeInProductType = producttypeoption.GetOption(_dataViewMode,  productTypeId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource.AddOption(Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String)">
            <summary>
            Assigns an option attribute to the product type based on the information supplied in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of the option attribute to define for the specified product type.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeoption = new ProductTypeOption();
              var attributeInProductType = producttypeoption.AddOption(_dataViewMode,  attributeInProductType,  productTypeId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource.UpdateOption(Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String,System.String)">
            <summary>
            Updates an option attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of the option product attribute to define for the specified product type.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeoption = new ProductTypeOption();
              var attributeInProductType = producttypeoption.UpdateOption(_dataViewMode,  attributeInProductType,  productTypeId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionResource.DeleteOption(System.Int32,System.String)">
            <summary>
            Removes an option attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var producttypeoption = new ProductTypeOption();
              producttypeoption.DeleteOption(_dataViewMode,  productTypeId,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource">
            <summary>
            Use the Properties subresource to define how property product attributes are used for a specific product type. Product attribute definitions are unique for each associated product type.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource.GetProperties(System.Int32)">
            <summary>
            Retrieves a list of product property attributes defined for a product type.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>}
            </returns>
            <example>
            <code>
              var producttypeproperty = new ProductTypeProperty();
              var attributeInProductType = producttypeproperty.GetProperties(_dataViewMode,  productTypeId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource.GetProperty(System.Int32,System.String,System.String)">
            <summary>
            Retrieves a product property attribute definition for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeproperty = new ProductTypeProperty();
              var attributeInProductType = producttypeproperty.GetProperty(_dataViewMode,  productTypeId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource.AddProperty(Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String)">
            <summary>
            Assigns a property attribute to the specified product type, according to the information defined in the request.
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of the property attribute to define for the specified product type.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeproperty = new ProductTypeProperty();
              var attributeInProductType = producttypeproperty.AddProperty(_dataViewMode,  attributeInProductType,  productTypeId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource.UpdateProperty(Mozu.Api.Contracts.ProductAdmin.AttributeInProductType,System.Int32,System.String,System.String)">
            <summary>
            Updates the definition of a property attribute for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="attributeInProductType">Properties of the property attribute to define for the product type.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.AttributeInProductType"/>
            </returns>
            <example>
            <code>
              var producttypeproperty = new ProductTypeProperty();
              var attributeInProductType = producttypeproperty.UpdateProperty(_dataViewMode,  attributeInProductType,  productTypeId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyResource.DeleteProperty(System.Int32,System.String)">
            <summary>
            Removes a property attribute previously defined for the specified product type.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var producttypeproperty = new ProductTypeProperty();
              producttypeproperty.DeleteProperty(_dataViewMode,  productTypeId,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationResource">
            <summary>
            Use the variations resource to preview possible product variations for a specific product type based on the option attributes defined for the product type, such as size or color.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationResource.GenerateProductVariations(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductOption},System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Generates the variations possible for a product associated with the product type based on the option values supplied in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode"></param>
            <param name="productTypeId">Unique identifier of the product type.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productOptionsIn">The product option attributes configured for this product type.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection"/>
            </returns>
            <example>
            <code>
              var producttypevariation = new ProductTypeVariation();
              var productVariationPagedCollection = producttypevariation.GenerateProductVariations( productOptionsIn,  productTypeId,  productCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource">
            <summary>
            Use the Categories resource to organize products and control where they appear on the storefront. Create and maintain a hierarchy of categories and subcategories where the site will store properties.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.GetCategories(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of categories according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product category search results by any of its properties, including its position in the category hierarchy. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.CategoryPagedCollection"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var categoryPagedCollection = category.GetCategories( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.GetChildCategories(System.Int32,System.String)">
            <summary>
            Retrieves the list of subcategories within a category.
            </summary>
            <param name="categoryId">Unique identifier of the category for which to retrieve subcategories.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.CategoryCollection"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var categoryCollection = category.GetChildCategories( categoryId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.GetCategory(System.Int32,System.String)">
            <summary>
            Retrieves the details of a single category.
            </summary>
            <param name="categoryId">Unique identifier of the category to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var category = category.GetCategory( categoryId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.AddCategory(Mozu.Api.Contracts.ProductAdmin.Category,System.Nullable{System.Boolean},System.String)">
            <summary>
            Adds a new category to the site's category hierarchy. Specify a ParentCategoryID to determine where to place the category in the hierarchy. If no ParentCategoryID is specified, the new category is a top-level category.
            </summary>
            <param name="incrementSequence"></param>
            <param name="responseFields"></param>
            <param name="category">Properties of the new category to create. You must specify a name and parent category if you want to create it as a subcategory.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var category = category.AddCategory( category,  incrementSequence,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.UpdateCategory(Mozu.Api.Contracts.ProductAdmin.Category,System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Update the properties of a defined category or move it to another location in the category hierarchy. Because this operation replaces the defined resource,include all the information to maintain for the category in the request.
            </summary>
            <param name="cascadeVisibility">If true, when changing the display option for the category, change it for all subcategories also. Default: False.</param>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="responseFields"></param>
            <param name="category">Properties of the category to modify.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Category"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var category = category.UpdateCategory( category,  categoryId,  cascadeVisibility,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.CategoryResource.DeleteCategoryById(System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Deletes the category specified by its category ID.
            </summary>
            <param name="cascadeDelete">If true, also delete all subcategories associated with the specified category.</param>
            <param name="categoryId">Unique identifier of the category to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var category = new Category();
              category.DeleteCategoryById( categoryId,  cascadeDelete);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource">
            <summary>
            Define and manage discounts to apply to products, product categories, or orders. The discounts can be a specified amount off the price, percentage off the price, or for free shipping. Create a coupon code that shoppers can use to redeem the discount.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.GetDiscounts(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of discounts according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountCollection"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discountCollection = discount.GetDiscounts(_dataViewMode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.GetDiscountContent(System.Int32,System.String)">
            <summary>
            Retrieves the localized content specified for the specified discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discountLocalizedContent = discount.GetDiscountContent(_dataViewMode,  discountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.GetDiscount(System.Int32,System.String)">
            <summary>
            Retrieves the details of a single discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discount = discount.GetDiscount(_dataViewMode,  discountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.GenerateRandomCoupon(System.String)">
            <summary>
            Generates a random code for a coupon.
            </summary>
            <param name="responseFields"></param>
            <returns>
            string
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var string = discount.GenerateRandomCoupon( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.CreateDiscount(Mozu.Api.Contracts.ProductAdmin.Discount,System.String)">
            <summary>
            Creates a new discount or coupon to apply to a product, category, order, or shipping.
            </summary>
            <param name="responseFields"></param>
            <param name="discount">Properties of the discount to create. You must specify the discount name, amount type, start date, and target.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discount = discount.CreateDiscount( discount,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.UpdateDiscountContent(Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent,System.Int32,System.String)">
            <summary>
            Updates the localizable content for the specified discount or rename the discount without modifying its other properties.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <param name="responseFields"></param>
            <param name="content">The discount content to update, including the discount name.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discountLocalizedContent = discount.UpdateDiscountContent( content,  discountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.UpdateDiscount(Mozu.Api.Contracts.ProductAdmin.Discount,System.Int32,System.String)">
            <summary>
            Updates one or more properties of a defined discount.
            </summary>
            <param name="discountId">Unique identifier of the discount to update.</param>
            <param name="responseFields"></param>
            <param name="discount">Properties of the discount to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Discount"/>
            </returns>
            <example>
            <code>
              var discount = new Discount();
              var discount = discount.UpdateDiscount( discount,  discountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.DiscountResource.DeleteDiscount(System.Int32)">
            <summary>
            Deletes a discount specified by its discount ID.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var discount = new Discount();
              discount.DeleteDiscount( discountId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Discounts.DiscountTargetResource">
            <summary>
            Retrieves and modifies the products, categories, and shipping methods eligible for discounts in the form of a fixed dollar amount, percentage off a product price, or free shipping.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Discounts.DiscountTargetResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Discounts.DiscountTargetResource.GetDiscountTarget(System.Int32,System.String)">
            <summary>
            Retrieves the discount target, that is which products, categories, or shipping methods are eligible for the discount.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountTarget"/>
            </returns>
            <example>
            <code>
              var discounttarget = new DiscountTarget();
              var discountTarget = discounttarget.GetDiscountTarget(_dataViewMode,  discountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Discounts.DiscountTargetResource.UpdateDiscountTarget(Mozu.Api.Contracts.ProductAdmin.DiscountTarget,System.Int32,System.String)">
            <summary>
            Modifies properties of the discount target, for example, the dollar amount, or precentage off the price.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <param name="responseFields"></param>
            <param name="discountTarget">Properties of the discount target to modify. Required properties: Target.Type. Any unspecified properties are set to null and boolean variables to false.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.DiscountTarget"/>
            </returns>
            <example>
            <code>
              var discounttarget = new DiscountTarget();
              var discountTarget = discounttarget.UpdateDiscountTarget( discountTarget,  discountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource">
            <summary>
            Use the Facets resource to manage the facets shoppers use to filter product display results on a storefront. Facets can include categories, product attributes, or prices, and use either a range of values or discrete values.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.GetFacet(System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a facet specified by its unique identifier and displays its properties.
            </summary>
            <param name="facetId">Unique identifier of the facet to retrieve.</param>
            <param name="responseFields"></param>
            <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facet = facet.GetFacet( facetId,  validate,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.GetFacetCategoryList(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a list of the facets defined for the specified category.
            </summary>
            <param name="categoryId">Unique identifier of the category associated with the facets to retrieve.</param>
            <param name="includeAvailable">If true, returns a list of the attributes and categories associated with a product type that have not been defined as a facet for the category.</param>
            <param name="responseFields"></param>
            <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.FacetSet"/>
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facetSet = facet.GetFacetCategoryList( categoryId,  includeAvailable,  validate,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.AddFacet(Mozu.Api.Contracts.ProductAdmin.Facet,System.String)">
            <summary>
            Creates a new category, price, or attribute facet. Define the category or attribute source to use for the facet values.
            </summary>
            <param name="responseFields"></param>
            <param name="facet">Properties of the new facet to create. You must specify the source, type, and category.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facet = facet.AddFacet( facet,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.UpdateFacet(Mozu.Api.Contracts.ProductAdmin.Facet,System.Int32,System.String)">
            <summary>
            Modifies one or more properties of a defined facet.
            </summary>
            <param name="facetId">Unique identifier of the facet to modify.</param>
            <param name="responseFields"></param>
            <param name="facet">Properties of the defined facet to modify.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Facet"/>
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facet = facet.UpdateFacet( facet,  facetId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.FacetResource.DeleteFacetById(System.Int32)">
            <summary>
            Deletes the facet specified by its unique identifier.
            </summary>
            <param name="facetId">Unique identifier of the facet to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var facet = new Facet();
              facet.DeleteFacetById( facetId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.LocationInventoryResource">
            <summary>
            Use the Location Inventory resource to manage the level of active product inventory maintained at each defined location, at the location level.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.LocationInventoryResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.LocationInventoryResource.GetLocationInventory(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a product's active inventory at the location specified in the request.
            </summary>
            <param name="locationCode">User-defined code that uniquely identifies the location.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventory = locationinventory.GetLocationInventory( locationCode,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.LocationInventoryResource.GetLocationInventories(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of all product inventory definitions for the location code specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="locationCode">User-defined code that uniquely identifies the location.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection"/>
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventoryCollection = locationinventory.GetLocationInventories( locationCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.LocationInventoryResource.AddLocationInventory(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.LocationInventory},System.String,System.Nullable{System.Boolean})">
            <summary>
            Creates an array of product inventory definitions for the location specified in the request. When adding a new inventory definition, you must specify the productCode and stockOnHand value in each array you define. All other properties are system-supplied and read only.
            </summary>
            <param name="locationCode">User-defined code that uniquely identifies the location.</param>
            <param name="performUpserts"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="locationInventoryList">Array list of product inventory definitions for all associated locations. For each location inventory in the list, define the productCode and stockOnHand values.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventory = locationinventory.AddLocationInventory(_dataViewMode,  locationInventoryList,  locationCode,  performUpserts);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.LocationInventoryResource.UpdateLocationInventory(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.LocationInventoryAdjustment},System.String)">
            <summary>
            Updates the active stock on hand inventory of products for the location code specified in the request.
            </summary>
            <param name="locationCode">User-defined code that uniquely identifies the location.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="locationInventoryAdjustments">Properties of the inventory adjustments to perform for the specified location.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventory = locationinventory.UpdateLocationInventory(_dataViewMode,  locationInventoryAdjustments,  locationCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.LocationInventoryResource.DeleteLocationInventory(System.String,System.String)">
            <summary>
            Deletes the product code inventory definition for the location specified in the request.
            </summary>
            <param name="locationCode">User-defined code that uniquely identifies the location.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              locationinventory.DeleteLocationInventory(_dataViewMode,  locationCode,  productCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.MasterCatalogResource">
            <summary>
            Use the Master Catalog resource to view details of the master catalogs associated with a tenant and to manage the product publishing mode for each master catalog.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.MasterCatalogResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.MasterCatalogResource.GetMasterCatalogs(System.String)">
            <summary>
            Retrieve the details of all master catalog associated with a tenant.
            </summary>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.MasterCatalogCollection"/>
            </returns>
            <example>
            <code>
              var mastercatalog = new MasterCatalog();
              var masterCatalogCollection = mastercatalog.GetMasterCatalogs( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.MasterCatalogResource.GetMasterCatalog(System.Int32,System.String)">
            <summary>
            Retrieve the details of the master catalog specified in the request.
            </summary>
            <param name="masterCatalogId">The unique identifier of the master catalog associated with the entity.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.MasterCatalog"/>
            </returns>
            <example>
            <code>
              var mastercatalog = new MasterCatalog();
              var masterCatalog = mastercatalog.GetMasterCatalog( masterCatalogId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.MasterCatalogResource.UpdateMasterCatalog(Mozu.Api.Contracts.ProductAdmin.MasterCatalog,System.Int32,System.String)">
            <summary>
            Updates the product publishing mode for the master catalog specified in the request.
            </summary>
            <param name="masterCatalogId"></param>
            <param name="responseFields"></param>
            <param name="masterCatalog">Properties of the master catalog to update, which consists of the product publishing mode. Possible values are "Pending" which saves product updates in draft mode until they are published, and "Live" which publishes all product changes immediately.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.MasterCatalog"/>
            </returns>
            <example>
            <code>
              var mastercatalog = new MasterCatalog();
              var masterCatalog = mastercatalog.UpdateMasterCatalog( masterCatalog,  masterCatalogId,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource">
            <summary>
            Temporarily hold a product from inventory while a shopper is filling out payment information. Create a product reservation when a shopper proceeds to check out and then release the reservation when the order process is complete.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.GetProductReservations(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of product reservations according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservationCollection"/>
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              var productReservationCollection = productreservation.GetProductReservations(_dataViewMode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.GetProductReservation(System.Int32,System.String)">
            <summary>
            Retrieves the details of a product reservation.
            </summary>
            <param name="productReservationId">Unique identifier of the product reservation.</param>
            <param name="responseFields"></param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              var productReservation = productreservation.GetProductReservation(_dataViewMode,  productReservationId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.AddProductReservations(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductReservation},System.Nullable{System.Boolean})">
            <summary>
            Creates a new product reservation for a product. This action places a hold on the product inventory for the quantity specified during the ordering process.
            </summary>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productReservations">Details of the product reservations to add.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>}
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              var productReservation = productreservation.AddProductReservations(_dataViewMode,  productReservations,  skipInventoryCheck);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.CommitReservations(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductReservation})">
            <summary>
            Commits a product reservation to decrement the product's inventory by the quantity specified then release the reservation once the order process completed successfully.
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productReservations">List of unique identifiers of the reservations to commit.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              productreservation.CommitReservations(_dataViewMode,  productReservations);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.UpdateProductReservations(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductReservation},System.Nullable{System.Boolean})">
            <summary>
            Updates an existing product reservation for a product.
            </summary>
            <param name="skipInventoryCheck">If true, skip the inventory validation process when updating this product reservation.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="productReservations">Properties of the product reservations to update.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductReservation"/>}
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              var productReservation = productreservation.UpdateProductReservations(_dataViewMode,  productReservations,  skipInventoryCheck);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductReservationResource.DeleteProductReservation(System.Int32)">
            <summary>
            Deletes a product reservation. For example, delete a reservation when an order is not processed to return the product quantity back to inventory.
            </summary>
            <param name="productReservationId">Unique identifier of the reservation.</param>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productreservation = new ProductReservation();
              productreservation.DeleteProductReservation(_dataViewMode,  productReservationId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource">
            <summary>
            Use the Product Administration resource to create new product definitions in the master catalog and determine which catalogs will feature products. You can also assign attribute values for defined products, manage product-level location inventory, and configure the variations of a product.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.GetProducts(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a list of products according to any specified facets, filter criteria, and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="noCount">If true, the operation does not return the TotalCount number of results.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of product search terms to use in the query when searching across product code and product name. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductCollection"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productCollection = product.GetProducts(_dataViewMode,  startIndex,  pageSize,  sortBy,  filter,  q,  qLimit,  noCount,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.GetProductInCatalogs(System.String)">
            <summary>
            Retrieves a product that is associated with one or more specific catalogs.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>}
            </returns>
            <example>
            <code>
              var product = new Product();
              var productInCatalogInfo = product.GetProductInCatalogs(_dataViewMode,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.GetProductInCatalog(System.String,System.Int32,System.String)">
            <summary>
            Retrieves the details of a product associated with a specific catalog.
            </summary>
            <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productInCatalogInfo = product.GetProductInCatalog(_dataViewMode,  productCode,  catalogId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.GetProduct(System.String,System.String)">
            <summary>
            Retrieves the details of a product definition.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var product = product.GetProduct(_dataViewMode,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.AddProduct(Mozu.Api.Contracts.ProductAdmin.Product,System.String)">
            <summary>
            Creates a new product definition in the specified master catalog.
            </summary>
            <param name="responseFields"></param>
            <param name="product">Properties of the new product. You must supply values for the product code, product name, and price.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var product = product.AddProduct(_dataViewMode,  product,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.AddProductInCatalog(Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo,System.String,System.String)">
            <summary>
            Associates a new product defined in the master catalog with a specific catalog.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="productInCatalogInfoIn">Properties of the product to define for the specific catalog association.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productInCatalogInfo = product.AddProductInCatalog(_dataViewMode,  productInCatalogInfoIn,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.UpdateProductInCatalogs(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo},System.String)">
            <summary>
            Updates the properties of a product specific to each catalog associated with the product.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="productInCatalogsIn">Properties of the product to update for each associated catalog.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>}
            </returns>
            <example>
            <code>
              var product = new Product();
              var productInCatalogInfo = product.UpdateProductInCatalogs(_dataViewMode,  productInCatalogsIn,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.UpdateProductInCatalog(Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo,System.String,System.Int32,System.String)">
            <summary>
            Updates one or more properties of a product associated with a specific catalog.
            </summary>
            <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="productInCatalogInfoIn">Properties of the product associated with the catalog specified in the request.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductInCatalogInfo"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productInCatalogInfo = product.UpdateProductInCatalog(_dataViewMode,  productInCatalogInfoIn,  productCode,  catalogId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.UpdateProduct(Mozu.Api.Contracts.ProductAdmin.Product,System.String,System.String)">
            <summary>
            Updates one or more properties of a product definition in a master catalog.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="product">Properties of the product definition to update in the master catalog.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.Product"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var product = product.UpdateProduct(_dataViewMode,  product,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.DeleteProduct(System.String)">
            <summary>
            Deletes the specified product from a master catalog.
            </summary>
            <param name="productCode"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var product = new Product();
              product.DeleteProduct(_dataViewMode,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.ProductResource.DeleteProductInCatalog(System.String,System.Int32)">
            <summary>
            Removes the product association defined for a specific catalog.
            </summary>
            <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var product = new Product();
              product.DeleteProductInCatalog(_dataViewMode,  productCode,  catalogId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.LocationInventoryResource">
            <summary>
            Use the Product Location Inventory resource to manage the levels of active product inventory to maintain across defined locations at the product level.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.LocationInventoryResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.LocationInventoryResource.GetLocationInventories(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves all locations for which a product has inventory defined and displays the inventory definition properties of each location.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventoryCollection"/>
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventoryCollection = locationinventory.GetLocationInventories( productCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.LocationInventoryResource.GetLocationInventory(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of the inventory of the product in the location specified in the request.
            </summary>
            <param name="locationCode">User-defined code that identifies the location.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventory = locationinventory.GetLocationInventory( productCode,  locationCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.LocationInventoryResource.AddLocationInventory(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.LocationInventory},System.String,System.Nullable{System.Boolean})">
            <summary>
            Creates a new location inventory definition for the product code specified in the request.
            </summary>
            <param name="performUpserts"></param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="locationInventoryList">Array list of the location inventory definitions associated with the product code specified in the request. For each location, you must define the locationCode value and the stockOnHand value. All other properties in the array are system-supplied and read only.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventory = locationinventory.AddLocationInventory(_dataViewMode,  locationInventoryList,  productCode,  performUpserts);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.LocationInventoryResource.UpdateLocationInventory(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.LocationInventoryAdjustment},System.String)">
            <summary>
            Updates the current level of stock at each location associated with the product code specified in the request.
            </summary>
            <param name="productCode">The product code of the product for which to update active stock on hand inventory at a specified location.</param>
            <param name="locationInventoryAdjustments">Properties of the inventory adjustments to perform for the specified location.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.LocationInventory"/>}
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              var locationInventory = locationinventory.UpdateLocationInventory(_dataViewMode,  locationInventoryAdjustments,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.LocationInventoryResource.DeleteLocationInventory(System.String,System.String)">
            <summary>
            Deletes the location inventory definition for the product code specified in the request.
            </summary>
            <param name="locationCode">The code that identifies the location for which to delete product inventory.</param>
            <param name="productCode">The product code for which to delete a location's inventory.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var locationinventory = new LocationInventory();
              locationinventory.DeleteLocationInventory(_dataViewMode,  productCode,  locationCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource">
            <summary>
            Use the Extras resource to configure an extra product attribute for products associated with the product type that uses the extra attribute.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.GetExtras(System.String)">
            <summary>
            Retrieves a list of extras configured for the product according to any defined filter and sort criteria.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>}
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtra = productextra.GetExtras(_dataViewMode,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.GetExtraValueLocalizedDeltaPrices(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="productCode"></param>
            <param name="value"></param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtraValueDeltaPrice = productextra.GetExtraValueLocalizedDeltaPrices(_dataViewMode,  productCode,  attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.GetExtraValueLocalizedDeltaPrice(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="currencyCode"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtraValueDeltaPrice = productextra.GetExtraValueLocalizedDeltaPrice(_dataViewMode,  productCode,  attributeFQN,  value,  currencyCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.GetExtra(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of an extra attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtra = productextra.GetExtra(_dataViewMode,  productCode,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.AddExtraValueLocalizedDeltaPrice(Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <param name="localizedDeltaPrice"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtraValueDeltaPrice = productextra.AddExtraValueLocalizedDeltaPrice(_dataViewMode,  localizedDeltaPrice,  productCode,  attributeFQN,  value,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.AddExtra(Mozu.Api.Contracts.ProductAdmin.ProductExtra,System.String,System.String)">
            <summary>
            Configure an extra attribute for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="productExtra">Properties of the product extra to configure for the specified product.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtra = productextra.AddExtra(_dataViewMode,  productExtra,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.UpdateExtraValueLocalizedDeltaPrices(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice},System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="productCode"></param>
            <param name="value"></param>
            <param name="localizedDeltaPrice"></param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtraValueDeltaPrice = productextra.UpdateExtraValueLocalizedDeltaPrices(_dataViewMode,  localizedDeltaPrice,  productCode,  attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.UpdateExtraValueLocalizedDeltaPrice(Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="currencyCode"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <param name="localizedDeltaPrice"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtraValueDeltaPrice"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtraValueDeltaPrice = productextra.UpdateExtraValueLocalizedDeltaPrice(_dataViewMode,  localizedDeltaPrice,  productCode,  attributeFQN,  value,  currencyCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.UpdateExtra(Mozu.Api.Contracts.ProductAdmin.ProductExtra,System.String,System.String,System.String)">
            <summary>
            Updates the configuration of an extra attribute for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="productExtra">Properties of the extra attribute to update for the specified product.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductExtra"/>
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              var productExtra = productextra.UpdateExtra(_dataViewMode,  productExtra,  productCode,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.DeleteExtra(System.String,System.String)">
            <summary>
            Delete a product extra configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              productextra.DeleteExtra(_dataViewMode,  productCode,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductExtraResource.DeleteExtraValueLocalizedDeltaPrice(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="currencyCode"></param>
            <param name="productCode"></param>
            <param name="value"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productextra = new ProductExtra();
              productextra.DeleteExtraValueLocalizedDeltaPrice(_dataViewMode,  productCode,  attributeFQN,  value,  currencyCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource">
            <summary>
            Use the Options resource to configure the option attributes and vocabulary values for an individual product associated with the product type that uses the option attribute. Options are used to generate variations of a product.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource.GetOptions(System.String)">
            <summary>
            Retrieves a list of all option attributes configured for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>}
            </returns>
            <example>
            <code>
              var productoption = new ProductOption();
              var productOption = productoption.GetOptions(_dataViewMode,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource.GetOption(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of an option attribute configuration for the specified product.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>
            </returns>
            <example>
            <code>
              var productoption = new ProductOption();
              var productOption = productoption.GetOption(_dataViewMode,  productCode,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource.AddOption(Mozu.Api.Contracts.ProductAdmin.ProductOption,System.String,System.String)">
            <summary>
            Configures an option attribute for the product specified in the request.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="productOption">Properties of the option attribute to define for the product.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>
            </returns>
            <example>
            <code>
              var productoption = new ProductOption();
              var productOption = productoption.AddOption(_dataViewMode,  productOption,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource.UpdateOption(Mozu.Api.Contracts.ProductAdmin.ProductOption,System.String,System.String,System.String)">
            <summary>
            Updates one or more properties of an option attribute configured for a product.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="productOption">Properties of the product option attribute configuration to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductOption"/>
            </returns>
            <example>
            <code>
              var productoption = new ProductOption();
              var productOption = productoption.UpdateOption(_dataViewMode,  productOption,  productCode,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductOptionResource.DeleteOption(System.String,System.String)">
            <summary>
            Deletes the configuration of an option attribute for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productoption = new ProductOption();
              productoption.DeleteOption(_dataViewMode,  productCode,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource">
            <summary>
            Use the Properties resource to configure a property attribute for an individual product associated with a product type that uses the property attribute, as well as set property values for the product.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.GetProperties(System.String)">
            <summary>
            Retrieves a list of the property attributes configured for the product specified in the request.
            </summary>
            <param name="productCode"></param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>}
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productProperty = productproperty.GetProperties(_dataViewMode,  productCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.GetPropertyValueLocalizedContents(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="productCode"></param>
            <param name="value"></param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productPropertyValueLocalizedContent = productproperty.GetPropertyValueLocalizedContents(_dataViewMode,  productCode,  attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.GetPropertyValueLocalizedContent(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productPropertyValueLocalizedContent = productproperty.GetPropertyValueLocalizedContent(_dataViewMode,  productCode,  attributeFQN,  value,  localeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.GetProperty(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a property attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productProperty = productproperty.GetProperty(_dataViewMode,  productCode,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.AddPropertyValueLocalizedContent(Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <param name="localizedContent"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productPropertyValueLocalizedContent = productproperty.AddPropertyValueLocalizedContent(_dataViewMode,  localizedContent,  productCode,  attributeFQN,  value,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.AddProperty(Mozu.Api.Contracts.ProductAdmin.ProductProperty,System.String,System.String)">
            <summary>
            Configures a property attribute for the product specified in the request.
            </summary>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="productProperty">Properties of the property attribute to configure for a product.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productProperty = productproperty.AddProperty(_dataViewMode,  productProperty,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.UpdatePropertyValueLocalizedContents(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent},System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="productCode"></param>
            <param name="value"></param>
            <param name="localizedContent"></param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>}
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productPropertyValueLocalizedContent = productproperty.UpdatePropertyValueLocalizedContents(_dataViewMode,  localizedContent,  productCode,  attributeFQN,  value);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.UpdatePropertyValueLocalizedContent(Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <param name="localizedContent"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductPropertyValueLocalizedContent"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productPropertyValueLocalizedContent = productproperty.UpdatePropertyValueLocalizedContent(_dataViewMode,  localizedContent,  productCode,  attributeFQN,  value,  localeCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.UpdateProperty(Mozu.Api.Contracts.ProductAdmin.ProductProperty,System.String,System.String,System.String)">
            <summary>
            Update one or more details of a property attribute configuration for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="productProperty">Details of the property attribute to update for the product configuration.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              var productProperty = productproperty.UpdateProperty(_dataViewMode,  productProperty,  productCode,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.DeleteProperty(System.String,System.String)">
            <summary>
            Deletes the configuration of a property attribute for the product specified in the request.
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              productproperty.DeleteProperty(_dataViewMode,  productCode,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductPropertyResource.DeletePropertyValueLocalizedContent(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="productCode"></param>
            <param name="value"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productproperty = new ProductProperty();
              productproperty.DeletePropertyValueLocalizedContent(_dataViewMode,  productCode,  attributeFQN,  value,  localeCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource">
            <summary>
            Use the product variations sub-resource to manage the variations of a product based on its attributes. For example, a t-shirt product could be offered in six variations: Small Black, Medium Black, Large Black, Small White, Medium White, and Large White.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.GetProductVariationLocalizedDeltaPrices(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="productCode"></param>
            <param name="variationKey"></param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationDeltaPrice = productvariation.GetProductVariationLocalizedDeltaPrices(_dataViewMode,  productCode,  variationKey);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.GetProductVariationLocalizedDeltaPrice(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="currencyCode"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="variationKey"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationDeltaPrice = productvariation.GetProductVariationLocalizedDeltaPrice(_dataViewMode,  productCode,  variationKey,  currencyCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.GetProductVariation(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a product variation based on the supplied product code and variation key.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariation"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariation = productvariation.GetProductVariation(_dataViewMode,  productCode,  variationKey,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.GetProductVariations(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of the product variations configured for the specified product code.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationPagedCollection"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationPagedCollection = productvariation.GetProductVariations(_dataViewMode,  productCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.AddProductVariationLocalizedDeltaPrice(Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="variationKey"></param>
            <param name="localizedDeltaPrice"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationDeltaPrice = productvariation.AddProductVariationLocalizedDeltaPrice(_dataViewMode,  localizedDeltaPrice,  productCode,  variationKey,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.UpdateProductVariationLocalizedDeltaPrices(System.Collections.Generic.List{Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice},System.String,System.String)">
            <summary>
            
            </summary>
            <param name="productCode"></param>
            <param name="variationKey"></param>
            <param name="localizedDeltaPrice"></param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>}
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationDeltaPrice = productvariation.UpdateProductVariationLocalizedDeltaPrices(_dataViewMode,  localizedDeltaPrice,  productCode,  variationKey);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.UpdateProductVariationLocalizedDeltaPrice(Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="currencyCode"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="variationKey"></param>
            <param name="localizedDeltaPrice"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationDeltaPrice"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationDeltaPrice = productvariation.UpdateProductVariationLocalizedDeltaPrice(_dataViewMode,  localizedDeltaPrice,  productCode,  variationKey,  currencyCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.UpdateProductVariation(Mozu.Api.Contracts.ProductAdmin.ProductVariation,System.String,System.String,System.String)">
            <summary>
            Modifies the details of a variation, based on the supplied variation key, for the specified product code.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <param name="productVariation">Wrapper for the properties of the specified product variation.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariation"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariation = productvariation.UpdateProductVariation(_dataViewMode,  productVariation,  productCode,  variationKey,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.UpdateProductVariations(Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection,System.String,System.String)">
            <summary>
            Modifies the collection of variations for the specified product code. Because this PUT replaces the existing resource, supply all information necessary to maintain for the product variation.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="productVariations">Wrapper for the collection of variations configured for the specified product code.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.ProductVariationCollection"/>
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              var productVariationCollection = productvariation.UpdateProductVariations(_dataViewMode,  productVariations,  productCode,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.DeleteProductVariation(System.String,System.String)">
            <summary>
            Deletes a variation, based on the supplied variation key, for the specified product code.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              productvariation.DeleteProductVariation(_dataViewMode,  productCode,  variationKey);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.Products.ProductVariationResource.DeleteProductVariationLocalizedDeltaPrice(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="currencyCode"></param>
            <param name="productCode"></param>
            <param name="variationKey"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var productvariation = new ProductVariation();
              productvariation.DeleteProductVariationLocalizedDeltaPrice(_dataViewMode,  productCode,  variationKey,  currencyCode);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.PublishingScopeResource">
            <summary>
            Use the Product Publishing resource to publish or discard pending changes to product definitions in the master catalog.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.PublishingScopeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.PublishingScopeResource.DiscardDrafts(Mozu.Api.Contracts.ProductAdmin.PublishingScope)">
            <summary>
            Deletes the draft version of product changes for each product code specified in the request.
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="publishScope">Properties of the pending product changes to include in this operation.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var publishingscope = new PublishingScope();
              publishingscope.DiscardDrafts(_dataViewMode,  publishScope);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.PublishingScopeResource.PublishDrafts(Mozu.Api.Contracts.ProductAdmin.PublishingScope)">
            <summary>
            Publishes the draft version of product changes for each product code specified in the request, and changes the product publish state to "live".
            </summary>
            <param name="dataViewMode">{<see cref="T:Mozu.Api.DataViewMode"/>}</param>
            <param name="publishScope">Properties of the pending product changes to include in this operation.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var publishingscope = new PublishingScope();
              publishingscope.PublishDrafts(_dataViewMode,  publishScope);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Admin.SearchResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Admin.SearchResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SearchResource.GetSettings(System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.SearchSettings"/>
            </returns>
            <example>
            <code>
              var search = new Search();
              var searchSettings = search.GetSettings( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Admin.SearchResource.UpdateSettings(Mozu.Api.Contracts.ProductAdmin.SearchSettings,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="settings"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductAdmin.SearchSettings"/>
            </returns>
            <example>
            <code>
              var search = new Search();
              var searchSettings = search.UpdateSettings( settings,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Storefront.CategoryResource">
            <summary>
            Use the Storefront Categories resource to view the product category hierarchy as it appears to shoppers who are browsing the storefront. The hierarchy can be returned as a flat list or as a category tree.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Storefront.CategoryResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.CategoryResource.GetCategories(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of categories according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product category search results by any of its properties, including its position in the category hierarchy. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.CategoryPagedCollection"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var categoryPagedCollection = category.GetCategories( filter,  startIndex,  pageSize,  sortBy,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.CategoryResource.GetCategory(System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of a single category.
            </summary>
            <param name="allowInactive">If true, allow inactive categories to be retrieved in the category list response. If false, the categories retrieved will not include ones marked inactive.</param>
            <param name="categoryId">Unique identifier for the storefront container used to organize products.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.Category"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var category = category.GetCategory( categoryId,  allowInactive,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.CategoryResource.GetCategoryTree(System.String)">
            <summary>
            Retrieves the list of product categories that appear on the storefront organized in a hierarchical format. Hidden categories do not appear in the list.
            </summary>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.CategoryCollection"/>
            </returns>
            <example>
            <code>
              var category = new Category();
              var categoryCollection = category.GetCategoryTree( responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource">
            <summary>
            Use the Storefront Products  resource to manage the shopper product selection process during a visit to the web storefront. You can update product options as shoppers pick and choose their product choices. A shopper cannot add a product to a cart until all of its required options have been selected.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.GetProducts(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of products that appear on the storefront according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductCollection"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productCollection = product.GetProducts(_dataViewMode,  filter,  startIndex,  pageSize,  sortBy,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.GetProductInventory(System.String,System.String,System.String)">
            <summary>
            Retrieves the active inventory level information associated with the product or location specified in the request.
            </summary>
            <param name="locationCodes">Array of location codes for which to retrieve product inventory information.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.LocationInventoryCollection"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var locationInventoryCollection = product.GetProductInventory(_dataViewMode,  productCode,  locationCodes,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.GetProduct(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves information about a single product given its product code.
            </summary>
            <param name="allowInactive">If true, returns an inactive product as part of the query.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="skipInventoryCheck">If true, skip the inventory validation process for the specified product.</param>
            <param name="variationProductCode">Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.Product"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var product = product.GetProduct(_dataViewMode,  productCode,  variationProductCode,  allowInactive,  skipInventoryCheck,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.ConfiguredProduct(Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Creates a new product configuration each time a shopper selects a product option value. After the shopper defines values for all required product options, the shopper can add the product configuration to a cart.
            </summary>
            <param name="includeOptionDetails">If true, the response returns details about the product. If false, returns a product summary such as the product name, price, and sale price.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="skipInventoryCheck">If true, skip the inventory validation process for the specified product.</param>
            <param name="productOptionSelections">For a product with shopper-configurable options, the properties of the product options selected by the shopper.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.ConfiguredProduct"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var configuredProduct = product.ConfiguredProduct( productOptionSelections,  productCode,  includeOptionDetails,  skipInventoryCheck,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.ValidateProduct(Mozu.Api.Contracts.ProductRuntime.ProductOptionSelections,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Validate the final state of shopper-selected options.
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="skipInventoryCheck">If true, skip the inventory validation process for the specified product.</param>
            <param name="productOptionSelections">For a product with shopper-configurable options, the properties of the product options selected by the shopper.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductValidationSummary"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var productValidationSummary = product.ValidateProduct( productOptionSelections,  productCode,  skipInventoryCheck,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.ValidateDiscounts(Mozu.Api.Contracts.ProductRuntime.DiscountSelections,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            
            </summary>
            <param name="allowInactive"></param>
            <param name="customerAccountId"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="skipInventoryCheck"></param>
            <param name="variationProductCode"></param>
            <param name="discountSelections"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.DiscountValidationSummary"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var discountValidationSummary = product.ValidateDiscounts( discountSelections,  productCode,  variationProductCode,  customerAccountId,  allowInactive,  skipInventoryCheck,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductResource.GetProductInventories(Mozu.Api.Contracts.ProductRuntime.LocationInventoryQuery,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="query"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.LocationInventoryCollection"/>
            </returns>
            <example>
            <code>
              var product = new Product();
              var locationInventoryCollection = product.GetProductInventories(_dataViewMode,  query,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductSearchResultResource">
            <summary>
            Use the Product Search resource to provide dynamic search results to shoppers as they browse and search for products on the web storefront, and to suggest possible search terms as the shopper enters text.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductSearchResultResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductSearchResultResource.Search(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Searches the categories displayed on the storefront for products or product options that the shopper types in a search query.
            </summary>
            <param name="facet">Individually list the facet fields you want to display in a storefront product search.</param>
            <param name="facetFieldRangeQuery">Display a range facet not specified in a template in a storefront product search by listing the facet field and the range to display.</param>
            <param name="facetHierDepth">If filtering using category facets in a hierarchy, the number of category hierarchy levels to return for the facet. This option is only available for category facets.</param>
            <param name="facetHierPrefix">If filtering using category facets in a hierarchy, the parent categories you want to skip in the storefront product search. This parameter is only available for category facets.</param>
            <param name="facetHierValue">If filtering using category facets in a hierarchy, the category in the hierarchy to begin faceting on. This parameter is only available for category facets.</param>
            <param name="facetPageSize">The number of facet values to return for one or more facets.</param>
            <param name="facetSettings">Settings reserved for future facet search functionality on a storefront product search.</param>
            <param name="facetStartIndex">When paging through multiple facets, the startIndex value for each facet.</param>
            <param name="facetTemplate">The facet template to use on the storefront. A template displays all facets associated with the template on the storefront product search. Currently, only category-level facet templates are available.</param>
            <param name="facetTemplateSubset">Display a subset of the facets defined in the template specified in facetTemplate parameter.</param>
            <param name="facetValueFilter">The facet values to apply to the filter.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product search results by any of its properties, including product code, type, category, and name. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=categoryId+eq+12"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="query">The terms to search on.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.ProductSearchResult"/>
            </returns>
            <example>
            <code>
              var productsearchresult = new ProductSearchResult();
              var productSearchResult = productsearchresult.Search( query,  filter,  facetTemplate,  facetTemplateSubset,  facet,  facetFieldRangeQuery,  facetHierPrefix,  facetHierValue,  facetHierDepth,  facetStartIndex,  facetPageSize,  facetSettings,  facetValueFilter,  sortBy,  pageSize,  startIndex,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ProductSearchResultResource.Suggest(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Suggests possible search terms as the shopper enters search text.
            </summary>
            <param name="groups"></param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="query"></param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ProductRuntime.SearchSuggestionResult"/>
            </returns>
            <example>
            <code>
              var productsearchresult = new ProductSearchResult();
              var searchSuggestionResult = productsearchresult.Suggest( query,  groups,  pageSize,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Catalog.Storefront.ShippingResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Catalog.Storefront.ShippingResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Catalog.Storefront.ShippingResource.GetRates(Mozu.Api.Contracts.ShippingRuntime.RateRequest,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="rateRequest"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.ShippingRuntime.RatesResponse"/>
            </returns>
            <example>
            <code>
              var shipping = new Shipping();
              var ratesResponse = shipping.GetRates( rateRequest,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.ChannelGroupResource">
            <summary>
            Use the Channel Groups resource to manage groups of channels with common information.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.ChannelGroupResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelGroupResource.GetChannelGroups(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of defined channel groups according to any filter and sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection"/>
            </returns>
            <example>
            <code>
              var channelgroup = new ChannelGroup();
              var channelGroupCollection = channelgroup.GetChannelGroups( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelGroupResource.GetChannelGroup(System.String,System.String)">
            <summary>
            Retrieves the details of a defined channel group.
            </summary>
            <param name="code">The code that uniquely identifies the channel group.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>
            </returns>
            <example>
            <code>
              var channelgroup = new ChannelGroup();
              var channelGroup = channelgroup.GetChannelGroup( code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelGroupResource.CreateChannelGroup(Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup,System.String)">
            <summary>
            Creates a new group of channels with common information.
            </summary>
            <param name="responseFields"></param>
            <param name="channelGroup">Properties of the channel group to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>
            </returns>
            <example>
            <code>
              var channelgroup = new ChannelGroup();
              var channelGroup = channelgroup.CreateChannelGroup( channelGroup,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelGroupResource.UpdateChannelGroup(Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup,System.String,System.String)">
            <summary>
            Updates one or more properties of a defined channel group.
            </summary>
            <param name="code">Code that identifies the channel group.</param>
            <param name="responseFields"></param>
            <param name="channelGroup">Properties of the channel group to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>
            </returns>
            <example>
            <code>
              var channelgroup = new ChannelGroup();
              var channelGroup = channelgroup.UpdateChannelGroup( channelGroup,  code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelGroupResource.DeleteChannelGroup(System.String)">
            <summary>
            Deletes a defined group of channels, which removes the group association with each channel in the group but does not delete the channel definitions themselves.
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var channelgroup = new ChannelGroup();
              channelgroup.DeleteChannelGroup( code);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.ChannelResource">
            <summary>
            Use the Channels resource to manage the channels a company uses to create logical commercial business divisions based on region or types of sales, such as "US Online," "Amazon," or "EMEA Retail." All orders include a channel association that enables the company to perform financial reporting for each defined channel. Because channels are managed at the tenant level, you must associate all the tenant's sites with a channel. Sites that do not have a defined channel association cannot successfully submit orders.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.ChannelResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelResource.GetChannels(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of channels defined for a tenant according to any filter or sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelCollection"/>
            </returns>
            <example>
            <code>
              var channel = new Channel();
              var channelCollection = channel.GetChannels( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelResource.GetChannel(System.String,System.String)">
            <summary>
            Retrieves the details of the channel specified in the request.
            </summary>
            <param name="code">User-defined code that identifies the channel to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel"/>
            </returns>
            <example>
            <code>
              var channel = new Channel();
              var channel = channel.GetChannel( code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelResource.CreateChannel(Mozu.Api.Contracts.CommerceRuntime.Channels.Channel,System.String)">
            <summary>
            Creates a new channel that defines a new logical business division to use for financial reporting.
            </summary>
            <param name="responseFields"></param>
            <param name="channel">Properties of the channel to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel"/>
            </returns>
            <example>
            <code>
              var channel = new Channel();
              var channel = channel.CreateChannel( channel,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelResource.UpdateChannel(Mozu.Api.Contracts.CommerceRuntime.Channels.Channel,System.String,System.String)">
            <summary>
            Updates one or more details of a defined channel, including the associated sites.
            </summary>
            <param name="code">User-defined code that identifies the channel to update.</param>
            <param name="responseFields"></param>
            <param name="channel">Properties of a the channel to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Channels.Channel"/>
            </returns>
            <example>
            <code>
              var channel = new Channel();
              var channel = channel.UpdateChannel( channel,  code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ChannelResource.DeleteChannel(System.String)">
            <summary>
            Deletes a defined channel for the tenant and removes the defined site associations. After deleting this channel, assign its associated sites to another channel.
            </summary>
            <param name="code">User-defined code that identifies the channel to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var channel = new Channel();
              channel.DeleteChannel( code);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource">
            <summary>
            Use the Cards subresource to manage stored credit cards for customer accounts. Mozu stores limited card data in the Customer service for expedited ordering purposes; however, the complete card data is stored in the Payment service.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource.GetAccountCard(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the details of a credit card stored with a customer account billing contact.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Card"/>
            </returns>
            <example>
            <code>
              var card = new Card();
              var card = card.GetAccountCard( accountId,  cardId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource.GetAccountCards(System.Int32,System.String)">
            <summary>
            Retrieves all stored credit cards for the customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CardCollection"/>
            </returns>
            <example>
            <code>
              var card = new Card();
              var cardCollection = card.GetAccountCards( accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource.AddAccountCard(Mozu.Api.Contracts.Customer.Card,System.Int32,System.String)">
            <summary>
            Creates a new credit card record and stores it for the customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <param name="card">Properties of the customer credit card to add to the account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Card"/>
            </returns>
            <example>
            <code>
              var card = new Card();
              var card = card.AddAccountCard( card,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource.UpdateAccountCard(Mozu.Api.Contracts.Customer.Card,System.Int32,System.String,System.String)">
            <summary>
            Update one or more properties of a credit card defined for a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the credit card.</param>
            <param name="responseFields"></param>
            <param name="card">Properties of the customer account credit card to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Card"/>
            </returns>
            <example>
            <code>
              var card = new Card();
              var card = card.UpdateAccountCard( card,  accountId,  cardId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CardResource.DeleteAccountCard(System.Int32,System.String)">
            <summary>
            Removes a stored credit card from a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the credit card to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var card = new Card();
              card.DeleteAccountCard( accountId,  cardId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource">
            <summary>
            Use the Attributes subresource to manage the attributes used to uniquely identify shopper accounts, such as gender or age.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.GetAccountAttribute(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the contents of an attribute associated with the specified customer account.
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attribute to retrieve.</param>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              var customerAttribute = customerattribute.GetAccountAttribute( accountId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.GetAccountAttributes(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves the list of customer account attributes.
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attributes to retrieve.</param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAttributeCollection"/>
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              var customerAttributeCollection = customerattribute.GetAccountAttributes( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.AddAccountAttribute(Mozu.Api.Contracts.Customer.CustomerAttribute,System.Int32,System.String)">
            <summary>
            Applies a defined attribute to the customer account specified in the request and assigns a value to the customer attribute.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <param name="attribute"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              var customerAttribute = customerattribute.AddAccountAttribute( attribute,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.UpdateAccountAttribute(Mozu.Api.Contracts.Customer.CustomerAttribute,System.Int32,System.String,System.String)">
            <summary>
            Updates one or more details of a customer account attribute.
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attribute.</param>
            <param name="attributeFQN"></param>
            <param name="responseFields"></param>
            <param name="attribute"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAttribute"/>
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              var customerAttribute = customerattribute.UpdateAccountAttribute( attribute,  accountId,  attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerAttributeResource.DeleteAccountAttribute(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="accountId"></param>
            <param name="attributeFQN"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customerattribute = new CustomerAttribute();
              customerattribute.DeleteAccountAttribute( accountId,  attributeFQN);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource">
            <summary>
            Merchants and customers can create, view, update, and delete a contact for a customer account. A customer account may have multiple contacts for billing and shipping addresses.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.GetAccountContact(System.Int32,System.Int32,System.String)">
            <summary>
            Retrieves the specified contact for a customer account such as a billing or shipping contact.
            </summary>
            <param name="accountId">Unique identifier of the customer account whose contact information is being retrieved.</param>
            <param name="contactId">Unique identifier of the customer account contact to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              var customerContact = customercontact.GetAccountContact( accountId,  contactId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.GetAccountContacts(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of contacts for a customer according to any specified filter criteria and sort options.
            </summary>
            <param name="accountId">Unique identifier of the customer account associated with the contact information to retrieve.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerContactCollection"/>
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              var customerContactCollection = customercontact.GetAccountContacts( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.AddAccountContact(Mozu.Api.Contracts.Customer.CustomerContact,System.Int32,System.String)">
            <summary>
            Creates a new contact for a customer account such as a new shipping address.
            </summary>
            <param name="accountId">Unique identifier of the customer account containing the new contact.</param>
            <param name="responseFields"></param>
            <param name="contact">Properties of the new contact. Required properties: Contact.Email, ContactType.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              var customerContact = customercontact.AddAccountContact( contact,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.UpdateAccountContact(Mozu.Api.Contracts.Customer.CustomerContact,System.Int32,System.Int32,System.String)">
            <summary>
            Updates a contact for a specified customer account such as to update addresses or change which contact is the primary contact for billing.
            </summary>
            <param name="accountId">Unique identifier of the customer account whose contact information is being updated.</param>
            <param name="contactId">Unique identifer of the customer account contact being updated.</param>
            <param name="responseFields"></param>
            <param name="contact">All properties the updated contact will have. Required properties: Name and email address.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerContact"/>
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              var customerContact = customercontact.UpdateAccountContact( contact,  accountId,  contactId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerContactResource.DeleteAccountContact(System.Int32,System.Int32)">
            <summary>
            Deletes a contact for the specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="contactId">Unique identifier of the customer account contact to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customercontact = new CustomerContact();
              customercontact.DeleteAccountContact( accountId,  contactId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource">
            <summary>
            Tenant administrators can add and view internal notes for a customer account. For example, a client can track a shopper's interests or complaints. Only clients can add and view notes. Shoppers cannot view these notes from the My Account page.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.GetAccountNote(System.Int32,System.Int32,System.String)">
            <summary>
            Retrieves the contents of a particular note attached to a specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account that contains the note being retrieved.</param>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              var customerNote = customernote.GetAccountNote( accountId,  noteId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.GetAccountNotes(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of notes added to a customer account according to any specified filter criteria and sort options.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerNoteCollection"/>
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              var customerNoteCollection = customernote.GetAccountNotes( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.AddAccountNote(Mozu.Api.Contracts.Customer.CustomerNote,System.Int32,System.String)">
            <summary>
            Adds a new note to the specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account for which to create the note.</param>
            <param name="responseFields"></param>
            <param name="note">Properties of the customer account note to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              var customerNote = customernote.AddAccountNote( note,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.UpdateAccountNote(Mozu.Api.Contracts.Customer.CustomerNote,System.Int32,System.Int32,System.String)">
            <summary>
            Modifies an existing note for a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account note to modify.</param>
            <param name="noteId">Unique identifier of the note to update.</param>
            <param name="responseFields"></param>
            <param name="note">The new content to replace the existing note.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerNote"/>
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              var customerNote = customernote.UpdateAccountNote( note,  accountId,  noteId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerNoteResource.DeleteAccountNote(System.Int32,System.Int32)">
            <summary>
            Removes a note from the specified customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account that contains the note being deleted.</param>
            <param name="noteId">Unique identifier of the customer account note being deleted.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customernote = new CustomerNote();
              customernote.DeleteAccountNote( accountId,  noteId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerSegmentResource">
            <summary>
            Use the Customer Account Segments subresource to view the customer segments associated with a customer account.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerSegmentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.CustomerSegmentResource.GetAccountSegments(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves the list of segments associated with a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerSegmentCollection"/>
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              var customerSegmentCollection = customersegment.GetAccountSegments( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Accounts.TransactionResource">
            <summary>
            Use the Customer Account Transactions resource to manage the transactions associated with a customer account.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Accounts.TransactionResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.TransactionResource.GetTransactions(System.Int32)">
            <summary>
            Retrieves a list of transactions associated with the customer account specified in the request.
            </summary>
            <param name="accountId">Unique identifier of the customer account for which to retrieve transactions.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Customer.Transaction"/>}
            </returns>
            <example>
            <code>
              var transaction = new Transaction();
              var transaction = transaction.GetTransactions( accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.TransactionResource.AddTransaction(Mozu.Api.Contracts.Customer.Transaction,System.Int32,System.String)">
            <summary>
            Creates a new transaction for the customer account specified in the request.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <param name="transaction">Properties of the transaction to create for the customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Transaction"/>
            </returns>
            <example>
            <code>
              var transaction = new Transaction();
              var transaction = transaction.AddTransaction( transaction,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Accounts.TransactionResource.RemoveTransaction(System.Int32,System.String)">
            <summary>
            Deletes a transaction from the customer account specified in the request.
            </summary>
            <param name="accountId">Unique identifier of the customer account from which to delete the transaction.</param>
            <param name="transactionId">Unique identifier of the transaction to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var transaction = new Transaction();
              transaction.RemoveTransaction( accountId,  transactionId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.AddressValidationRequestResource">
            <summary>
            Use the Address Validation resource to validate addresses associated with a customer account contact.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.AddressValidationRequestResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.AddressValidationRequestResource.ValidateAddress(Mozu.Api.Contracts.Customer.AddressValidationRequest,System.String)">
            <summary>
            Validates the customer address supplied in the request.
            </summary>
            <param name="responseFields"></param>
            <param name="addressValidationRequest">Properties of the address to validate.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.AddressValidationResponse"/>
            </returns>
            <example>
            <code>
              var addressvalidationrequest = new AddressValidationRequest();
              var addressValidationResponse = addressvalidationrequest.ValidateAddress( addressValidationRequest,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Attributedefinition.AttributeResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Attributedefinition.AttributeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Attributedefinition.AttributeResource.GetAttributes(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeCollection"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attributeCollection = attribute.GetAttributes( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Attributedefinition.AttributeResource.GetAttributeVocabularyValues(System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attributeVocabularyValue = attribute.GetAttributeVocabularyValues( attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Attributedefinition.AttributeResource.GetAttribute(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = attribute.GetAttribute( attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.CreditResource">
            <summary>
            Use the Customer Credits resource to manage the store credit associated with a customer account. Store credit can represent a static amount the customer can redeem at any of the tenant's sites, or a gift card registered for a customer account. At this time, gift card functionality is reserved for future use.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.CreditResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CreditResource.GetCredits(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of store credits applied to customer accounts, according any filter and sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.CreditCollection"/>
            </returns>
            <example>
            <code>
              var credit = new Credit();
              var creditCollection = credit.GetCredits( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CreditResource.GetCredit(System.String,System.String)">
            <summary>
            Retrieves the details of a store credit applied to a customer account.
            </summary>
            <param name="code">User-defined code that identifies the store credit to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.Credit"/>
            </returns>
            <example>
            <code>
              var credit = new Credit();
              var credit = credit.GetCredit( code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CreditResource.AddCredit(Mozu.Api.Contracts.Customer.Credit.Credit,System.String)">
            <summary>
            Creates a new store credit for the customer account specified in the request.
            </summary>
            <param name="responseFields"></param>
            <param name="credit">Properties of the store credit to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.Credit"/>
            </returns>
            <example>
            <code>
              var credit = new Credit();
              var credit = credit.AddCredit( credit,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CreditResource.AssociateCreditToShopper(System.String,System.String)">
            <summary>
            Associates an unclaimed customer credit with the shopper user authenticated in the request header.
            </summary>
            <param name="code">The code that represents the credit to claim for the shopper.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.Credit"/>
            </returns>
            <example>
            <code>
              var credit = new Credit();
              var credit = credit.AssociateCreditToShopper( code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CreditResource.UpdateCredit(Mozu.Api.Contracts.Customer.Credit.Credit,System.String,System.String)">
            <summary>
            Updates one or more properties of a defined store credit applied to a customer account.
            </summary>
            <param name="code">User-defined code of the store credit to update.</param>
            <param name="responseFields"></param>
            <param name="credit">Properties of the store credit to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.Credit"/>
            </returns>
            <example>
            <code>
              var credit = new Credit();
              var credit = credit.UpdateCredit( credit,  code,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CreditResource.DeleteCredit(System.String)">
            <summary>
            Deletes a store credit previously applied to a customer account.
            </summary>
            <param name="code">User-defined code of the store credit to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var credit = new Credit();
              credit.DeleteCredit( code);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Credits.CreditAuditEntryResource">
            <summary>
            Use the Customer Credit Audit Entries subresource to retrieve entries logged in the audit report of a store credit or gift card applied to a customer account. The system creates a new audit entry when the credit is created, deleted, activated, or deactivated. The system then creates a new audit entry each time the credit is updated or redeemed in a transaction.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Credits.CreditAuditEntryResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Credits.CreditAuditEntryResource.GetAuditEntries(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves the list of audit entries for the credit, according to any filter or sort criteria specified in the request.
            </summary>
            <param name="code">User-defined code of the credit for which to retrieve audit entries.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.CreditAuditEntryCollection"/>
            </returns>
            <example>
            <code>
              var creditauditentry = new CreditAuditEntry();
              var creditAuditEntryCollection = creditauditentry.GetAuditEntries( code,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.Credits.CreditTransactionResource">
            <summary>
            Use the Customer Credit Transactions subresource to manage the individual transactions performed using a store credit or gift card.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.Credits.CreditTransactionResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Credits.CreditTransactionResource.GetTransactions(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of the transactions performed using a customer credit that update the balance of the credit.
            </summary>
            <param name="code">User-defined code that identifies the customer credit.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.CreditTransactionCollection"/>
            </returns>
            <example>
            <code>
              var credittransaction = new CreditTransaction();
              var creditTransactionCollection = credittransaction.GetTransactions( code,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.Credits.CreditTransactionResource.AddTransaction(Mozu.Api.Contracts.Customer.Credit.CreditTransaction,System.String,System.String)">
            <summary>
            Creates a new transaction and updates the amount of a store credit or gift card.
            </summary>
            <param name="code">User-defined code that identifies the customer credit to update.</param>
            <param name="responseFields"></param>
            <param name="creditTransaction">Properties of the transaction to create for the customer credit.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Credit.CreditTransaction"/>
            </returns>
            <example>
            <code>
              var credittransaction = new CreditTransaction();
              var creditTransaction = credittransaction.AddTransaction( creditTransaction,  code,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource">
            <summary>
            Use the Customer Accounts resource to manage the components of shopper accounts, including attributes, contact information, company notes, and groups associated with the customer account.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.GetAccounts(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a list of customer accounts.
            </summary>
            <param name="fields">The fields to include in the response.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="isAnonymous">If true, retrieve anonymous shopper accounts in the response.</param>
            <param name="pageSize"></param>
            <param name="q">A list of customer account search terms to use in the query when searching across customer name and email. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAccountCollection"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAccountCollection = customeraccount.GetAccounts( startIndex,  pageSize,  sortBy,  filter,  fields,  q,  qLimit,  isAnonymous,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.GetLoginState(System.Int32,System.String)">
            <summary>
            Retrieves the current login state of the customer account specified in the request.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.LoginState"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var loginState = customeraccount.GetLoginState( accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.GetAccount(System.Int32,System.String)">
            <summary>
            Retrieve details of a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAccount = customeraccount.GetAccount( accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.AddAccount(Mozu.Api.Contracts.Customer.CustomerAccount,System.String)">
            <summary>
            Creates a new customer account based on the information specified in the request.
            </summary>
            <param name="responseFields"></param>
            <param name="account">Properties of the customer account to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAccount = customeraccount.AddAccount( account,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.ChangePassword(Mozu.Api.Contracts.Customer.PasswordInfo,System.Int32)">
            <summary>
            
            </summary>
            <param name="accountId"></param>
            <param name="passwordInfo"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              customeraccount.ChangePassword( passwordInfo,  accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.AddLoginToExistingCustomer(Mozu.Api.Contracts.Customer.CustomerLoginInfo,System.Int32,System.String)">
            <summary>
            Adds a new user login to a defined customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <param name="customerAuthInfo">The authentication information for the customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAuthTicket = customeraccount.AddLoginToExistingCustomer( customerAuthInfo,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.RecomputeCustomerLifetimeValue(System.Int32)">
            <summary>
            Updates the customer lifetime value of the specified customer account in the event of an order import or a lifetime value calculation error.
            </summary>
            <param name="accountId">The unique identifier of the customer account for which to calculate customer lifetime value.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              customeraccount.RecomputeCustomerLifetimeValue( accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.SetLoginLocked(System.Boolean,System.Int32)">
            <summary>
            Lock or unlock a customer account.
            </summary>
            <param name="accountId">The unique identifier of the customer account.</param>
            <param name="isLocked">If true, the customer account is locked from logging in.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              customeraccount.SetLoginLocked( isLocked,  accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.SetPasswordChangeRequired(System.Boolean,System.Int32)">
            <summary>
            Requires the password for the customer account to be changed.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="isPasswordChangeRequired">If true, the password for the customer account must be changed.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              customeraccount.SetPasswordChangeRequired( isPasswordChangeRequired,  accountId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.AddAccountAndLogin(Mozu.Api.Contracts.Customer.CustomerAccountAndAuthInfo,System.String)">
            <summary>
            Creates a new customer account and logs the user associated with the customer account into the site.
            </summary>
            <param name="responseFields"></param>
            <param name="accountAndAuthInfo">Properties of the customer account to create, including the user authentication information.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAuthTicket = customeraccount.AddAccountAndLogin( accountAndAuthInfo,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.AddAccounts(System.Collections.Generic.List{Mozu.Api.Contracts.Customer.CustomerAccountAndAuthInfo},System.String)">
            <summary>
            Creates multiple customer accounts based on the information specified in the request.
            </summary>
            <param name="responseFields"></param>
            <param name="customers">Properties of the customer accounts to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAccountCollection"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAccountCollection = customeraccount.AddAccounts( customers,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.GetLoginStateByEmailAddress(System.String,System.String)">
            <summary>
            Retrieves the current login state of a customer account by providing the customer's email address.
            </summary>
            <param name="emailAddress">The email address associated with the customer account.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.LoginState"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var loginState = customeraccount.GetLoginStateByEmailAddress( emailAddress,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.GetLoginStateByUserName(System.String,System.String)">
            <summary>
            Retrieves the current login state of a customer account by providing the user name associated with the customer account.
            </summary>
            <param name="responseFields"></param>
            <param name="userName">The user name associated with the customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.LoginState"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var loginState = customeraccount.GetLoginStateByUserName( userName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.ResetPassword(Mozu.Api.Contracts.Customer.ResetPasswordInfo)">
            <summary>
            Resets the password for a customer account.
            </summary>
            <param name="resetPasswordInfo">Information required to reset the password for a customer account.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              customeraccount.ResetPassword( resetPasswordInfo);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.UpdateAccount(Mozu.Api.Contracts.Customer.CustomerAccount,System.Int32,System.String)">
            <summary>
            Updates a customer account.
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <param name="account">Properties of the customer account to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAccount"/>
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              var customerAccount = customeraccount.UpdateAccount( account,  accountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAccountResource.DeleteAccount(System.Int32)">
            <summary>
            Deletes a customer account. A customer account cannot be deleted if any orders exist, past or present.
            </summary>
            <param name="accountId">Unique identifier of the customer account to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customeraccount = new CustomerAccount();
              customeraccount.DeleteAccount( accountId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.CustomerAuthTicketResource">
            <summary>
            Use the Customer Authentication Tickets resource to generate and refresh authentication tickets for customer accounts.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.CustomerAuthTicketResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAuthTicketResource.CreateAnonymousShopperAuthTicket">
            <summary>
            
            </summary>
            <returns>
            <see cref="T:System.IO.Stream"/>
            </returns>
            <example>
            <code>
              var customerauthticket = new CustomerAuthTicket();
              var stream = customerauthticket.CreateAnonymousShopperAuthTicket();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAuthTicketResource.CreateUserAuthTicket(Mozu.Api.Contracts.Customer.CustomerUserAuthInfo,System.String)">
            <summary>
            Generates a new authentication ticket for a customer account.
            </summary>
            <param name="responseFields"></param>
            <param name="userAuthInfo">The authentication information required to generate an authetication ticket for a user, which consists of a user name and password.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket"/>
            </returns>
            <example>
            <code>
              var customerauthticket = new CustomerAuthTicket();
              var customerAuthTicket = customerauthticket.CreateUserAuthTicket( userAuthInfo,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerAuthTicketResource.RefreshUserAuthTicket(System.String,System.String)">
            <summary>
            Refreshes an existing authentication ticket for a customer account by providing the refresh token string.
            </summary>
            <param name="refreshToken">The refresh token string required to refresh a user's authentication ticket.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerAuthTicket"/>
            </returns>
            <example>
            <code>
              var customerauthticket = new CustomerAuthTicket();
              var customerAuthTicket = customerauthticket.RefreshUserAuthTicket( refreshToken,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource">
            <summary>
            Use the Customer Segments resource to manage the segments that enable a client to manage groups of customers and target discounts for these segments. After a customer segment is defined, you can associate any number of customer accounts with it.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.GetSegments(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of defined customer segments according to any filter and sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerSegmentCollection"/>
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              var customerSegmentCollection = customersegment.GetSegments( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.GetSegment(System.Int32,System.String)">
            <summary>
            Retrieves the details of the customer segment specified in the request. This operation does not return a list of the customer accounts associated with the segment.
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerSegment"/>
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              var customerSegment = customersegment.GetSegment( id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.AddSegment(Mozu.Api.Contracts.Customer.CustomerSegment,System.String)">
            <summary>
            Creates a new customer segments. New customer segments do not have any associated customer accounts.
            </summary>
            <param name="responseFields"></param>
            <param name="segment">Properties of the customer segment to add.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerSegment"/>
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              var customerSegment = customersegment.AddSegment( segment,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.AddSegmentAccounts(System.Collections.Generic.List{System.Int32},System.Int32)">
            <summary>
            Adds one or more customer accounts to a defined customer segment.
            </summary>
            <param name="id">Unique identifier of the customer segment for which to add the associated customer accounts.</param>
            <param name="accountIds">List of customer account IDs to add to the customer segment specified in the request.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              customersegment.AddSegmentAccounts( accountIds,  id);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.UpdateSegment(Mozu.Api.Contracts.Customer.CustomerSegment,System.Int32,System.String)">
            <summary>
            Updates the details of the customer segment specified in the request.
            </summary>
            <param name="id">Unique identifier of the customer segment.</param>
            <param name="responseFields"></param>
            <param name="segment">Properties of the customer segment to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.CustomerSegment"/>
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              var customerSegment = customersegment.UpdateSegment( segment,  id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.DeleteSegment(System.Int32)">
            <summary>
            Deletes a customer segment specified by its unique identifier. Deleting a segment removes any customer account associations, but does not delete the customer account itself.
            </summary>
            <param name="id">Unique identifier of the customer segment to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              customersegment.DeleteSegment( id);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.CustomerSegmentResource.DeleteSegmentAccounts(System.Collections.Generic.List{System.Int32},System.Int32)">
            <summary>
            Removes the specified customer accounts from a defined customer segment. You must create the request body to perform this operation.
            </summary>
            <param name="id">Unique identifier of the segment from which to remove the customer accounts.</param>
            <param name="accountIds">List of customer account identifiers to remove from the specified customer segments.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var customersegment = new CustomerSegment();
              customersegment.DeleteSegmentAccounts( accountIds,  id);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Customer.VisitResource">
            <summary>
            Use the Visits resource to manage all visits a customer makes to a tenant's sites and measure the level of transactions a customer performs during a unique visit for customer account analytics. Clients can track customer visits by site (including online and in-person interactions), the transactions a customer performs during the visit, and the device type associated with the visit, if any.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Customer.VisitResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.VisitResource.GetVisits(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of customer visits according to any filter or sort criteria specified in the request.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.VisitCollection"/>
            </returns>
            <example>
            <code>
              var visit = new Visit();
              var visitCollection = visit.GetVisits( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.VisitResource.GetVisit(System.String,System.String)">
            <summary>
            Retrieves the details of the customer visit specified in the request.
            </summary>
            <param name="responseFields"></param>
            <param name="visitId">Unique identifier of the customer visit to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Visit"/>
            </returns>
            <example>
            <code>
              var visit = new Visit();
              var visit = visit.GetVisit( visitId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.VisitResource.AddVisit(Mozu.Api.Contracts.Customer.Visit,System.String)">
            <summary>
            Creates a new visit for the customer account specified in the request.
            </summary>
            <param name="responseFields"></param>
            <param name="visit">Properties of the visit to add to the customer account.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Visit"/>
            </returns>
            <example>
            <code>
              var visit = new Visit();
              var visit = visit.AddVisit( visit,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Customer.VisitResource.UpdateVisit(Mozu.Api.Contracts.Customer.Visit,System.String,System.String)">
            <summary>
            Updates one or more properties of a defined customer visit.
            </summary>
            <param name="responseFields"></param>
            <param name="visitId">Unique identifier of the customer visit to update.</param>
            <param name="visit">Properties of the customer visit to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.Visit"/>
            </returns>
            <example>
            <code>
              var visit = new Visit();
              var visit = visit.UpdateVisit( visit,  visitId,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.InStockNotificationSubscriptionResource">
            <summary>
            Use the Customer In-Stock Notification Subscription resource to manage the subscriptions customer accounts use to send product notifications. This resource can send a notification when a product in a catalog returns to a site's active inventory after it is out of stock, or when a new product becomes available for the first time.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.InStockNotificationSubscriptionResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.InStockNotificationSubscriptionResource.GetInStockNotificationSubscriptions(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of in-stock notification subscriptions.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.InStockNotificationSubscriptionCollection"/>
            </returns>
            <example>
            <code>
              var instocknotificationsubscription = new InStockNotificationSubscription();
              var inStockNotificationSubscriptionCollection = instocknotificationsubscription.GetInStockNotificationSubscriptions( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.InStockNotificationSubscriptionResource.GetInStockNotificationSubscription(System.Int32,System.String)">
            <summary>
            Retrieves the details of a subscription that sends a push notification when a product is available in a site's active stock.
            </summary>
            <param name="id">Unique identifier of the in-stock notification subscription to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.InStockNotificationSubscription"/>
            </returns>
            <example>
            <code>
              var instocknotificationsubscription = new InStockNotificationSubscription();
              var inStockNotificationSubscription = instocknotificationsubscription.GetInStockNotificationSubscription( id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.InStockNotificationSubscriptionResource.AddInStockNotificationSubscription(Mozu.Api.Contracts.Customer.InStockNotificationSubscription,System.String)">
            <summary>
            Creates a new subscription that notifies the customer when the product specified in the request is available in the active inventory of the defined location.
            </summary>
            <param name="responseFields"></param>
            <param name="inStockNotificationSubscription">Properties of a subscription that sends the customer a notification when a product is available in a site's active stock.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Customer.InStockNotificationSubscription"/>
            </returns>
            <example>
            <code>
              var instocknotificationsubscription = new InStockNotificationSubscription();
              var inStockNotificationSubscription = instocknotificationsubscription.AddInStockNotificationSubscription( inStockNotificationSubscription,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.InStockNotificationSubscriptionResource.DeleteInStockNotificationSubscription(System.Int32)">
            <summary>
            Deletes a subscription for a customer in-stock notification.
            </summary>
            <param name="id">Unique identifier of the customer in-stock notification subscription to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var instocknotificationsubscription = new InStockNotificationSubscription();
              instocknotificationsubscription.DeleteInStockNotificationSubscription( id);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.LocationResource">
            <summary>
            Use the Location resource to retrieve details about a location from a Mozu hosted storefront.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.LocationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.LocationResource.GetLocation(System.String)">
            <summary>
            Retrieves the details of the location specified in the request.
            </summary>
            <param name="code">User-defined code that identifies the location.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = location.GetLocation( code);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.LocationResource.GetLocationInUsageType(System.String,System.String)">
            <summary>
            Retrieves the details of a location associated with a defined location usage type for the site specified in the request.
            </summary>
            <param name="code">Retrieves the details of a location associated with a defined location usage type for the site specified in the request.</param>
            <param name="locationUsageType">System-defined location usage type code, which is DS for direct ship, SP for in-store pickup, or storeFinder.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = location.GetLocationInUsageType( locationUsageType,  code);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.LocationResource.GetLocationsInUsageType(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of the locations configured for a specified location usage type for the specified site, according to any defined filter or sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="locationUsageType">System-defined location usage type code, which is DS for direct ship, SP for in-store pickup, or storeFinder.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationCollection"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var locationCollection = location.GetLocationsInUsageType( locationUsageType,  startIndex,  pageSize,  sortBy,  filter);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.LocationResource.GetDirectShipLocation">
            <summary>
            Retrieves the details of the location configured for the direct shipping (DS) location usage type for the site specified in the request. This location acts as an origin address from which order packages will ship, as well as the location where product reservations are created when order items are submitted with the direct ship fulfillment type (DS). If the direct ship location usage type is not configured for this site, the operation returns an error.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = location.GetDirectShipLocation();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.LocationResource.GetInStorePickupLocation(System.String)">
            <summary>
            Retrieves the details of the location configured for the in-store pickup (SP) location usage type for the site specified in the request. If the location is not associated with a location type configured for the in-store pickup location usage type (SP), the operation returns an error.
            </summary>
            <param name="code">The user-defined code that identifies the location to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.Location"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var location = location.GetInStorePickupLocation( code);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.LocationResource.GetInStorePickupLocations(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of locations valid for in-store pickup of an item in an order according to any filter and sort criteria. For example, an application could use this operation to provide a store finder feature based on the shopper's GPS coordinates. If the location types for the in-store pickup location usage type are not configured for the site, this operation returns an error.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationCollection"/>
            </returns>
            <example>
            <code>
              var location = new Location();
              var locationCollection = location.GetInStorePickupLocations( startIndex,  pageSize,  sortBy,  filter);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.OrderResource">
            <summary>
            Use the Orders resource to manage all components of order processing, payment, and fulfillment.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.OrderResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.GetOrders(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a list of orders according to any specified filter criteria and sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter an order's search results by any of its properties, including status, contact information, or total. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=Status+eq+Submitted"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of order search terms to use in the query when searching across order number and the name or email of the billing contact. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderCollection"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var orderCollection = order.GetOrders( startIndex,  pageSize,  sortBy,  filter,  q,  qLimit,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.GetAvailableActions(System.String)">
            <summary>
            Retrieves the actions available to perform for an order based on its current status.
            </summary>
            <param name="orderId">Unique identifier of the available order actions to get.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var order = new Order();
              var string = order.GetAvailableActions( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.GetTaxableOrders(System.String)">
            <summary>
            Retrieves an order for the purpose of splitting it into multiple taxable orders in order to fulfill the order in multiple locations.
            </summary>
            <param name="orderId">Unique identifier of the order to retrieve.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.PricingRuntime.TaxableOrder"/>}
            </returns>
            <example>
            <code>
              var order = new Order();
              var taxableOrder = order.GetTaxableOrders( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.GetOrder(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of an order specified by the order ID.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order details to get.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.GetOrder( orderId,  draft,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.CreateOrderFromCart(System.String,System.String)">
            <summary>
            Creates a new order from an existing cart when the customer chooses to proceed to checkout.
            </summary>
            <param name="cartId">Unique identifier of the cart. This is the original cart ID expressed as a GUID.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.CreateOrderFromCart( cartId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.CreateOrder(Mozu.Api.Contracts.CommerceRuntime.Orders.Order,System.String)">
            <summary>
            Creates a new order for no-cart quick-ordering scenarios.
            </summary>
            <param name="responseFields"></param>
            <param name="order">Properties of the order to create and submit.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.CreateOrder( order,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.PerformOrderAction(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAction,System.String,System.String)">
            <summary>
            Perform the specified action for an order. The actions you can perform depend on the current status of the order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <param name="action">The action to perform for the order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.PerformOrderAction( action,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.UpdateOrderDiscount(Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Update the properties of a discount applied to an order.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order discount. System-supplied and read only.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to modify the discount by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="discount">Properties of the order discount to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.UpdateOrderDiscount( discount,  orderId,  discountId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.DeleteOrderDraft(System.String,System.String)">
            <summary>
            Deletes the current draft version of the order, which also deletes any uncommitted changes made to the order in draft mode.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the draft to delete.</param>
            <param name="version">If applicable, the version of the order draft to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var order = new Order();
              order.DeleteOrderDraft( orderId,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.ChangeOrderUserId(System.String,System.String)">
            <summary>
            Updates the user ID of the shopper who placed the order to the current user.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.ChangeOrderUserId( orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.OrderResource.UpdateOrder(Mozu.Api.Contracts.CommerceRuntime.Orders.Order,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the specified order when additional order information, such as shipping or billing information, is modified during the checkout process.
            </summary>
            <param name="orderId">Unique identifier of the order to update.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="order">The properties of the order to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var order = new Order();
              var order = order.UpdateOrder( order,  orderId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource">
            <summary>
            Use this subresource to manage ad-hoc order level price adjustments.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource.ApplyShippingAdjustment(Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment,System.String,System.String,System.String,System.String)">
            <summary>
            Applies a shipping adjustment to the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipping adjustment.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to apply the shipping adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="adjustment">Properties of the shipping adjustment to apply to the order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var adjustment = new Adjustment();
              var order = adjustment.ApplyShippingAdjustment( adjustment,  orderId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource.ApplyAdjustment(Mozu.Api.Contracts.CommerceRuntime.Commerce.Adjustment,System.String,System.String,System.String,System.String)">
            <summary>
            Applies a price adjustment to the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to apply the adjustment.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to apply the adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="adjustment">Properties of the price adjustment to apply to the order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var adjustment = new Adjustment();
              var order = adjustment.ApplyAdjustment( adjustment,  orderId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource.RemoveShippingAdjustment(System.String,System.String,System.String)">
            <summary>
            Removes a shipping adjustment previously applied to an order or draft.
            </summary>
            <param name="orderId">Unique identifier of the order with the applied shipping adjustment.</param>
            <param name="updateMode">Specifies whether to remove the shipping adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var adjustment = new Adjustment();
              var order = adjustment.RemoveShippingAdjustment( orderId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AdjustmentResource.RemoveAdjustment(System.String,System.String,System.String)">
            <summary>
            Removes a price adjustment from the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to delete the adjustment.</param>
            <param name="updateMode">Specifies whether to remove the adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var adjustment = new Adjustment();
              var order = adjustment.RemoveAdjustment( orderId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource">
            <summary>
            Use this subresource to apply coupons to or remove coupons from an order based on a supplied coupon code.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource.ApplyCoupon(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Apply a coupon to the order.
            </summary>
            <param name="couponCode">Alphanumeric code associated with the coupon or promotion that results in a discounted price.</param>
            <param name="orderId">Unique identifier of the order to associate the coupon. System-supplied and read-only.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to apply the coupon by updating the original order, updating the order in draft mode, or updating the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var order = applieddiscount.ApplyCoupon( orderId,  couponCode,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource.RemoveCoupon(System.String,System.String,System.String,System.String)">
            <summary>
            Removes a coupon previously applied to the order.
            </summary>
            <param name="couponCode">Alphanumeric code associated with the coupon or promotion that results in a discounted price.</param>
            <param name="orderId">Unique identifier of the order with the coupon to remove.</param>
            <param name="updateMode">Specifies whether to remove the coupon by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var order = applieddiscount.RemoveCoupon( orderId,  couponCode,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.AppliedDiscountResource.RemoveCoupons(System.String,System.String,System.String)">
            <summary>
            Removes all coupons previously applied to the order.
            </summary>
            <param name="orderId">Unique identifier of the order with the coupons to remove.</param>
            <param name="updateMode">Specifies whether to remove coupons by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var applieddiscount = new AppliedDiscount();
              var order = applieddiscount.RemoveCoupons( orderId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource">
            <summary>
            Use the Order Attribute Definition resource to manage the attributes that uniquely describe orders, such as the associated shopping season or "How did you hear about us?". Merchants can display order attributes on the order summary, the order confirmation page, invoices, or packing slips.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource.GetAttributes(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of order attributes according to any filter criteria or sort options.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeCollection"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attributeCollection = attribute.GetAttributes( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource.GetAttributeVocabularyValues(System.String)">
            <summary>
            
            </summary>
            <param name="attributeFQN"></param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Core.Extensible.AttributeVocabularyValue"/>}
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attributeVocabularyValue = attribute.GetAttributeVocabularyValues( attributeFQN);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.Attributedefinition.AttributeResource.GetAttribute(System.String,System.String)">
            <summary>
            Retrieves the details of the order attribute specified in the request.
            </summary>
            <param name="attributeFQN"></param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Extensible.Attribute"/>
            </returns>
            <example>
            <code>
              var attribute = new Attribute();
              var attribute = attribute.GetAttribute( attributeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.BillingInfoResource">
            <summary>
            Use the Billing Info subresource to manage the billing information stored for an order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.BillingInfoResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.BillingInfoResource.GetBillingInfo(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the billing information associated with an order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order billing information, which might include uncommitted changes.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>
            </returns>
            <example>
            <code>
              var billinginfo = new BillingInfo();
              var billingInfo = billinginfo.GetBillingInfo( orderId,  draft,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.BillingInfoResource.SetBillingInfo(Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the billing information supplied for an order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to set the billing information by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="billingInfo">The properties of the order billing information to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.BillingInfo"/>
            </returns>
            <example>
            <code>
              var billinginfo = new BillingInfo();
              var billingInfo = billinginfo.SetBillingInfo( billingInfo,  orderId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.DigitalPackageResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.DigitalPackageResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.DigitalPackageResource.GetAvailableDigitalPackageFulfillmentActions(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="digitalPackageId"></param>
            <param name="orderId"></param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var digitalpackage = new DigitalPackage();
              var string = digitalpackage.GetAvailableDigitalPackageFulfillmentActions( orderId,  digitalPackageId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.DigitalPackageResource.GetDigitalPackage(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="digitalPackageId"></param>
            <param name="orderId"></param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>
            </returns>
            <example>
            <code>
              var digitalpackage = new DigitalPackage();
              var digitalPackage = digitalpackage.GetDigitalPackage( orderId,  digitalPackageId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.DigitalPackageResource.CreateDigitalPackage(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="orderId"></param>
            <param name="responseFields"></param>
            <param name="digitalPackage"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>
            </returns>
            <example>
            <code>
              var digitalpackage = new DigitalPackage();
              var digitalPackage = digitalpackage.CreateDigitalPackage( digitalPackage,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.DigitalPackageResource.UpdateDigitalPackage(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="digitalPackageId"></param>
            <param name="orderId"></param>
            <param name="responseFields"></param>
            <param name="digitalPackage"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.DigitalPackage"/>
            </returns>
            <example>
            <code>
              var digitalpackage = new DigitalPackage();
              var digitalPackage = digitalpackage.UpdateDigitalPackage( digitalPackage,  orderId,  digitalPackageId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.DigitalPackageResource.DeleteDigitalPackage(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="digitalPackageId"></param>
            <param name="orderId"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var digitalpackage = new DigitalPackage();
              digitalpackage.DeleteDigitalPackage( orderId,  digitalPackageId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.FulfillmentActionResource">
            <summary>
            Use the Fulfillment resource to manage shipments or pickups of collections of packages for an order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.FulfillmentActionResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.FulfillmentActionResource.PerformFulfillmentAction(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentAction,System.String,System.String)">
            <summary>
            Sets the fulfillment action to "Ship" or "PickUp". To ship an order or prepare it for in-store pickup, the order must have a customer name, the "Open" or "OpenAndProcessing" status. To ship the order, it must also have the full shipping address and shipping method. Shipping all packages or picking up all pickups for an order will complete a paid order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to perform the fulfillment action.</param>
            <param name="responseFields"></param>
            <param name="action">The action to perform for the order fulfillment.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var fulfillmentaction = new FulfillmentAction();
              var order = fulfillmentaction.PerformFulfillmentAction( action,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.FulfillmentInfoResource">
            <summary>
            Use the Fulfillment Information resource to manage shipping or pickup information for orders.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.FulfillmentInfoResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.FulfillmentInfoResource.GetFulfillmentInfo(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves a list of the fulfillment information for the specified order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order's fulfillment information, which might include uncommitted changes.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo"/>
            </returns>
            <example>
            <code>
              var fulfillmentinfo = new FulfillmentInfo();
              var fulfillmentInfo = fulfillmentinfo.GetFulfillmentInfo( orderId,  draft,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.FulfillmentInfoResource.SetFulFillmentInfo(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo,System.String,System.String,System.String,System.String)">
            <summary>
            Updates one or more properties of fulfillment information for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to set the fulfillment information by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="fulfillmentInfo">Array list of fulfillment information associated with an order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.FulfillmentInfo"/>
            </returns>
            <example>
            <code>
              var fulfillmentinfo = new FulfillmentInfo();
              var fulfillmentInfo = fulfillmentinfo.SetFulFillmentInfo( fulfillmentInfo,  orderId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.OrderAttributeResource">
            <summary>
            Use the Order Attributes resource to define how an order attribute definition applies to a specific order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.OrderAttributeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderAttributeResource.GetOrderAttributes(System.String)">
            <summary>
            Retrieves a list of the attributes defined for the order specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order for which to retrieve a list of defined attributes.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}
            </returns>
            <example>
            <code>
              var orderattribute = new OrderAttribute();
              var orderAttribute = orderattribute.GetOrderAttributes( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderAttributeResource.CreateOrderAttributes(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute},System.String)">
            <summary>
            Applies a list of attributes to the order specified in the request and defines a value for each attribute in the request body.
            </summary>
            <param name="orderId">Unique identifier of the order for which to assign the attributes.</param>
            <param name="orderAttributes">The list of attributes to associate with the order, and the properties of each attribute to define for the order.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}
            </returns>
            <example>
            <code>
              var orderattribute = new OrderAttribute();
              var orderAttribute = orderattribute.CreateOrderAttributes( orderAttributes,  orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderAttributeResource.UpdateOrderAttributes(System.Collections.Generic.List{Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute},System.String,System.Nullable{System.Boolean})">
            <summary>
            Updates one or more properties of an attribute defined for the order specified in the request.
            </summary>
            <param name="orderId">Identifier of the order for which to update attributes.</param>
            <param name="removeMissing">If true, the operation removes missing properties so that the updated order attributes will not show properties with a null value.</param>
            <param name="orderAttributes">List of order attributes to update, including the properties of each defined attribute in the list.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}
            </returns>
            <example>
            <code>
              var orderattribute = new OrderAttribute();
              var orderAttribute = orderattribute.UpdateOrderAttributes( orderAttributes,  orderId,  removeMissing);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.OrderItemResource">
            <summary>
            Use this subresource to retrieve details about items in an active order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.OrderItemResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.GetOrderItem(System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of a single order item.
            </summary>
            <param name="draft">If true, retrieve the draft version of this order item, which might include uncommitted changes to the order item, the order, or other order components.</param>
            <param name="orderId">Unique identifier of the order item to retrieve.</param>
            <param name="orderItemId">Unique identifier of the order item details to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var orderItem = orderitem.GetOrderItem( orderId,  orderItemId,  draft,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.GetOrderItems(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Retrieves the details of all items in an order.
            </summary>
            <param name="draft">If true, retrieve the draft version of the order's items, which might include uncommitted changes to one or more order items, the order itself, or other order components.</param>
            <param name="orderId">Unique identifier of the order items to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItemCollection"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var orderItemCollection = orderitem.GetOrderItems( orderId,  draft,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.CreateOrderItem(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Adds a new item to a defined order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to add the item.</param>
            <param name="responseFields"></param>
            <param name="skipInventoryCheck">If true, do not validate the product inventory when adding this item to the order.</param>
            <param name="updateMode">Specifies whether to add the item by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="orderItem">The properties of the item to create in the existing order.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.CreateOrderItem( orderItem,  orderId,  updateMode,  version,  skipInventoryCheck,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.UpdateOrderItemDiscount(Mozu.Api.Contracts.CommerceRuntime.Discounts.AppliedDiscount,System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Update the discount applied to an item in an order.
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order associated with the item discount.</param>
            <param name="orderItemId">Unique identifier of the item in the order.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to change the item discount by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="discount">Properties of the discount to modify for the order item.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.UpdateOrderItemDiscount( discount,  orderId,  orderItemId,  discountId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.UpdateItemFulfillment(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderItem,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Updates the item fulfillment information for the order specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item in the order.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to apply the coupon by updating the original order, updating the order in draft mode, or updating the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <param name="orderItem">Properties of the order item to update for fulfillment.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.UpdateItemFulfillment( orderItem,  orderId,  orderItemId,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.UpdateItemProductPrice(System.String,System.String,System.Decimal,System.String,System.String,System.String)">
            <summary>
            Override the price of an individual product on a line item in the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order containing the item to price override.</param>
            <param name="orderItemId">Unique identifier of the item in the order to price override.</param>
            <param name="price">The override price to specify for this item in the specified order.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to change the product price by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.UpdateItemProductPrice( orderId,  orderItemId,  price,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.UpdateItemQuantity(System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Update the quantity of an item in an order.
            </summary>
            <param name="orderId">Unique identifier of the order containing the item to update quantity.</param>
            <param name="orderItemId">Unique identifier of the item in the order to update quantity.</param>
            <param name="quantity">The quantity of the item in the order to update.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to change the item quantity by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.UpdateItemQuantity( orderId,  orderItemId,  quantity,  updateMode,  version,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderItemResource.DeleteOrderItem(System.String,System.String,System.String,System.String)">
            <summary>
            Removes a previously added item from a defined order.
            </summary>
            <param name="orderId">Unique identifier of the order with the item to remove.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="updateMode">Specifies whether to remove the item by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var orderitem = new OrderItem();
              var order = orderitem.DeleteOrderItem( orderId,  orderItemId,  updateMode,  version);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource">
            <summary>
            Use the Order Notes subresource to manage merchant-level notes associated with an active order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource.GetOrderNotes(System.String)">
            <summary>
            Retrieves a list of all notes for an order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>}
            </returns>
            <example>
            <code>
              var ordernote = new OrderNote();
              var orderNote = ordernote.GetOrderNotes( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource.GetOrderNote(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a specific order note.
            </summary>
            <param name="noteId">Unique identifier of the order note to retrieve.</param>
            <param name="orderId">Unique identifier of the order associated with the note.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>
            </returns>
            <example>
            <code>
              var ordernote = new OrderNote();
              var orderNote = ordernote.GetOrderNote( orderId,  noteId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource.CreateOrderNote(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote,System.String,System.String)">
            <summary>
            Creates a new merchant note for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order for which to add a note.</param>
            <param name="responseFields"></param>
            <param name="orderNote">The alphanumeric text contained in the note. The maximum length is 256 characters.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>
            </returns>
            <example>
            <code>
              var ordernote = new OrderNote();
              var orderNote = ordernote.CreateOrderNote( orderNote,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource.UpdateOrderNote(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote,System.String,System.String,System.String)">
            <summary>
            Updates a specific note for an order.
            </summary>
            <param name="noteId">Unique identifier of the order note.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <param name="orderNote">The content of the order note. The maximum length is 256 characters.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderNote"/>
            </returns>
            <example>
            <code>
              var ordernote = new OrderNote();
              var orderNote = ordernote.UpdateOrderNote( orderNote,  orderId,  noteId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderNoteResource.DeleteOrderNote(System.String,System.String)">
            <summary>
            Deletes the specified order note.
            </summary>
            <param name="noteId">Unique identifier of the order note to delete.</param>
            <param name="orderId">Unique identifier of the order associated with the note.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var ordernote = new OrderNote();
              ordernote.DeleteOrderNote( orderId,  noteId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.OrderValidationResultResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.OrderValidationResultResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderValidationResultResource.GetValidationResults(System.String)">
            <summary>
            
            </summary>
            <param name="orderId"></param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult"/>}
            </returns>
            <example>
            <code>
              var ordervalidationresult = new OrderValidationResult();
              var orderValidationResult = ordervalidationresult.GetValidationResults( orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.OrderValidationResultResource.AddValidationResult(Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="orderId"></param>
            <param name="responseFields"></param>
            <param name="validationResult"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.OrderValidationResult"/>
            </returns>
            <example>
            <code>
              var ordervalidationresult = new OrderValidationResult();
              var orderValidationResult = ordervalidationresult.AddValidationResult( validationResult,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.PackageResource">
            <summary>
            Use the Packages subresource to manage the physical packages to ship for an order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.PackageResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.GetAvailablePackageFulfillmentActions(System.String,System.String)">
            <summary>
            Retrieves a list of the actions available to perform for a package associated with order fulfillment.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package fulfillment.</param>
            <param name="packageId">Unique identifier of the package associated with the fulfillment actions to retrieve.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var package = new Package();
              var string = package.GetAvailablePackageFulfillmentActions( orderId,  packageId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.GetPackageLabel(System.String,System.String)">
            <summary>
            Retrieves the package label image supplied by the carrier.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package label to retrieve.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <returns>
            <see cref="T:System.IO.Stream"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var stream = package.GetPackageLabel( orderId,  packageId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.GetPackage(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package to retrieve.</param>
            <param name="packageId">Unique identifier of the package to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = package.GetPackage( orderId,  packageId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.CreatePackage(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package,System.String,System.String)">
            <summary>
            Creates a new physical package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order associated with this package.</param>
            <param name="responseFields"></param>
            <param name="package">Properties of the physical package of order items.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = package.CreatePackage( pkg,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.UpdatePackage(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package,System.String,System.String,System.String)">
            <summary>
            Updates one or more properties of a physical package of order items.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package to update.</param>
            <param name="packageId">Unique identifier of the package of order items to update.</param>
            <param name="responseFields"></param>
            <param name="package">Wrapper of properties for the package of order items to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = package.UpdatePackage( pkg,  orderId,  packageId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PackageResource.DeletePackage(System.String,System.String)">
            <summary>
            Removes a physical package of items from the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package to delete.</param>
            <param name="packageId">Unique identifier of the package to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var package = new Package();
              package.DeletePackage( orderId,  packageId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.PaymentResource">
            <summary>
            Use the Payments subresource to manage payment transactions for orders. Each transaction performed for an order represents an individual payment. For example, if an order totals $75.00 but the shopper has a $50.00 gift certificate, both the gift certificate transaction and the credit card transaction for the remaining $25.00 are recorded as payments for the order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.PaymentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PaymentResource.GetPayments(System.String,System.String)">
            <summary>
            Retrieves information about all payment transactions submitted for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection"/>
            </returns>
            <example>
            <code>
              var payment = new Payment();
              var paymentCollection = payment.GetPayments( orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PaymentResource.GetAvailablePaymentActions(System.String,System.String)">
            <summary>
            Retrieves the list of all available payment actions dependent on the order payment status by specifying the order ID.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the payment.</param>
            <param name="paymentId">Unique identifer of the payment for which to retrieve available actions.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var payment = new Payment();
              var string = payment.GetAvailablePaymentActions( orderId,  paymentId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PaymentResource.GetPayment(System.String,System.String,System.String)">
            <summary>
            Retrieves information about a specific payment transaction submitted for the specified order.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the payment transaction.</param>
            <param name="paymentId">Unique identifier of the payment transaction submitted for the order.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment"/>
            </returns>
            <example>
            <code>
              var payment = new Payment();
              var payment = payment.GetPayment( orderId,  paymentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PaymentResource.PerformPaymentAction(Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction,System.String,System.String,System.String)">
            <summary>
            Performs the specified action for an individual order payment transaction.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the payment.</param>
            <param name="paymentId">Unique identifer of the payment for which to perform the action.</param>
            <param name="responseFields"></param>
            <param name="action">The action to perform for the payment. Possible values are AuthAndCapture, AuthorizePayment, CapturePayment, VoidPayment, CreditPayment, RequestCheck, ApplyCheck, DeclineCheck.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var payment = new Payment();
              var order = payment.PerformPaymentAction( action,  orderId,  paymentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PaymentResource.CreatePaymentAction(Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction,System.String,System.String)">
            <summary>
            Creates a new payment transaction for the specified order and performs the specified action.
            </summary>
            <param name="orderId">Unique identifier of the order for which to apply the payment.</param>
            <param name="responseFields"></param>
            <param name="action">To action to perform for the newly created payment. Possible values are AuthAndCapture, AuthorizePayment, CapturePayment, VoidPayment, CreditPayment, RequestCheck, ApplyCheck, DeclineCheck.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Orders.Order"/>
            </returns>
            <example>
            <code>
              var payment = new Payment();
              var order = payment.CreatePaymentAction( action,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.PickupResource">
            <summary>
            Use the Pickups resource to organize items submitted in an order into pickups that enable the shopper to fulfill the order items using the in-store pickup method.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.PickupResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PickupResource.GetAvailablePickupFulfillmentActions(System.String,System.String)">
            <summary>
            Retrieves a list of the actions available to perform for the pickup specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the pickup.</param>
            <param name="pickupId">Unique identifier of the pickup for which to retrieve available actions.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var pickup = new Pickup();
              var string = pickup.GetAvailablePickupFulfillmentActions( orderId,  pickupId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PickupResource.GetPickup(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of the in-store pickup specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the pickup.</param>
            <param name="pickupId">Unique identifier of the pickup to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup"/>
            </returns>
            <example>
            <code>
              var pickup = new Pickup();
              var pickup = pickup.GetPickup( orderId,  pickupId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PickupResource.CreatePickup(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup,System.String,System.String)">
            <summary>
            Create a new pickup for the order specified in the request for in-store fufillment.
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <param name="pickup">Properties of the in-store pickup to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup"/>
            </returns>
            <example>
            <code>
              var pickup = new Pickup();
              var pickup = pickup.CreatePickup( pickup,  orderId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PickupResource.UpdatePickup(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup,System.String,System.String,System.String)">
            <summary>
            Updates one or more details of a defined in-store pickup.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the in-store pickup.</param>
            <param name="pickupId">Unique identifier of the pickup to update.</param>
            <param name="responseFields"></param>
            <param name="pickup">Properties of the in-store pickup to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup"/>
            </returns>
            <example>
            <code>
              var pickup = new Pickup();
              var pickup = pickup.UpdatePickup( pickup,  orderId,  pickupId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.PickupResource.DeletePickup(System.String,System.String)">
            <summary>
            Removes a pickup previously defined for order item in-store pickup fulfillment.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the pickup.</param>
            <param name="pickupId">Unique identifier of the pickup to remove.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var pickup = new Pickup();
              pickup.DeletePickup( orderId,  pickupId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Orders.ShipmentResource">
            <summary>
            Use the shipments resource to manage shipments of collections of packages for an order.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Orders.ShipmentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShipmentResource.GetShipment(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of the order shipment specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipment to retrieve.</param>
            <param name="responseFields"></param>
            <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment"/>
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var shipment = shipment.GetShipment( orderId,  shipmentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShipmentResource.GetAvailableShipmentMethods(System.String,System.Nullable{System.Boolean})">
            <summary>
            Retrieves the available shipping methods applicable to the order. Typically used to display available shipping method options on the checkout page.
            </summary>
            <param name="draft"></param>
            <param name="orderId">Unique identifier of the order for the available shipment methods being retrieved.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.ShippingRate"/>}
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var shippingRate = shipment.GetAvailableShipmentMethods( orderId,  draft);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShipmentResource.CreatePackageShipments(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Creates a shipment from one or more package associated with an order and assign a label and tracking number to an order shipment.
            </summary>
            <param name="orderId">Unique identifier of the order for this shipment.</param>
            <param name="packageIds">List of unique identifiers for each package associated with this shipment. Not all packages must belong to the same shipment.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var package = shipment.CreatePackageShipments( packageIds,  orderId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Orders.ShipmentResource.DeleteShipment(System.String,System.String)">
            <summary>
            Deletes the shipment specified in the request.
            </summary>
            <param name="orderId">Unique identifier of the order to cancel shipment.</param>
            <param name="shipmentId">Unique identifier of the shipment to cancel.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              shipment.DeleteShipment( orderId,  shipmentId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.ReturnResource">
            <summary>
            Use the Returns resource to manage returned items that were previously fufilled. Returns can include any number of items associated with an original Mozu order. Each return must either be associated with an original order or a product definition to represent each returned item.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.ReturnResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetReturns(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of all returns according to any filter and sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var returnCollection = return.GetReturns( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetAvailableReturnActions(System.String)">
            <summary>
            Retrieves a list of the actions available to perform for the specified return based on its current state.
            </summary>
            <param name="returnId">Unique identifier of the return for which to retrieve available actions.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var return = new Return();
              var string = return.GetAvailableReturnActions( returnId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetReturnItem(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="returnId"></param>
            <param name="returnItemId"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var returnItem = return.GetReturnItem( returnId,  returnItemId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetReturnItems(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="returnId"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItemCollection"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var returnItemCollection = return.GetReturnItems( returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetAvailablePaymentActionsForReturn(System.String,System.String)">
            <summary>
            Retrieves a list of the payment actions available to perform for the specified return when a return results in a refund to the customer.
            </summary>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="returnId">Unique identifier of the return associated with the payment.</param>
            <returns>
            List{string}
            </returns>
            <example>
            <code>
              var return = new Return();
              var string = return.GetAvailablePaymentActionsForReturn( returnId,  paymentId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetPayment(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a payment submitted as part of a refund associated with a customer return.
            </summary>
            <param name="paymentId">Unique identifier of the return payment to retrieve.</param>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return associated with the payment.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.Payment"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var payment = return.GetPayment( returnId,  paymentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetPayments(System.String,System.String)">
            <summary>
            Retrieves a list of all payments submitted as part of a refund associated with a customer return.
            </summary>
            <param name="responseFields"></param>
            <param name="returnId">Returns the details of the refund payment associated with the return specified in the request.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentCollection"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var paymentCollection = return.GetPayments( returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.GetReturn(System.String,System.String)">
            <summary>
            Retrieves a list of properties for the specified return.
            </summary>
            <param name="responseFields"></param>
            <param name="returnId">Returns the properties of the return specified in the request as well as system-supplied information.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = return.GetReturn( returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.CreateReturn(Mozu.Api.Contracts.CommerceRuntime.Returns.Return,System.String)">
            <summary>
            Creates a return for previously fulfilled items. Each return must either be associated with an original order or a product definition to represent each returned item.
            </summary>
            <param name="responseFields"></param>
            <param name="ret">Wrapper for the properties of the return to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = return.CreateReturn( ret,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.CreateReturnItem(Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnItem,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="returnId"></param>
            <param name="returnItem"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = return.CreateReturnItem( returnItem,  returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.PerformPaymentActionForReturn(Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction,System.String,System.String,System.String)">
            <summary>
            Updates a refund payment associated with a customer return by performing the specified action.
            </summary>
            <param name="paymentId">Unique identifier of the return payment to update.</param>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return associated with the refund payment.</param>
            <param name="action">The payment action to perform for the refund payment.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = return.PerformPaymentActionForReturn( action,  returnId,  paymentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.CreatePaymentActionForReturn(Mozu.Api.Contracts.CommerceRuntime.Payments.PaymentAction,System.String,System.String)">
            <summary>
            Creates a new payment for a return that results in a refund to the customer.
            </summary>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return associated with the payment action.</param>
            <param name="action">The payment action to perform for the customer return.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = return.CreatePaymentActionForReturn( action,  returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.PerformReturnActions(Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnAction,System.String)">
            <summary>
            Updates the return by performing the action specified in the request.
            </summary>
            <param name="responseFields"></param>
            <param name="action">The name of the return action to perform, such as "Reject" or "Authorize".</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.ReturnCollection"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var returnCollection = return.PerformReturnActions( action,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.UpdateReturn(Mozu.Api.Contracts.CommerceRuntime.Returns.Return,System.String,System.String)">
            <summary>
            Updates one or more properties of a return for items previously shipped in a completed order.
            </summary>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return.</param>
            <param name="ret">Wrapper for the array of properties to update for the return.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = return.UpdateReturn( ret,  returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.DeleteOrderItem(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="returnId"></param>
            <param name="returnItemId"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Returns.Return"/>
            </returns>
            <example>
            <code>
              var return = new Return();
              var return = return.DeleteOrderItem( returnId,  returnItemId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.ReturnResource.DeleteReturn(System.String)">
            <summary>
            Deletes the return specified in the request.
            </summary>
            <param name="returnId">Unique identifier of the return to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var return = new Return();
              return.DeleteReturn( returnId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Returns.PackageResource">
            <summary>
            Use the Return Packages subresource to manage physical packages used to ship return replacement items.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Returns.PackageResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.PackageResource.GetPackageLabel(System.String,System.String)">
            <summary>
            Retrieves the package label image supplied by the carrier for a return replacement.
            </summary>
            <param name="packageId">Unique identifier of the return replacement package for which to retrieve the label.</param>
            <param name="returnId">Unique identifier of the return associated with the replacement package label to retrieve.</param>
            <returns>
            <see cref="T:System.IO.Stream"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var stream = package.GetPackageLabel( returnId,  packageId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.PackageResource.GetPackage(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of a package of return replacement items.
            </summary>
            <param name="packageId">Unique identifier of the return replacement package to retrieve.</param>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return associated with the replacement package to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = package.GetPackage( returnId,  packageId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.PackageResource.CreatePackage(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package,System.String,System.String)">
            <summary>
            Creates a new physical package of return replacement items.
            </summary>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return for which to create a replacement package.</param>
            <param name="package">Properties of the physical package for a return replacement.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = package.CreatePackage( pkg,  returnId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.PackageResource.UpdatePackage(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package,System.String,System.String,System.String)">
            <summary>
            Updates one or more properties of a package associated with a return replacement.
            </summary>
            <param name="packageId">Unique identifier of the return replacement package to update.</param>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return associated with the replacement package to update.</param>
            <param name="package">Properties of the return replacement package to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
            </returns>
            <example>
            <code>
              var package = new Package();
              var package = package.UpdatePackage( pkg,  returnId,  packageId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.PackageResource.DeletePackage(System.String,System.String)">
            <summary>
            Deletes a package associated with a return replacement.
            </summary>
            <param name="packageId">Unique identifier of the return replacement package to delete.</param>
            <param name="returnId">Unique identifier of the return associated with the replacement package to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var package = new Package();
              package.DeletePackage( returnId,  packageId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Returns.ShipmentResource">
            <summary>
            Use the Return Shipments subresource to manage shipments for a return replacement.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Returns.ShipmentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.ShipmentResource.GetShipment(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of the specified return replacement shipment.
            </summary>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return associated with the replacement shipment to retrieve.</param>
            <param name="shipmentId">Unique identifier of the return replacement shipment to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Shipment"/>
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var shipment = shipment.GetShipment( returnId,  shipmentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.ShipmentResource.CreatePackageShipments(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Creates a shipment from one or more packages associated with a return replacement.
            </summary>
            <param name="returnId">Unique identifier of the return for which to create replacement package shipments.</param>
            <param name="packageIds">List of packages in the return replacement shipment.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>}
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              var package = shipment.CreatePackageShipments( packageIds,  returnId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Returns.ShipmentResource.DeleteShipment(System.String,System.String)">
            <summary>
            Deletes a shipment for a return replacement.
            </summary>
            <param name="returnId">Unique identifier of the return associated with the replacement shipment to delete.</param>
            <param name="shipmentId">Unique identifier of the return replacement shipment to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var shipment = new Shipment();
              shipment.DeleteShipment( returnId,  shipmentId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.ApplicationResource">
            <summary>
            Use the Applications resource to update site-specific settings for installed applications.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.ApplicationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.ApplicationResource.ThirdPartyGetApplication(System.String)">
            <summary>
            Retrieve the settings of a third-party application.
            </summary>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Application.Application"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var application = application.ThirdPartyGetApplication( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.ApplicationResource.ThirdPartyUpdateApplication(Mozu.Api.Contracts.SiteSettings.Application.Application,System.String)">
            <summary>
            Initializes an application with the necessary configured settings.
            </summary>
            <param name="responseFields"></param>
            <param name="application">Properties of the application to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Application.Application"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var application = application.ThirdPartyUpdateApplication( application,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.Checkout.CustomerCheckoutSettingsResource">
            <summary>
            Use the Customer Checkout Settings resource to define login settings that apply when shoppers proceed to checkout.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.Checkout.CustomerCheckoutSettingsResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Checkout.CustomerCheckoutSettingsResource.GetCustomerCheckoutSettings(System.String)">
            <summary>
            Retrieves all checkout settings defined for the site: Payment settings, such as the payment gateway ID and credentials, supported credit cards, and more; Customer Checkout settings, such as whether login is required, and any custom attributes; and Order Processing settings, such as when payment is authorized and captured, and any custom attributes.
            </summary>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings"/>
            </returns>
            <example>
            <code>
              var customercheckoutsettings = new CustomerCheckoutSettings();
              var customerCheckoutSettings = customercheckoutsettings.GetCustomerCheckoutSettings( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Checkout.CustomerCheckoutSettingsResource.UpdateCustomerCheckoutSettings(Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings,System.String)">
            <summary>
            Modifies existing site checkout settings. Modify Payment, Customer Checkout, and Order Processing settings in one PUT.
            </summary>
            <param name="responseFields"></param>
            <param name="customerCheckoutSettings">All the properties to update in the checkout settings.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CustomerCheckoutSettings"/>
            </returns>
            <example>
            <code>
              var customercheckoutsettings = new CustomerCheckoutSettings();
              var customerCheckoutSettings = customercheckoutsettings.UpdateCustomerCheckoutSettings( customerCheckoutSettings,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.Checkout.PaymentSettingsResource">
            <summary>
            Use the Payment Settings resource to specify settings when creating payments for order checkout on the site.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.Checkout.PaymentSettingsResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Checkout.PaymentSettingsResource.GetThirdPartyPaymentWorkflows">
            <summary>
            Retrieves the details of the third-party payment service workflows configured for the site.
            </summary>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.SiteSettings.Order.ExternalPaymentWorkflowDefinition"/>}
            </returns>
            <example>
            <code>
              var paymentsettings = new PaymentSettings();
              var externalPaymentWorkflowDefinition = paymentsettings.GetThirdPartyPaymentWorkflows();
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.CheckoutSettingsResource">
            <summary>
            Use the Checkout Settings resource to specify the site-wide settings that define checkout and order processing behavior. This resource includes subresources for payment settings, customer checkout settings, and order processing settings.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.CheckoutSettingsResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.CheckoutSettingsResource.GetCheckoutSettings(System.String)">
            <summary>
            Retrieves all checkout settings defined for the site including payment settings (payment gateway ID and credentials), shopper checkout settings (login requirement or guest mode and custom attributes), and order processing settings (when payment is authorized and captured plus any custom attributes).
            </summary>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Order.CheckoutSettings"/>
            </returns>
            <example>
            <code>
              var checkoutsettings = new CheckoutSettings();
              var checkoutSettings = checkoutsettings.GetCheckoutSettings( responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.General.TaxableTerritoryResource">
            <summary>
            Use the taxable territories subresource to manage the regional territories for this site that are subejct to sales tax.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.General.TaxableTerritoryResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.General.TaxableTerritoryResource.GetTaxableTerritories">
            <summary>
            Retrieves a list of the taxable territories configured for the site.
            </summary>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>}
            </returns>
            <example>
            <code>
              var taxableterritory = new TaxableTerritory();
              var taxableTerritory = taxableterritory.GetTaxableTerritories();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.General.TaxableTerritoryResource.AddTaxableTerritory(Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory,System.String)">
            <summary>
            Creates a new territory for which to calculate sales tax.
            </summary>
            <param name="responseFields"></param>
            <param name="taxableTerritory">Properties of the taxable territory to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>
            </returns>
            <example>
            <code>
              var taxableterritory = new TaxableTerritory();
              var taxableTerritory = taxableterritory.AddTaxableTerritory( taxableTerritory,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.General.TaxableTerritoryResource.UpdateTaxableTerritories(System.Collections.Generic.List{Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory})">
            <summary>
            Updates one or more taxable territories configured for a site.
            </summary>
            <param name="taxableterritories">Properties of the taxable territories to update.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.SiteSettings.General.TaxableTerritory"/>}
            </returns>
            <example>
            <code>
              var taxableterritory = new TaxableTerritory();
              var taxableTerritory = taxableterritory.UpdateTaxableTerritories( taxableterritories);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.GeneralSettingsResource">
            <summary>
            Define global site settings such as the site name, shipping and email addresses, and logo images. Block undesirable IP addresses using this resource.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.GeneralSettingsResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.GeneralSettingsResource.GetGeneralSettings(System.String)">
            <summary>
            Retrieve a site's general global settings.
            </summary>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings"/>
            </returns>
            <example>
            <code>
              var generalsettings = new GeneralSettings();
              var generalSettings = generalsettings.GetGeneralSettings( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.GeneralSettingsResource.UpdateGeneralSettings(Mozu.Api.Contracts.SiteSettings.General.GeneralSettings,System.String)">
            <summary>
            Updates a site's general global settings.
            </summary>
            <param name="responseFields"></param>
            <param name="generalSettings">The properties of the site's general settings to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.General.GeneralSettings"/>
            </returns>
            <example>
            <code>
              var generalsettings = new GeneralSettings();
              var generalSettings = generalsettings.UpdateGeneralSettings( generalSettings,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.LocationUsageResource">
            <summary>
            Use the Location Usages resource to define the locations and location types that interact with the specified site. The system creates three default location usage types for each site after provisioning a new tenant - one for direct ship (DS), one for in-store pickup (SP), and one for store finder (storeFinder). Each site can only use a single location for the direct ship location usage type, and the location must support the direct ship fulfillment type (DS). For the in-store pickup location usage type, each site can use one or more location types. The location service identifies all locations of the specified type that support the in-store pickup fulfillment type (SP). For the store finder location usage type, each site can use one or more location types. The location service identifies all locations of the type. Locations configured for the store finder type do not typically maintain inventory. You cannot create additional location usage types at this time.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.LocationUsageResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.LocationUsageResource.GetLocationUsages">
            <summary>
            Retrieves the configured site location usages for the location usage code specified in the request.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationUsageCollection"/>
            </returns>
            <example>
            <code>
              var locationusage = new LocationUsage();
              var locationUsageCollection = locationusage.GetLocationUsages();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.LocationUsageResource.GetLocationUsage(System.String)">
            <summary>
            Retrieves the location usages for the site specified in the request header.
            </summary>
            <param name="code">Code that identifies the location usage type, which is "DS" for direct ship, "SP" for in-store pickup, or "storeFinder" for store finder.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationUsage"/>
            </returns>
            <example>
            <code>
              var locationusage = new LocationUsage();
              var locationUsage = locationusage.GetLocationUsage( code);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.LocationUsageResource.UpdateLocationUsage(Mozu.Api.Contracts.Location.LocationUsage,System.String)">
            <summary>
            Updates the location usage for the site based on the location usage code specified in the request.
            </summary>
            <param name="code">Code that identifies the location usage type, which is "DS" for direct ship, "SP" for in-store pickup, or "storeFinder" for store finder.</param>
            <param name="usage">Properties of the location usage type to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Location.LocationUsage"/>
            </returns>
            <example>
            <code>
              var locationusage = new LocationUsage();
              var locationUsage = locationusage.UpdateLocationUsage( usage,  code);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingHandlingFeeResource">
            <summary>
            Use the Order Handling Fee subresource to configure any shipping and handling fees to apply to orders for this site.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingHandlingFeeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingHandlingFeeResource.GetOrderHandlingFee(System.String)">
            <summary>
            Retrieves the details of the order handling fee configured for the site.
            </summary>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>
            </returns>
            <example>
            <code>
              var siteshippinghandlingfee = new SiteShippingHandlingFee();
              var siteShippingHandlingFee = siteshippinghandlingfee.GetOrderHandlingFee( responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingHandlingFeeResource.CreateOrderHandlingFee(Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee,System.String)">
            <summary>
            Creates a new order handling fee for the site.
            </summary>
            <param name="responseFields"></param>
            <param name="orderHandlingFee">Properties of the order handling fee to assess for order shipment.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>
            </returns>
            <example>
            <code>
              var siteshippinghandlingfee = new SiteShippingHandlingFee();
              var siteShippingHandlingFee = siteshippinghandlingfee.CreateOrderHandlingFee( orderHandlingFee,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.Shipping.SiteShippingHandlingFeeResource.UpdateOrderHandlingFee(Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee,System.String)">
            <summary>
            Updates the order handling fee amount for the site.
            </summary>
            <param name="responseFields"></param>
            <param name="orderHandlingFee">The combined price for all items in the order, including all selected options but excluding any discounts.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingHandlingFee"/>
            </returns>
            <example>
            <code>
              var siteshippinghandlingfee = new SiteShippingHandlingFee();
              var siteShippingHandlingFee = siteshippinghandlingfee.UpdateOrderHandlingFee( orderHandlingFee,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Settings.SiteShippingSettingsResource">
            <summary>
            Use the shipping subresource to manage settings for the site shipping information, such as origin address information, carrier shipping methods, shipping rate providers, and regions available for shipping.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Settings.SiteShippingSettingsResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Settings.SiteShippingSettingsResource.GetSiteShippingSettings(System.String)">
            <summary>
            Retrieves a list of the shipping settings configured for a site.
            </summary>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.SiteSettings.Shipping.SiteShippingSettings"/>
            </returns>
            <example>
            <code>
              var siteshippingsettings = new SiteShippingSettings();
              var siteShippingSettings = siteshippingsettings.GetSiteShippingSettings( responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.WishlistResource">
            <summary>
            Use the Wish Lists resource to manage the shopper wish lists of products associated with a customer account. Although customer accounts are managed at the tenant level, the system stores shopper wish lists at the site level. This enables the same customer to have wish lists for each of a merchant's sites. Use the Wish List Items resource to manage items in a wish list.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.WishlistResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.WishlistResource.GetWishlists(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a list of shopper wish lists according to any filter and sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of search terms to use in the query when searching across wish list name. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistCollection"/>
            </returns>
            <example>
            <code>
              var wishlist = new Wishlist();
              var wishlistCollection = wishlist.GetWishlists( startIndex,  pageSize,  sortBy,  filter,  q,  qLimit,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.WishlistResource.GetWishlist(System.String,System.String)">
            <summary>
            Retrieves the details of the shopper wish list specified in the request.
            </summary>
            <param name="responseFields"></param>
            <param name="wishlistId">Unique identifier of the shopper wish list to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>
            </returns>
            <example>
            <code>
              var wishlist = new Wishlist();
              var wishlist = wishlist.GetWishlist( wishlistId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.WishlistResource.GetWishlistByName(System.Int32,System.String,System.String)">
            <summary>
            Retrieves the details of a wish list by supplying the wish list name.
            </summary>
            <param name="customerAccountId">The unique identifier of the customer account for which to retrieve wish lists.</param>
            <param name="responseFields"></param>
            <param name="wishlistName">The name of the wish list to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>
            </returns>
            <example>
            <code>
              var wishlist = new Wishlist();
              var wishlist = wishlist.GetWishlistByName( customerAccountId,  wishlistName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.WishlistResource.CreateWishlist(Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist,System.String)">
            <summary>
            Creates a new shopper wish list for the associated customer account. Although customer accounts are maintained at the tenant level, the system stores wish lists at the site level. Newly created wish lists do not have any items.
            </summary>
            <param name="responseFields"></param>
            <param name="wishlist">Properties of the wish list to create.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>
            </returns>
            <example>
            <code>
              var wishlist = new Wishlist();
              var wishlist = wishlist.CreateWishlist( wishlist,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.WishlistResource.UpdateWishlist(Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist,System.String,System.String)">
            <summary>
            Updates one or more properties of a shopper wish list defined for a customer account.
            </summary>
            <param name="responseFields"></param>
            <param name="wishlistId">Unique identifier of the shopper wish list to update.</param>
            <param name="wishlist">Properties of the shopper wish list to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>
            </returns>
            <example>
            <code>
              var wishlist = new Wishlist();
              var wishlist = wishlist.UpdateWishlist( wishlist,  wishlistId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.WishlistResource.DeleteWishlist(System.String)">
            <summary>
            Deletes the shopper wish list specified in the request and all items associated with it.
            </summary>
            <param name="wishlistId">Unique identifier of the wish list to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var wishlist = new Wishlist();
              wishlist.DeleteWishlist( wishlistId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource">
            <summary>
            Use the Wish List Items subresource to manage items in a shopper wish list. The same product can be defined as an item in any number of wish lists for the customer account. Use the Wish Lists resource to manage shopper wish lists.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.GetWishlistItem(System.String,System.String,System.String)">
            <summary>
            Retrieves the details of an item in a shopper wish list.
            </summary>
            <param name="responseFields"></param>
            <param name="wishlistId">Unique identifier of the wish list item to retrieve.</param>
            <param name="wishlistItemId">Unique identifier of the wish list associated with the item to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlistItem = wishlistitem.GetWishlistItem( wishlistId,  wishlistItemId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.GetWishlistItems(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of items in a shopper wish list according to any specified filter and sort criteria.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="wishlistId">Unique identifier of the wish list associated with the items to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlistItemCollection = wishlistitem.GetWishlistItems( wishlistId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.GetWishlistItemsByWishlistName(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieve a list of items in a customer wish list by supplying the wish list name.
            </summary>
            <param name="customerAccountId">The unique identifier of the customer account associated with the wish list.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="wishlistName">The name of the wish list that contains the items to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItemCollection"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlistItemCollection = wishlistitem.GetWishlistItemsByWishlistName( customerAccountId,  wishlistName,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.AddItemToWishlist(Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem,System.String,System.String)">
            <summary>
            Adds a product in a site's catalog as an item in a shopper wish list.
            </summary>
            <param name="responseFields"></param>
            <param name="wishlistId">Unique identifier of the wish list associated with the item to add.</param>
            <param name="wishlistItem">Properties of the item to add to the wish list.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlistItem = wishlistitem.AddItemToWishlist( wishlistItem,  wishlistId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.UpdateWishlistItemQuantity(System.String,System.String,System.Int32,System.String)">
            <summary>
            Updates the quantity of an item in a shopper wish list.
            </summary>
            <param name="quantity">The quantity of the item in the wish list.</param>
            <param name="responseFields"></param>
            <param name="wishlistId">Unique identifier of the wish list associated with the item quantity to update.</param>
            <param name="wishlistItemId">Unique identifier of the item in the wish list to update quantity.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlistItem = wishlistitem.UpdateWishlistItemQuantity( wishlistId,  wishlistItemId,  quantity,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.UpdateWishlistItem(Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem,System.String,System.String,System.String)">
            <summary>
            Updates the details of an item in a shopper wish list.
            </summary>
            <param name="responseFields"></param>
            <param name="wishlistId">Unique identifier of the wish list associated with the item to update.</param>
            <param name="wishlistItemId">Unique identifier of the item in the shopper wish list to update.</param>
            <param name="wishlistItem">Properties of the shopper wish list item to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.WishlistItem"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlistItem = wishlistitem.UpdateWishlistItem( wishlistItem,  wishlistId,  wishlistItemId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.RemoveAllWishlistItems(System.String)">
            <summary>
            Removes all items associated with a shopper wish list.
            </summary>
            <param name="wishlistId">Unique identifier of the wish list associated with the items to remove.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.CommerceRuntime.Wishlists.Wishlist"/>
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              var wishlist = wishlistitem.RemoveAllWishlistItems( wishlistId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Commerce.Wishlists.WishlistItemResource.DeleteWishlistItem(System.String,System.String)">
            <summary>
            Removes an item from the wish list specified in the request.
            </summary>
            <param name="wishlistId">Unique identifier of the wish list associated with the item to remove.</param>
            <param name="wishlistItemId">Unique identifier of the item to remove from the shopper wish list.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var wishlistitem = new WishlistItem();
              wishlistitem.DeleteWishlistItem( wishlistId,  wishlistItemId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.DocumentDraftSummaryResource">
            <summary>
            Use the document publishing subresource to manage and publish document drafts in the Content service.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.DocumentDraftSummaryResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentDraftSummaryResource.ListDocumentDraftSummaries(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Retrieves a list of the documents currently in draft state, according to any defined filter and sort criteria.
            </summary>
            <param name="documentLists">Lists that contain the document drafts.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentDraftSummaryPagedCollection"/>
            </returns>
            <example>
            <code>
              var documentdraftsummary = new DocumentDraftSummary();
              var documentDraftSummaryPagedCollection = documentdraftsummary.ListDocumentDraftSummaries( pageSize,  startIndex,  documentLists,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentDraftSummaryResource.DeleteDocumentDrafts(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Deletes the drafts of the specified documents. Published documents cannot be deleted.
            </summary>
            <param name="documentLists">List of document lists that contain documents to delete.</param>
            <param name="documentIds">Unique identifiers of the documents to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documentdraftsummary = new DocumentDraftSummary();
              documentdraftsummary.DeleteDocumentDrafts( documentIds,  documentLists);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentDraftSummaryResource.PublishDocuments(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Publish one or more document drafts to live content on the site.
            </summary>
            <param name="documentLists">List of document lists that contain documents to publish.</param>
            <param name="documentIds">List of unique identifiers of the document drafts to publish.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documentdraftsummary = new DocumentDraftSummary();
              documentdraftsummary.PublishDocuments( documentIds,  documentLists);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.DocumentListResource">
            <summary>
            Use the document lists resource to organize your site's documents into a hierarchy. Document lists can contain documents, folders, and complete hierarchies of folders, which contain documents with unique names.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.DocumentListResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListResource.GetDocumentLists(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a collection of document lists.
            </summary>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentListCollection"/>
            </returns>
            <example>
            <code>
              var documentlist = new DocumentList();
              var documentListCollection = documentlist.GetDocumentLists(_dataViewMode,  pageSize,  startIndex,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListResource.GetDocumentList(System.String,System.String)">
            <summary>
            Retrieve the details of a document list by providing the list name.
            </summary>
            <param name="documentListName">The name of the document list.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentList"/>
            </returns>
            <example>
            <code>
              var documentlist = new DocumentList();
              var documentList = documentlist.GetDocumentList(_dataViewMode,  documentListName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListResource.CreateDocumentList(Mozu.Api.Contracts.Content.DocumentList,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="list"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentList"/>
            </returns>
            <example>
            <code>
              var documentlist = new DocumentList();
              var documentList = documentlist.CreateDocumentList(_dataViewMode,  list,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListResource.UpdateDocumentList(Mozu.Api.Contracts.Content.DocumentList,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="documentListName"></param>
            <param name="responseFields"></param>
            <param name="list"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentList"/>
            </returns>
            <example>
            <code>
              var documentlist = new DocumentList();
              var documentList = documentlist.UpdateDocumentList( list,  documentListName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListResource.LegacyR4_UpdateDocumentContent(System.IO.Stream,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="documentId"></param>
            <param name="stream"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documentlist = new DocumentList();
              documentlist.LegacyR4_UpdateDocumentContent( stream,  documentId,  contentType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListResource.DeleteDocumentList(System.String)">
            <summary>
            
            </summary>
            <param name="documentListName"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documentlist = new DocumentList();
              documentlist.DeleteDocumentList( documentListName);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.Documentlists.DocumentResource">
            <summary>
            Use this subresource to manage documents in a document list.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.Documentlists.DocumentResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.GetDocumentContent(System.String,System.String)">
            <summary>
            Retrieve the content associated with a document, such as a product image or PDF specifications file, by supplying the document ID.
            </summary>
            <param name="documentId">Unique identifier of the document.</param>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <returns>
            <see cref="T:System.IO.Stream"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var stream = document.GetDocumentContent(_dataViewMode,  documentListName,  documentId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.GetDocument(System.String,System.String,System.String)">
            <summary>
            Retrieves a document within the specified document list.
            </summary>
            <param name="documentId">Identifier of the document being retrieved.</param>
            <param name="documentListName">The name of the document list associated with the document to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Document"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var document = document.GetDocument(_dataViewMode,  documentListName,  documentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.GetDocuments(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a collection of documents according to any filter and sort criteria.
            </summary>
            <param name="documentListName">The name of the document list.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter a document's search results by any of its properties, including its name or folder path. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=Name+sw+Events"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentCollection"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var documentCollection = document.GetDocuments(_dataViewMode,  documentListName,  filter,  sortBy,  pageSize,  startIndex,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.CreateDocument(Mozu.Api.Contracts.Content.Document,System.String,System.String)">
            <summary>
            Creates a new document in an defined document list.
            </summary>
            <param name="documentListName">The descriptive alphanumeric document list name being created.</param>
            <param name="responseFields"></param>
            <param name="document">The descriptive name of the newly created document.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Document"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var document = document.CreateDocument(_dataViewMode,  document,  documentListName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.UpdateDocumentContent(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Updates the content associated with a document, such as a product image or PDF specifications file, by supplying the document ID.
            </summary>
            <param name="documentId">Unique identifier of the document.</param>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="stream">Input output stream that delivers information.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var document = new Document();
              document.UpdateDocumentContent( stream,  documentListName,  documentId,  contentType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.UpdateDocument(Mozu.Api.Contracts.Content.Document,System.String,System.String,System.String)">
            <summary>
            Updates a document in a document list.
            </summary>
            <param name="documentId">Unique identifier of the document to update.</param>
            <param name="documentListName">Name of the document list associated with the document.</param>
            <param name="responseFields"></param>
            <param name="document">Properties of the document to update.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Document"/>
            </returns>
            <example>
            <code>
              var document = new Document();
              var document = document.UpdateDocument( document,  documentListName,  documentId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.DeleteDocument(System.String,System.String)">
            <summary>
            Deletes a specific document based on the specified document ID.
            </summary>
            <param name="documentId">Identifier of the document being deleted.</param>
            <param name="documentListName">The name of the document list associated with the document list being deleted.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var document = new Document();
              document.DeleteDocument( documentListName,  documentId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentResource.DeleteDocumentContent(System.String,System.String)">
            <summary>
            Deletes the content associated with a document, such as a product image or PDF specification, by supplying the document ID.
            </summary>
            <param name="documentId">Unique identifier of the document.</param>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var document = new Document();
              document.DeleteDocumentContent( documentListName,  documentId);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource">
            <summary>
            Use the document tree subresource to retrieve documents and manage content within the document hierarchy.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource.GetTreeDocumentContent(System.String,System.String)">
            <summary>
            Retrieve the content associated with the document, such as a product image or PDF specifications file.
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <returns>
            <see cref="T:System.IO.Stream"/>
            </returns>
            <example>
            <code>
              var documenttree = new DocumentTree();
              var stream = documenttree.GetTreeDocumentContent(_dataViewMode,  documentListName,  documentName);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource.GetTreeDocument(System.String,System.String,System.String)">
            <summary>
            Retrieves a document based on its document list and folder path in the document hierarchy.
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.Document"/>
            </returns>
            <example>
            <code>
              var documenttree = new DocumentTree();
              var document = documenttree.GetTreeDocument(_dataViewMode,  documentListName,  documentName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource.UpdateTreeDocumentContent(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Updates the content associated with a document, such as a product image or PDF specifications file, based on the document's position in the document hierarchy.
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <param name="stream">Input output stream that delivers information.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documenttree = new DocumentTree();
              documenttree.UpdateTreeDocumentContent( stream,  documentListName,  documentName,  contentType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.DocumentTreeResource.DeleteTreeDocumentContent(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Deletes the content associated with a document, such as a product image or PDF specifications file.
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <param name="stream">Input output stream that delivers information.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var documenttree = new DocumentTree();
              documenttree.DeleteTreeDocumentContent( stream,  documentListName,  documentName,  contentType);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.Documentlists.FacetResource">
            <summary>
            Use the facets subresource to allow a merchant to add information for product indexing and searching.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.Documentlists.FacetResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.FacetResource.GetFacets(System.String,System.String)">
            <summary>
            Retrieves the properties of facets that aid in indexing and searching.
            </summary>
            <param name="documentListName">The document list associated with the facets to retrieve.</param>
            <param name="propertyName">The property name associated with the facets to retrieve.</param>
            <returns>
            List{<see cref="T:Mozu.Api.Contracts.Content.Facet"/>}
            </returns>
            <example>
            <code>
              var facet = new Facet();
              var facet = facet.GetFacets( documentListName,  propertyName);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.Documentlists.ViewResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.Documentlists.ViewResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.ViewResource.GetViewDocuments(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            
            </summary>
            <param name="documentListName"></param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="viewName"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentCollection"/>
            </returns>
            <example>
            <code>
              var view = new View();
              var documentCollection = view.GetViewDocuments( documentListName,  viewName,  filter,  sortBy,  pageSize,  startIndex,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.ViewResource.GetDocumentListView(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="documentListName"></param>
            <param name="responseFields"></param>
            <param name="viewName"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.View"/>
            </returns>
            <example>
            <code>
              var view = new View();
              var view = view.GetDocumentListView(_dataViewMode,  documentListName,  viewName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.ViewResource.GetDocumentListViews(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="documentListName"></param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.ViewCollection"/>
            </returns>
            <example>
            <code>
              var view = new View();
              var viewCollection = view.GetDocumentListViews(_dataViewMode,  documentListName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.ViewResource.UpdateDocumentListView(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="documentListName"></param>
            <param name="responseFields"></param>
            <param name="viewName"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.View"/>
            </returns>
            <example>
            <code>
              var view = new View();
              var view = view.UpdateDocumentListView( documentListName,  viewName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.Documentlists.ViewResource.DeleteDocumentListView(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="documentListName"></param>
            <param name="viewName"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.View"/>
            </returns>
            <example>
            <code>
              var view = new View();
              var view = view.DeleteDocumentListView( documentListName,  viewName);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.DocumentListTypeResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.DocumentListTypeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListTypeResource.CreateDocumentListType(Mozu.Api.Contracts.Content.DocumentListType,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="list"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentListType"/>
            </returns>
            <example>
            <code>
              var documentlisttype = new DocumentListType();
              var documentListType = documentlisttype.CreateDocumentListType(_dataViewMode,  list,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentListTypeResource.UpdateDocumentListType(Mozu.Api.Contracts.Content.DocumentListType,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="documentListTypeFQN"></param>
            <param name="responseFields"></param>
            <param name="list"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentListType"/>
            </returns>
            <example>
            <code>
              var documentlisttype = new DocumentListType();
              var documentListType = documentlisttype.UpdateDocumentListType( list,  documentListTypeFQN,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.DocumentTypeResource">
            <summary>
            Use the Document Types resource to view the document types supplied by the Content API.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.DocumentTypeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentTypeResource.GetDocumentTypes(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            
            </summary>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentTypeCollection"/>
            </returns>
            <example>
            <code>
              var documenttype = new DocumentType();
              var documentTypeCollection = documenttype.GetDocumentTypes(_dataViewMode,  pageSize,  startIndex,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentTypeResource.GetDocumentType(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="documentTypeName"></param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentType"/>
            </returns>
            <example>
            <code>
              var documenttype = new DocumentType();
              var documentType = documenttype.GetDocumentType(_dataViewMode,  documentTypeName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentTypeResource.CreateDocumentType(Mozu.Api.Contracts.Content.DocumentType,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="documentType"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentType"/>
            </returns>
            <example>
            <code>
              var documenttype = new DocumentType();
              var documentType = documenttype.CreateDocumentType(_dataViewMode,  documentType,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.DocumentTypeResource.UpdateDocumentType(Mozu.Api.Contracts.Content.DocumentType,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="documentTypeName"></param>
            <param name="responseFields"></param>
            <param name="documentType"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.DocumentType"/>
            </returns>
            <example>
            <code>
              var documenttype = new DocumentType();
              var documentType = documenttype.UpdateDocumentType( documentType,  documentTypeName,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Content.PropertyTypeResource">
            <summary>
            Use the property types subresource to manage content properties.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Content.PropertyTypeResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Content.PropertyTypeResource.GetPropertyTypes(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            
            </summary>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.PropertyTypeCollection"/>
            </returns>
            <example>
            <code>
              var propertytype = new PropertyType();
              var propertyTypeCollection = propertytype.GetPropertyTypes(_dataViewMode,  pageSize,  startIndex,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.PropertyTypeResource.GetPropertyType(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="propertyTypeName"></param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.PropertyType"/>
            </returns>
            <example>
            <code>
              var propertytype = new PropertyType();
              var propertyType = propertytype.GetPropertyType(_dataViewMode,  propertyTypeName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.PropertyTypeResource.CreatePropertyType(Mozu.Api.Contracts.Content.PropertyType,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="propertyType"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.PropertyType"/>
            </returns>
            <example>
            <code>
              var propertytype = new PropertyType();
              var propertyType = propertytype.CreatePropertyType( propertyType,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.PropertyTypeResource.UpdatePropertyType(Mozu.Api.Contracts.Content.PropertyType,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="propertyTypeName"></param>
            <param name="responseFields"></param>
            <param name="propertyType"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Content.PropertyType"/>
            </returns>
            <example>
            <code>
              var propertytype = new PropertyType();
              var propertyType = propertytype.UpdatePropertyType(_dataViewMode,  propertyType,  propertyTypeName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Content.PropertyTypeResource.DeletePropertyType(System.String)">
            <summary>
            
            </summary>
            <param name="propertyTypeName"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var propertytype = new PropertyType();
              propertytype.DeletePropertyType(_dataViewMode,  propertyTypeName);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Event.EventNotificationResource">
            <summary>
            Events are notifications Mozu publishes to the application when a create, read, update, or delete operation is performed. If the application subscribes to the event, you can use the Events resource to query for recent events Mozu published to your application or events that were not published successfully.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Event.EventNotificationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Event.EventNotificationResource.GetEvents(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Retrieves a list of events.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Event.EventCollection"/>
            </returns>
            <example>
            <code>
              var eventnotification = new EventNotification();
              var eventCollection = eventnotification.GetEvents( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Event.EventNotificationResource.GetEvent(System.String,System.String)">
            <summary>
            Retrieves an event by providing the event ID.
            </summary>
            <param name="eventId">The unique identifier of the event being retrieved. An event is a notification about a create, read, update, or delete on an order, product, discount or category.</param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Event.Event"/>
            </returns>
            <example>
            <code>
              var eventnotification = new EventNotification();
              var event = eventnotification.GetEvent( eventId,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Event.Push.SubscriptionResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Event.Push.SubscriptionResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Event.Push.SubscriptionResource.GetSubscriptions(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Event.SubscriptionCollection"/>
            </returns>
            <example>
            <code>
              var subscription = new Subscription();
              var subscriptionCollection = subscription.GetSubscriptions( startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Event.Push.Subscriptions.EventDeliverySummaryResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Event.Push.Subscriptions.EventDeliverySummaryResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Event.Push.Subscriptions.EventDeliverySummaryResource.GetDeliveryAttemptSummary(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="responseFields"></param>
            <param name="subscriptionId"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Event.EventDeliverySummary"/>
            </returns>
            <example>
            <code>
              var eventdeliverysummary = new EventDeliverySummary();
              var eventDeliverySummary = eventdeliverysummary.GetDeliveryAttemptSummary( subscriptionId,  id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Event.Push.Subscriptions.EventDeliverySummaryResource.GetDeliveryAttemptSummaries(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="subscriptionId"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Event.EventDeliverySummaryCollection"/>
            </returns>
            <example>
            <code>
              var eventdeliverysummary = new EventDeliverySummary();
              var eventDeliverySummaryCollection = eventdeliverysummary.GetDeliveryAttemptSummaries( subscriptionId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.Adminuser.AdminUserResource">
            <summary>
            Displays the user accounts and account details associated with a developer or Mozu tenant administrator. Email addresses uniquely identify admin user accounts.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.Adminuser.AdminUserResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.AdminUserResource.GetTenantScopesForUser(System.String,System.String)">
            <summary>
            Retrieves a list of the Mozu tenants or development stores for which the specified user has an assigned role.
            </summary>
            <param name="responseFields"></param>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Tenant.TenantCollection"/>
            </returns>
            <example>
            <code>
              var adminuser = new AdminUser();
              var tenantCollection = adminuser.GetTenantScopesForUser( userId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.AdminUserResource.GetUser(System.String,System.String)">
            <summary>
            Retrieves the details of the specified administrator user account.
            </summary>
            <param name="responseFields"></param>
            <param name="userId">Unique identifier of the administrator account to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.User"/>
            </returns>
            <example>
            <code>
              var adminuser = new AdminUser();
              var user = adminuser.GetUser( userId,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.Adminuser.TenantAdminUserAuthTicketResource">
            <summary>
            Use the Admin User authentication tickets resource to generate and refresh authentication tickets that enable Mozu administrator or developer account users to access development or production tenants.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.Adminuser.TenantAdminUserAuthTicketResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.TenantAdminUserAuthTicketResource.CreateUserAuthTicket(Mozu.Api.Contracts.Core.UserAuthInfo,System.Nullable{System.Int32},System.String)">
            <summary>
            Creates an authentication ticket for the supplied user to specify in API requests associated with the supplied tenant.
            </summary>
            <param name="responseFields"></param>
            <param name="tenantId">Unique identifier of the development or production tenant for which to generate the user authentication ticket.</param>
            <param name="userAuthInfo">The user authentication information required to generate the user authentication ticket, which consists of a user name and password.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket"/>
            </returns>
            <example>
            <code>
              var tenantadminuserauthticket = new TenantAdminUserAuthTicket();
              var tenantAdminUserAuthTicket = tenantadminuserauthticket.CreateUserAuthTicket( userAuthInfo,  tenantId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.TenantAdminUserAuthTicketResource.RefreshAuthTicket(Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket,System.Nullable{System.Int32},System.String)">
            <summary>
            Generates a new user authentication ticket for the specified tenant by supplying the user's existing refresh token information.
            </summary>
            <param name="responseFields"></param>
            <param name="tenantId"></param>
            <param name="existingAuthTicket">Properties of the authentication ticket to refresh. The refresh token is required to complete this request.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AdminUser.TenantAdminUserAuthTicket"/>
            </returns>
            <example>
            <code>
              var tenantadminuserauthticket = new TenantAdminUserAuthTicket();
              var tenantAdminUserAuthTicket = tenantadminuserauthticket.RefreshAuthTicket( existingAuthTicket,  tenantId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Adminuser.TenantAdminUserAuthTicketResource.DeleteUserAuthTicket(System.String)">
            <summary>
            Deletes the authentication ticket for the user by supplying the refresh token.
            </summary>
            <param name="refreshToken">Refresh token string associated with the user authentication ticket.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var tenantadminuserauthticket = new TenantAdminUserAuthTicket();
              tenantadminuserauthticket.DeleteUserAuthTicket( refreshToken);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.ApplicationResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.ApplicationResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ApplicationResource.GetApplication(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.InstalledApplications.Application"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var application = application.GetApplication( appId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ApplicationResource.UpdateApplication(Mozu.Api.Contracts.InstalledApplications.Application,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="responseFields"></param>
            <param name="application"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.InstalledApplications.Application"/>
            </returns>
            <example>
            <code>
              var application = new Application();
              var application = application.UpdateApplication( application,  appId,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.Applications.AuthTicketResource">
            <summary>
            Use this resource to manage authentication tickets for your applications.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.Applications.AuthTicketResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Applications.AuthTicketResource.AuthenticateApp(Mozu.Api.Contracts.AppDev.AppAuthInfo,System.String)">
            <summary>
            Generate an authentication ticket for an application.
            </summary>
            <param name="responseFields"></param>
            <param name="appAuthInfo">Authentication information required to generate an authentication ticket includes the application id and the shared secret.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.AuthTicket"/>
            </returns>
            <example>
            <code>
              var authticket = new AuthTicket();
              var authTicket = authticket.AuthenticateApp( appAuthInfo,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Applications.AuthTicketResource.RefreshAppAuthTicket(Mozu.Api.Contracts.AppDev.AuthTicketRequest,System.String)">
            <summary>
            Refreshes the application's authentication ticket and generates a new access token by providing the refresh token string.
            </summary>
            <param name="responseFields"></param>
            <param name="authTicketRequest">The refresh token string required to update the application authentication ticket.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AppDev.AuthTicket"/>
            </returns>
            <example>
            <code>
              var authticket = new AuthTicket();
              var authTicket = authticket.RefreshAppAuthTicket( authTicketRequest,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Applications.AuthTicketResource.DeleteAppAuthTicket(System.String)">
            <summary>
            Deletes an authentication for an application based on the specified refresh token.
            </summary>
            <param name="refreshToken">The refresh token string from the application's authentication ticket.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var authticket = new AuthTicket();
              authticket.DeleteAppAuthTicket( refreshToken);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.Developer.DeveloperAdminUserAuthTicketResource">
            <summary>
            Use this resource to manage authentication tickets for your developer account.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.Developer.DeveloperAdminUserAuthTicketResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Developer.DeveloperAdminUserAuthTicketResource.CreateDeveloperUserAuthTicket(Mozu.Api.Contracts.Core.UserAuthInfo,System.Nullable{System.Int32},System.String)">
            <summary>
            Generate an authentication ticket for a developer account.
            </summary>
            <param name="developerAccountId">Unique identifier of the developer account.</param>
            <param name="responseFields"></param>
            <param name="userAuthInfo">The user authentication information required to generate the developer account user authentication ticket, which consists of a user name and password.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket"/>
            </returns>
            <example>
            <code>
              var developeradminuserauthticket = new DeveloperAdminUserAuthTicket();
              var developerAdminUserAuthTicket = developeradminuserauthticket.CreateDeveloperUserAuthTicket( userAuthInfo,  developerAccountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Developer.DeveloperAdminUserAuthTicketResource.RefreshDeveloperAuthTicket(Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket,System.Nullable{System.Int32},System.String)">
            <summary>
            Generates a new developer account authentication ticket for the specified tenant by supplying the defined refresh token information.
            </summary>
            <param name="developerAccountId">Unique identifier of the developer account.</param>
            <param name="responseFields"></param>
            <param name="existingAuthTicket">Properties of the authentication ticket to refresh. The refresh token is required to complete this request.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.AdminUser.DeveloperAdminUserAuthTicket"/>
            </returns>
            <example>
            <code>
              var developeradminuserauthticket = new DeveloperAdminUserAuthTicket();
              var developerAdminUserAuthTicket = developeradminuserauthticket.RefreshDeveloperAuthTicket( existingAuthTicket,  developerAccountId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Developer.DeveloperAdminUserAuthTicketResource.DeleteUserAuthTicket(System.String)">
            <summary>
            Deletes the authentication ticket for the developer account by supplying the refresh token.
            </summary>
            <param name="refreshToken">Refresh token string associated with the developer account authentication ticket.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var developeradminuserauthticket = new DeveloperAdminUserAuthTicket();
              developeradminuserauthticket.DeleteUserAuthTicket( refreshToken);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.EntityListResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.EntityListResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.EntityListResource.GetEntityLists(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityListCollection"/>
            </returns>
            <example>
            <code>
              var entitylist = new EntityList();
              var entityListCollection = entitylist.GetEntityLists( pageSize,  startIndex,  filter,  sortBy,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.EntityListResource.GetEntityList(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityList"/>
            </returns>
            <example>
            <code>
              var entitylist = new EntityList();
              var entityList = entitylist.GetEntityList( entityListFullName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.EntityListResource.CreateEntityList(Mozu.Api.Contracts.MZDB.EntityList,System.String)">
            <summary>
            
            </summary>
            <param name="responseFields"></param>
            <param name="entityList"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityList"/>
            </returns>
            <example>
            <code>
              var entitylist = new EntityList();
              var entityList = entitylist.CreateEntityList( entityList,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.EntityListResource.UpdateEntityList(Mozu.Api.Contracts.MZDB.EntityList,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <param name="entityList"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityList"/>
            </returns>
            <example>
            <code>
              var entitylist = new EntityList();
              var entityList = entitylist.UpdateEntityList( entityList,  entityListFullName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.EntityListResource.DeleteEntityList(System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var entitylist = new EntityList();
              entitylist.DeleteEntityList( entityListFullName);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.Entitylists.EntityContainerResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.Entitylists.EntityContainerResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityContainerResource.GetEntityContainer(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="id"></param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityContainer"/>
            </returns>
            <example>
            <code>
              var entitycontainer = new EntityContainer();
              var entityContainer = entitycontainer.GetEntityContainer( entityListFullName,  id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityContainerResource.GetEntityContainers(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityContainerCollection"/>
            </returns>
            <example>
            <code>
              var entitycontainer = new EntityContainer();
              var entityContainerCollection = entitycontainer.GetEntityContainers( entityListFullName,  pageSize,  startIndex,  filter,  sortBy,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.Entitylists.EntityResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.Entitylists.EntityResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityResource.GetEntity(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="id"></param>
            <param name="responseFields"></param>
            <returns>
            JObject
            </returns>
            <example>
            <code>
              var entity = new Entity();
              var json = entity.GetEntity( entityListFullName,  id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityResource.GetEntities(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityCollection"/>
            </returns>
            <example>
            <code>
              var entity = new Entity();
              var entityCollection = entity.GetEntities( entityListFullName,  pageSize,  startIndex,  filter,  sortBy,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityResource.InsertEntity(Newtonsoft.Json.Linq.JObject,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <param name="item"></param>
            <returns>
            JObject
            </returns>
            <example>
            <code>
              var entity = new Entity();
              var json = entity.InsertEntity( item,  entityListFullName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityResource.UpdateEntity(Newtonsoft.Json.Linq.JObject,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="id"></param>
            <param name="responseFields"></param>
            <param name="item"></param>
            <returns>
            JObject
            </returns>
            <example>
            <code>
              var entity = new Entity();
              var json = entity.UpdateEntity( item,  entityListFullName,  id,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.EntityResource.DeleteEntity(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="id"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var entity = new Entity();
              entity.DeleteEntity( entityListFullName,  id);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.Entitylists.ListViewResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.Entitylists.ListViewResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.GetViewEntity(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityId"></param>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <param name="viewName"></param>
            <returns>
            JObject
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var json = listview.GetViewEntity( entityListFullName,  viewName,  entityId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.GetViewEntities(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="startIndex"></param>
            <param name="viewName"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityCollection"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var entityCollection = listview.GetViewEntities( entityListFullName,  viewName,  pageSize,  startIndex,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.GetViewEntityContainer(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityId"></param>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <param name="viewName"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityContainer"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var entityContainer = listview.GetViewEntityContainer( entityListFullName,  viewName,  entityId,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.GetViewEntityContainers(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="startIndex"></param>
            <param name="viewName"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.EntityContainerCollection"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var entityContainerCollection = listview.GetViewEntityContainers( entityListFullName,  viewName,  pageSize,  startIndex,  filter,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.GetEntityListView(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <param name="viewName"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.ListView"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var listView = listview.GetEntityListView( entityListFullName,  viewName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.GetEntityListViews(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.ListViewCollection"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var listViewCollection = listview.GetEntityListViews( entityListFullName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.CreateEntityListView(Mozu.Api.Contracts.MZDB.ListView,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <param name="listView"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.ListView"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var listView = listview.CreateEntityListView( listView,  entityListFullName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.UpdateEntityListView(Mozu.Api.Contracts.MZDB.ListView,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <param name="viewName"></param>
            <param name="listView"></param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.MZDB.ListView"/>
            </returns>
            <example>
            <code>
              var listview = new ListView();
              var listView = listview.UpdateEntityListView( listView,  entityListFullName,  viewName,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.Entitylists.ListViewResource.DeleteEntityListView(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="entityListFullName"></param>
            <param name="viewName"></param>
            <returns>
            
            </returns>
            <example>
            <code>
              var listview = new ListView();
              listview.DeleteEntityListView( entityListFullName,  viewName);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.ReferenceDataResource">
            <summary>
            The Reference resource retrieves collections of standards the Mozu system currently supports. This includes content locales, top-level domains, units of measure, countries, currencies, time zones, and shipping or billing address schemas.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.ReferenceDataResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetAddressSchema(System.String)">
            <summary>
            Retrieves a specific address schema based on the country code provided. This operation allows the creation of custom shipping and billing address fields.
            </summary>
            <param name="countryCode">The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.AddressSchema"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var addressSchema = referencedata.GetAddressSchema( countryCode);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetAddressSchemas">
            <summary>
            Retrieves the entire list of address schemas that the system supports.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.AddressSchemaCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var addressSchemaCollection = referencedata.GetAddressSchemas();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetBehavior(System.Int32)">
            <summary>
            Retrieves the details of a behavior based on the behavior ID specified in the request.
            </summary>
            <param name="behaviorId">Unique identifier of the behavior.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.Behavior"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var behavior = referencedata.GetBehavior( behaviorId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetBehaviorCategories">
            <summary>
            Retrieves the list of behavior categories.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.BehaviorCategoryCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var behaviorCategoryCollection = referencedata.GetBehaviorCategories();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetBehaviorCategory(System.Int32)">
            <summary>
            Retrieves the details of the behavior category specified in the request.
            </summary>
            <param name="categoryId">Unique identifier of the behavior category.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.BehaviorCategory"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var behaviorCategory = referencedata.GetBehaviorCategory( categoryId);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetBehaviors(System.String)">
            <summary>
            Retrieves a list of application behaviors.
            </summary>
            <param name="userType">The user type associated with the behaviors to retrieve.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Core.BehaviorCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var behaviorCollection = referencedata.GetBehaviors( userType);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetContentLocales">
            <summary>
            Retrieves the list of content locales the system supports. Content locales indicate the language used and the country where the language is used.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.ContentLocaleCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var contentLocaleCollection = referencedata.GetContentLocales();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetCountries">
            <summary>
            Retrieves the entire list of countries that the system supports.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.CountryCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var countryCollection = referencedata.GetCountries();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetCurrencies">
            <summary>
            Retrieves the entire list of currencies that the system supports.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.CurrencyCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var currencyCollection = referencedata.GetCurrencies();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetTimeZones">
            <summary>
            Retrieves the entire list of time zones that the system supports.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.TimeZoneCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var timeZoneCollection = referencedata.GetTimeZones();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetTopLevelDomains">
            <summary>
            Retrieves the entire list of top-level internet domains that the system supports.
            </summary>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.TopLevelDomainCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var topLevelDomainCollection = referencedata.GetTopLevelDomains();
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.ReferenceDataResource.GetUnitsOfMeasure(System.String)">
            <summary>
            Retrieves an array list of all units of measure the system supports.
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Reference.UnitOfMeasureCollection"/>
            </returns>
            <example>
            <code>
              var referencedata = new ReferenceData();
              var unitOfMeasureCollection = referencedata.GetUnitsOfMeasure( filter);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.SiteDataResource">
            <summary>
            Use the site data resource to store site-level information required for a third-party application in the Mozu database.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.SiteDataResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.SiteDataResource.GetDBValue(System.String,System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry query string used to retrieve the record information.</param>
            <param name="responseFields"></param>
            <returns>
            string
            </returns>
            <example>
            <code>
              var sitedata = new SiteData();
              var string = sitedata.GetDBValue( dbEntryQuery,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.SiteDataResource.CreateDBValue(System.String,System.String)">
            <summary>
            Creates a new record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="value">The value string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var sitedata = new SiteData();
              sitedata.CreateDBValue( value,  dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.SiteDataResource.UpdateDBValue(System.String,System.String)">
            <summary>
            Updates a record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry query string used to update the record information.</param>
            <param name="value">The database value to update.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var sitedata = new SiteData();
              sitedata.UpdateDBValue( value,  dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.SiteDataResource.DeleteDBValue(System.String)">
            <summary>
            Removes a previously defined record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var sitedata = new SiteData();
              sitedata.DeleteDBValue( dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.TenantDataResource">
            <summary>
            Use the tenant data resource to store tenant-level information required for a third-party application in the Mozu database.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.TenantDataResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantDataResource.GetDBValue(System.String,System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry query string used to retrieve the record information.</param>
            <param name="responseFields"></param>
            <returns>
            string
            </returns>
            <example>
            <code>
              var tenantdata = new TenantData();
              var string = tenantdata.GetDBValue( dbEntryQuery,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantDataResource.CreateDBValue(System.String,System.String)">
            <summary>
            Creates a new record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="value">The value string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var tenantdata = new TenantData();
              tenantdata.CreateDBValue( value,  dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantDataResource.UpdateDBValue(System.String,System.String)">
            <summary>
            Updates a record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry query string used to update the record information.</param>
            <param name="value">The database value to update.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var tenantdata = new TenantData();
              tenantdata.UpdateDBValue( value,  dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantDataResource.DeleteDBValue(System.String)">
            <summary>
            Removes a previously defined record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var tenantdata = new TenantData();
              tenantdata.DeleteDBValue( dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.TenantResource">
            <summary>
            Use the tenants resource to manage information about a Mozu tenant.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.TenantResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.TenantResource.GetTenant(System.Int32,System.String)">
            <summary>
            Retrieve details about a specific tenant by providing the tenant ID.
            </summary>
            <param name="responseFields"></param>
            <param name="tenantId">Unique identifier of the Mozu tenant.</param>
            <returns>
            <see cref="T:Mozu.Api.Contracts.Tenant.Tenant"/>
            </returns>
            <example>
            <code>
              var tenant = new Tenant();
              var tenant = tenant.GetTenant( tenantId,  responseFields);
            </code>
            </example>
        </member>
        <member name="T:Mozu.Api.Resources.Platform.UserDataResource">
            <summary>
            Use the user data subresource to store user-level data required for a third-party application in the Mozu database.
            </summary>
        </member>
        <member name="F:Mozu.Api.Resources.Platform.UserDataResource._apiContext">
            
             <see cref="T:Mozu.Api.ApiContext"/>
            
        </member>
        <member name="M:Mozu.Api.Resources.Platform.UserDataResource.GetDBValue(System.String,System.String)">
            <summary>
            Retrieves the value of a record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry query string used to retrieve the record information.</param>
            <param name="responseFields"></param>
            <returns>
            string
            </returns>
            <example>
            <code>
              var userdata = new UserData();
              var string = userdata.GetDBValue( dbEntryQuery,  responseFields);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.UserDataResource.CreateDBValue(System.String,System.String)">
            <summary>
            Creates a new record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <param name="value">The value string to create.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var userdata = new UserData();
              userdata.CreateDBValue( value,  dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.UserDataResource.UpdateDBValue(System.String,System.String)">
            <summary>
            Updates a record in the Mozu database based on the information supplied in the request.
            </summary>
            <param name="dbEntryQuery">The database entry query string used to update the record information.</param>
            <param name="value">The database value to update.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var userdata = new UserData();
              userdata.UpdateDBValue( value,  dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Resources.Platform.UserDataResource.DeleteDBValue(System.String)">
            <summary>
            Removes a previously defined record in the Mozu database.
            </summary>
            <param name="dbEntryQuery">The database entry string to delete.</param>
            <returns>
            
            </returns>
            <example>
            <code>
              var userdata = new UserData();
              userdata.DeleteDBValue( dbEntryQuery);
            </code>
            </example>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Admin.LocationTypeUrl.GetLocationTypesUrl">
            <summary>
            Get Resource Url for GetLocationTypes
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Admin.LocationTypeUrl.GetLocationTypeUrl(System.String)">
            <summary>
            Get Resource Url for GetLocationType
            </summary>
            <param name="locationTypeCode">The user-defined code that identifies the location type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Admin.LocationTypeUrl.AddLocationTypeUrl">
            <summary>
            Get Resource Url for AddLocationType
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Admin.LocationTypeUrl.UpdateLocationTypeUrl(System.String)">
            <summary>
            Get Resource Url for UpdateLocationType
            </summary>
            <param name="locationTypeCode">The user-defined code that identifies the location type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Admin.LocationTypeUrl.DeleteLocationTypeUrl(System.String)">
            <summary>
            Get Resource Url for DeleteLocationType
            </summary>
            <param name="locationTypeCode">User-defined code used to identify the location type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Admin.LocationUrl.GetLocationsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get Resource Url for GetLocations
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Admin.LocationUrl.GetLocationUrl(System.String)">
            <summary>
            Get Resource Url for GetLocation
            </summary>
            <param name="locationCode">The merchant-defined code of the location to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Admin.LocationUrl.AddLocationUrl">
            <summary>
            Get Resource Url for AddLocation
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Admin.LocationUrl.UpdateLocationUrl(System.String)">
            <summary>
            Get Resource Url for UpdateLocation
            </summary>
            <param name="locationCode">The merchant-defined code associated with the location to update.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Admin.LocationUrl.DeleteLocationUrl(System.String)">
            <summary>
            Get Resource Url for DeleteLocation
            </summary>
            <param name="locationCode">The merchant-defined code of the location to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.AppliedDiscountUrl.ApplyCouponUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for ApplyCoupon
            </summary>
            <param name="cartId"></param>
            <param name="couponCode"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.AppliedDiscountUrl.RemoveCouponsUrl(System.String)">
            <summary>
            Get Resource Url for RemoveCoupons
            </summary>
            <param name="cartId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.AppliedDiscountUrl.RemoveCouponUrl(System.String,System.String)">
            <summary>
            Get Resource Url for RemoveCoupon
            </summary>
            <param name="cartId"></param>
            <param name="couponCode"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.GetCartItemUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetCartItem
            </summary>
            <param name="cartItemId">Identifier of the cart item to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.GetCartItemsUrl(System.String)">
            <summary>
            Get Resource Url for GetCartItems
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.AddItemToCartUrl(System.String)">
            <summary>
            Get Resource Url for AddItemToCart
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.UpdateCartItemQuantityUrl(System.String,System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateCartItemQuantity
            </summary>
            <param name="cartItemId">Identifier of the cart item to update quantity.</param>
            <param name="quantity">The number of cart items in the shopper's active cart.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.UpdateCartItemUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateCartItem
            </summary>
            <param name="cartItemId">Identifier of the cart item to update.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.RemoveAllCartItemsUrl">
            <summary>
            Get Resource Url for RemoveAllCartItems
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.CartItemUrl.DeleteCartItemUrl(System.String)">
            <summary>
            Get Resource Url for DeleteCartItem
            </summary>
            <param name="cartItemId">Identifier of the cart item to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.ChangeMessageUrl.GetMessagesUrl(System.String)">
            <summary>
            Get Resource Url for GetMessages
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.ChangeMessageUrl.RemoveAllMessagesUrl">
            <summary>
            Get Resource Url for RemoveAllMessages
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Carts.ChangeMessageUrl.RemoveMessageUrl(System.String)">
            <summary>
            Get Resource Url for RemoveMessage
            </summary>
            <param name="messageId">Identifier of the message to remove from the cart.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.GetCartUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetCart
            </summary>
            <param name="cartId">Identifier of the cart to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.GetOrCreateCartUrl(System.String)">
            <summary>
            Get Resource Url for GetOrCreateCart
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.GetCartSummaryUrl(System.String)">
            <summary>
            Get Resource Url for GetCartSummary
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.GetUserCartSummaryUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetUserCartSummary
            </summary>
            <param name="responseFields"></param>
            <param name="userId">Unique identifier of the user whose cart details you want to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.GetUserCartUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetUserCart
            </summary>
            <param name="responseFields"></param>
            <param name="userId">Unique identifier of the user whose cart you want to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.UpdateCartUrl(System.String)">
            <summary>
            Get Resource Url for UpdateCart
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.DeleteCartUrl(System.String)">
            <summary>
            Get Resource Url for DeleteCart
            </summary>
            <param name="cartId">Identifier of the cart to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.CartUrl.DeleteCurrentCartUrl">
            <summary>
            Get Resource Url for DeleteCurrentCart
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentUrl.GetAttributeLocalizedContentsUrl(System.String)">
            <summary>
            Get Resource Url for GetAttributeLocalizedContents
            </summary>
            <param name="attributeFQN"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentUrl.GetAttributeLocalizedContentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAttributeLocalizedContent
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentUrl.AddLocalizedContentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for AddLocalizedContent
            </summary>
            <param name="attributeFQN"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentUrl.UpdateLocalizedContentsUrl(System.String)">
            <summary>
            Get Resource Url for UpdateLocalizedContents
            </summary>
            <param name="attributeFQN"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentUrl.UpdateLocalizedContentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateLocalizedContent
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeLocalizedContentUrl.DeleteLocalizedContentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteLocalizedContent
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeTypeRuleUrl.GetAttributeTypeRulesUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAttributeTypeRules
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.GetAttributeVocabularyValuesUrl(System.String)">
            <summary>
            Get Resource Url for GetAttributeVocabularyValues
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.GetAttributeVocabularyValueLocalizedContentsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAttributeVocabularyValueLocalizedContents
            </summary>
            <param name="attributeFQN"></param>
            <param name="value"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.GetAttributeVocabularyValueLocalizedContentUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAttributeVocabularyValueLocalizedContent
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.GetAttributeVocabularyValueUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAttributeVocabularyValue
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields"></param>
            <param name="value">The actual unique value of the attribute vocabulary to retrieve. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.AddAttributeVocabularyValueLocalizedContentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for AddAttributeVocabularyValueLocalizedContent
            </summary>
            <param name="attributeFQN"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.AddAttributeVocabularyValueUrl(System.String,System.String)">
            <summary>
            Get Resource Url for AddAttributeVocabularyValue
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.UpdateAttributeVocabularyValuesUrl(System.String)">
            <summary>
            Get Resource Url for UpdateAttributeVocabularyValues
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.UpdateAttributeVocabularyValueLocalizedContentsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateAttributeVocabularyValueLocalizedContents
            </summary>
            <param name="attributeFQN"></param>
            <param name="value"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.UpdateAttributeVocabularyValueLocalizedContentUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateAttributeVocabularyValueLocalizedContent
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.UpdateAttributeVocabularyValueUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateAttributeVocabularyValue
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields"></param>
            <param name="value">The actual unique value of the attribute vocabulary value to update. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.DeleteAttributeVocabularyValueUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteAttributeVocabularyValue
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="value">The actual unique value of the attribute vocabulary to delete. A single attribute must have a unique value and match the attribute's data type. If a string value returns null, the system will generate a value. The actual string content displayed shoud be stored as "Content" and actual content is required for string values.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Attributes.AttributeVocabularyValueUrl.DeleteAttributeVocabularyValueLocalizedContentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for DeleteAttributeVocabularyValueLocalizedContent
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="value"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.AttributeUrl.GetAttributesUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAttributes
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.AttributeUrl.GetAttributeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAttribute
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.AttributeUrl.AddAttributeUrl(System.String)">
            <summary>
            Get Resource Url for AddAttribute
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.AttributeUrl.UpdateAttributeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateAttribute
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.AttributeUrl.DeleteAttributeUrl(System.String)">
            <summary>
            Get Resource Url for DeleteAttribute
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraUrl.GetExtrasUrl(System.Int32)">
            <summary>
            Get Resource Url for GetExtras
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraUrl.GetExtraUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for GetExtra
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type whose extra is being retrieved.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraUrl.AddExtraUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for AddExtra
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraUrl.UpdateExtraUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateExtra
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeExtraUrl.DeleteExtraUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for DeleteExtra
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionUrl.GetOptionsUrl(System.Int32)">
            <summary>
            Get Resource Url for GetOptions
            </summary>
            <param name="productTypeId">Identifier of the product type to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionUrl.GetOptionUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for GetOption
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">The identifier of the product type.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionUrl.AddOptionUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for AddOption
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionUrl.UpdateOptionUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateOption
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeOptionUrl.DeleteOptionUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for DeleteOption
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyUrl.GetPropertiesUrl(System.Int32)">
            <summary>
            Get Resource Url for GetProperties
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyUrl.GetPropertyUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for GetProperty
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyUrl.AddPropertyUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for AddProperty
            </summary>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyUrl.UpdatePropertyUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateProperty
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypePropertyUrl.DeletePropertyUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for DeleteProperty
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productTypeId">Identifier of the product type.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.Producttypes.ProductTypeVariationUrl.GenerateProductVariationsUrl(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GenerateProductVariations
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode"></param>
            <param name="productTypeId">Unique identifier of the product type.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.ProductTypeUrl.GetProductTypesUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetProductTypes
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product type search results by any of its properties. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=Name+cont+shoes"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.ProductTypeUrl.GetProductTypeUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetProductType
            </summary>
            <param name="productTypeId">Identifier of the product type to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.ProductTypeUrl.AddProductTypeUrl(System.String)">
            <summary>
            Get Resource Url for AddProductType
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.ProductTypeUrl.UpdateProductTypeUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateProductType
            </summary>
            <param name="productTypeId">Identifier of the product type to update.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Attributedefinition.ProductTypeUrl.DeleteProductTypeUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteProductType
            </summary>
            <param name="productTypeId">Identifier of the product type to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.CategoryUrl.GetCategoriesUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetCategories
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product category search results by any of its properties, including its position in the category hierarchy. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.CategoryUrl.GetChildCategoriesUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetChildCategories
            </summary>
            <param name="categoryId">Unique identifier of the category for which to retrieve subcategories.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.CategoryUrl.GetCategoryUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetCategory
            </summary>
            <param name="categoryId">Unique identifier of the category to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.CategoryUrl.AddCategoryUrl(System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for AddCategory
            </summary>
            <param name="incrementSequence"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.CategoryUrl.UpdateCategoryUrl(System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for UpdateCategory
            </summary>
            <param name="cascadeVisibility">If true, when changing the display option for the category, change it for all subcategories also. Default: False.</param>
            <param name="categoryId">Unique identifier of the category to modify.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.CategoryUrl.DeleteCategoryByIdUrl(System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for DeleteCategoryById
            </summary>
            <param name="cascadeDelete">If true, also delete all subcategories associated with the specified category.</param>
            <param name="categoryId">Unique identifier of the category to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Discounts.DiscountTargetUrl.GetDiscountTargetUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetDiscountTarget
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Discounts.DiscountTargetUrl.UpdateDiscountTargetUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateDiscountTarget
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.GetDiscountsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetDiscounts
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.GetDiscountContentUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetDiscountContent
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.GetDiscountUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetDiscount
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.GenerateRandomCouponUrl(System.String)">
            <summary>
            Get Resource Url for GenerateRandomCoupon
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.CreateDiscountUrl(System.String)">
            <summary>
            Get Resource Url for CreateDiscount
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.UpdateDiscountContentUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateDiscountContent
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.UpdateDiscountUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateDiscount
            </summary>
            <param name="discountId">Unique identifier of the discount to update.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.DiscountUrl.DeleteDiscountUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteDiscount
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.FacetUrl.GetFacetUrl(System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetFacet
            </summary>
            <param name="facetId">Unique identifier of the facet to retrieve.</param>
            <param name="responseFields"></param>
            <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.FacetUrl.GetFacetCategoryListUrl(System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetFacetCategoryList
            </summary>
            <param name="categoryId">Unique identifier of the category associated with the facets to retrieve.</param>
            <param name="includeAvailable">If true, returns a list of the attributes and categories associated with a product type that have not been defined as a facet for the category.</param>
            <param name="responseFields"></param>
            <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.FacetUrl.AddFacetUrl(System.String)">
            <summary>
            Get Resource Url for AddFacet
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.FacetUrl.UpdateFacetUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateFacet
            </summary>
            <param name="facetId">Unique identifier of the facet to modify.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.FacetUrl.DeleteFacetByIdUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteFacetById
            </summary>
            <param name="facetId">Unique identifier of the facet to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.LocationInventoryUrl.GetLocationInventoryUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetLocationInventory
            </summary>
            <param name="locationCode">User-defined code that uniquely identifies the location.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.LocationInventoryUrl.GetLocationInventoriesUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetLocationInventories
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="locationCode">User-defined code that uniquely identifies the location.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.LocationInventoryUrl.AddLocationInventoryUrl(System.String,System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for AddLocationInventory
            </summary>
            <param name="locationCode">User-defined code that uniquely identifies the location.</param>
            <param name="performUpserts"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.LocationInventoryUrl.UpdateLocationInventoryUrl(System.String)">
            <summary>
            Get Resource Url for UpdateLocationInventory
            </summary>
            <param name="locationCode">User-defined code that uniquely identifies the location.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.LocationInventoryUrl.DeleteLocationInventoryUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteLocationInventory
            </summary>
            <param name="locationCode">User-defined code that uniquely identifies the location.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.MasterCatalogUrl.GetMasterCatalogsUrl(System.String)">
            <summary>
            Get Resource Url for GetMasterCatalogs
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.MasterCatalogUrl.GetMasterCatalogUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetMasterCatalog
            </summary>
            <param name="masterCatalogId">The unique identifier of the master catalog associated with the entity.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.MasterCatalogUrl.UpdateMasterCatalogUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateMasterCatalog
            </summary>
            <param name="masterCatalogId"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductReservationUrl.GetProductReservationsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetProductReservations
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductReservationUrl.GetProductReservationUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetProductReservation
            </summary>
            <param name="productReservationId">Unique identifier of the product reservation.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductReservationUrl.AddProductReservationsUrl(System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for AddProductReservations
            </summary>
            <param name="skipInventoryCheck">If true, skip the process to validate inventory when creating this product reservation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductReservationUrl.CommitReservationsUrl">
            <summary>
            Get Resource Url for CommitReservations
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductReservationUrl.UpdateProductReservationsUrl(System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for UpdateProductReservations
            </summary>
            <param name="skipInventoryCheck">If true, skip the inventory validation process when updating this product reservation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductReservationUrl.DeleteProductReservationUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteProductReservation
            </summary>
            <param name="productReservationId">Unique identifier of the reservation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.LocationInventoryUrl.GetLocationInventoriesUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetLocationInventories
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.LocationInventoryUrl.GetLocationInventoryUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetLocationInventory
            </summary>
            <param name="locationCode">User-defined code that identifies the location.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.LocationInventoryUrl.AddLocationInventoryUrl(System.String,System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for AddLocationInventory
            </summary>
            <param name="performUpserts"></param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.LocationInventoryUrl.UpdateLocationInventoryUrl(System.String)">
            <summary>
            Get Resource Url for UpdateLocationInventory
            </summary>
            <param name="productCode">The product code of the product for which to update active stock on hand inventory at a specified location.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.LocationInventoryUrl.DeleteLocationInventoryUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteLocationInventory
            </summary>
            <param name="locationCode">The code that identifies the location for which to delete product inventory.</param>
            <param name="productCode">The product code for which to delete a location's inventory.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.GetExtrasUrl(System.String)">
            <summary>
            Get Resource Url for GetExtras
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.GetExtraValueLocalizedDeltaPricesUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetExtraValueLocalizedDeltaPrices
            </summary>
            <param name="attributeFQN"></param>
            <param name="productCode"></param>
            <param name="value"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.GetExtraValueLocalizedDeltaPriceUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetExtraValueLocalizedDeltaPrice
            </summary>
            <param name="attributeFQN"></param>
            <param name="currencyCode"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.GetExtraUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetExtra
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.AddExtraValueLocalizedDeltaPriceUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for AddExtraValueLocalizedDeltaPrice
            </summary>
            <param name="attributeFQN"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.AddExtraUrl(System.String,System.String)">
            <summary>
            Get Resource Url for AddExtra
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.UpdateExtraValueLocalizedDeltaPricesUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateExtraValueLocalizedDeltaPrices
            </summary>
            <param name="attributeFQN"></param>
            <param name="productCode"></param>
            <param name="value"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.UpdateExtraValueLocalizedDeltaPriceUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateExtraValueLocalizedDeltaPrice
            </summary>
            <param name="attributeFQN"></param>
            <param name="currencyCode"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.UpdateExtraUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateExtra
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.DeleteExtraUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteExtra
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductExtraUrl.DeleteExtraValueLocalizedDeltaPriceUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for DeleteExtraValueLocalizedDeltaPrice
            </summary>
            <param name="attributeFQN"></param>
            <param name="currencyCode"></param>
            <param name="productCode"></param>
            <param name="value"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductOptionUrl.GetOptionsUrl(System.String)">
            <summary>
            Get Resource Url for GetOptions
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductOptionUrl.GetOptionUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetOption
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductOptionUrl.AddOptionUrl(System.String,System.String)">
            <summary>
            Get Resource Url for AddOption
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductOptionUrl.UpdateOptionUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateOption
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductOptionUrl.DeleteOptionUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteOption
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.GetPropertiesUrl(System.String)">
            <summary>
            Get Resource Url for GetProperties
            </summary>
            <param name="productCode"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.GetPropertyValueLocalizedContentsUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetPropertyValueLocalizedContents
            </summary>
            <param name="attributeFQN"></param>
            <param name="productCode"></param>
            <param name="value"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.GetPropertyValueLocalizedContentUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetPropertyValueLocalizedContent
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.GetPropertyUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetProperty
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.AddPropertyValueLocalizedContentUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for AddPropertyValueLocalizedContent
            </summary>
            <param name="attributeFQN"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.AddPropertyUrl(System.String,System.String)">
            <summary>
            Get Resource Url for AddProperty
            </summary>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.UpdatePropertyValueLocalizedContentsUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdatePropertyValueLocalizedContents
            </summary>
            <param name="attributeFQN"></param>
            <param name="productCode"></param>
            <param name="value"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.UpdatePropertyValueLocalizedContentUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdatePropertyValueLocalizedContent
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="value"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.UpdatePropertyUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateProperty
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.DeletePropertyUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteProperty
            </summary>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="productCode"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductPropertyUrl.DeletePropertyValueLocalizedContentUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for DeletePropertyValueLocalizedContent
            </summary>
            <param name="attributeFQN"></param>
            <param name="localeCode"></param>
            <param name="productCode"></param>
            <param name="value"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.GetProductVariationLocalizedDeltaPricesUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetProductVariationLocalizedDeltaPrices
            </summary>
            <param name="productCode"></param>
            <param name="variationKey"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.GetProductVariationLocalizedDeltaPriceUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetProductVariationLocalizedDeltaPrice
            </summary>
            <param name="currencyCode"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="variationKey"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.GetProductVariationUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetProductVariation
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.GetProductVariationsUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetProductVariations
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.AddProductVariationLocalizedDeltaPriceUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for AddProductVariationLocalizedDeltaPrice
            </summary>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="variationKey"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.UpdateProductVariationLocalizedDeltaPricesUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateProductVariationLocalizedDeltaPrices
            </summary>
            <param name="productCode"></param>
            <param name="variationKey"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.UpdateProductVariationLocalizedDeltaPriceUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateProductVariationLocalizedDeltaPrice
            </summary>
            <param name="currencyCode"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="variationKey"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.UpdateProductVariationUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateProductVariation
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.UpdateProductVariationsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateProductVariations
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.DeleteProductVariationUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteProductVariation
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="variationKey">System-generated key that represents the attribute values that uniquely identify a specific product variation.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.Products.ProductVariationUrl.DeleteProductVariationLocalizedDeltaPriceUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for DeleteProductVariationLocalizedDeltaPrice
            </summary>
            <param name="currencyCode"></param>
            <param name="productCode"></param>
            <param name="variationKey"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.GetProductsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetProducts
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="noCount">If true, the operation does not return the TotalCount number of results.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of product search terms to use in the query when searching across product code and product name. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.GetProductInCatalogsUrl(System.String)">
            <summary>
            Get Resource Url for GetProductInCatalogs
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.GetProductInCatalogUrl(System.String,System.Int32,System.String)">
            <summary>
            Get Resource Url for GetProductInCatalog
            </summary>
            <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.GetProductUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetProduct
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.AddProductUrl(System.String)">
            <summary>
            Get Resource Url for AddProduct
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.AddProductInCatalogUrl(System.String,System.String)">
            <summary>
            Get Resource Url for AddProductInCatalog
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.UpdateProductInCatalogsUrl(System.String)">
            <summary>
            Get Resource Url for UpdateProductInCatalogs
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.UpdateProductInCatalogUrl(System.String,System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateProductInCatalog
            </summary>
            <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.UpdateProductUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateProduct
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.DeleteProductUrl(System.String)">
            <summary>
            Get Resource Url for DeleteProduct
            </summary>
            <param name="productCode"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.ProductUrl.DeleteProductInCatalogUrl(System.String,System.Int32)">
            <summary>
            Get Resource Url for DeleteProductInCatalog
            </summary>
            <param name="catalogId">The unique identifier of the catalog of products used by a site.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.PublishingScopeUrl.DiscardDraftsUrl">
            <summary>
            Get Resource Url for DiscardDrafts
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.PublishingScopeUrl.PublishDraftsUrl">
            <summary>
            Get Resource Url for PublishDrafts
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.SearchUrl.GetSettingsUrl(System.String)">
            <summary>
            Get Resource Url for GetSettings
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Admin.SearchUrl.UpdateSettingsUrl(System.String)">
            <summary>
            Get Resource Url for UpdateSettings
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.CategoryUrl.GetCategoriesUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get Resource Url for GetCategories
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product category search results by any of its properties, including its position in the category hierarchy. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.CategoryUrl.GetCategoryUrl(System.Int32,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetCategory
            </summary>
            <param name="allowInactive">If true, allow inactive categories to be retrieved in the category list response. If false, the categories retrieved will not include ones marked inactive.</param>
            <param name="categoryId">Unique identifier for the storefront container used to organize products.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.CategoryUrl.GetCategoryTreeUrl(System.String)">
            <summary>
            Get Resource Url for GetCategoryTree
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductSearchResultUrl.SearchUrl(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for Search
            </summary>
            <param name="facet">Individually list the facet fields you want to display in a storefront product search.</param>
            <param name="facetFieldRangeQuery">Display a range facet not specified in a template in a storefront product search by listing the facet field and the range to display.</param>
            <param name="facetHierDepth">If filtering using category facets in a hierarchy, the number of category hierarchy levels to return for the facet. This option is only available for category facets.</param>
            <param name="facetHierPrefix">If filtering using category facets in a hierarchy, the parent categories you want to skip in the storefront product search. This parameter is only available for category facets.</param>
            <param name="facetHierValue">If filtering using category facets in a hierarchy, the category in the hierarchy to begin faceting on. This parameter is only available for category facets.</param>
            <param name="facetPageSize">The number of facet values to return for one or more facets.</param>
            <param name="facetSettings">Settings reserved for future facet search functionality on a storefront product search.</param>
            <param name="facetStartIndex">When paging through multiple facets, the startIndex value for each facet.</param>
            <param name="facetTemplate">The facet template to use on the storefront. A template displays all facets associated with the template on the storefront product search. Currently, only category-level facet templates are available.</param>
            <param name="facetTemplateSubset">Display a subset of the facets defined in the template specified in facetTemplate parameter.</param>
            <param name="facetValueFilter">The facet values to apply to the filter.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter product search results by any of its properties, including product code, type, category, and name. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=categoryId+eq+12"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="query">The terms to search on.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductSearchResultUrl.SuggestUrl(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for Suggest
            </summary>
            <param name="groups"></param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="query"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductUrl.GetProductsUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get Resource Url for GetProducts
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductUrl.GetProductInventoryUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetProductInventory
            </summary>
            <param name="locationCodes">Array of location codes for which to retrieve product inventory information.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductUrl.GetProductUrl(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetProduct
            </summary>
            <param name="allowInactive">If true, returns an inactive product as part of the query.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="skipInventoryCheck">If true, skip the inventory validation process for the specified product.</param>
            <param name="variationProductCode">Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductUrl.ConfiguredProductUrl(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for ConfiguredProduct
            </summary>
            <param name="includeOptionDetails">If true, the response returns details about the product. If false, returns a product summary such as the product name, price, and sale price.</param>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="skipInventoryCheck">If true, skip the inventory validation process for the specified product.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductUrl.ValidateProductUrl(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for ValidateProduct
            </summary>
            <param name="productCode">Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.</param>
            <param name="responseFields"></param>
            <param name="skipInventoryCheck">If true, skip the inventory validation process for the specified product.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductUrl.ValidateDiscountsUrl(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for ValidateDiscounts
            </summary>
            <param name="allowInactive"></param>
            <param name="customerAccountId"></param>
            <param name="productCode"></param>
            <param name="responseFields"></param>
            <param name="skipInventoryCheck"></param>
            <param name="variationProductCode"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ProductUrl.GetProductInventoriesUrl(System.String)">
            <summary>
            Get Resource Url for GetProductInventories
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Catalog.Storefront.ShippingUrl.GetRatesUrl(System.String)">
            <summary>
            Get Resource Url for GetRates
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ChannelGroupUrl.GetChannelGroupsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetChannelGroups
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ChannelGroupUrl.GetChannelGroupUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetChannelGroup
            </summary>
            <param name="code">The code that uniquely identifies the channel group.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ChannelGroupUrl.CreateChannelGroupUrl(System.String)">
            <summary>
            Get Resource Url for CreateChannelGroup
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ChannelGroupUrl.UpdateChannelGroupUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateChannelGroup
            </summary>
            <param name="code">Code that identifies the channel group.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ChannelGroupUrl.DeleteChannelGroupUrl(System.String)">
            <summary>
            Get Resource Url for DeleteChannelGroup
            </summary>
            <param name="code">User-defined code that uniqely identifies the channel group.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ChannelUrl.GetChannelsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetChannels
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ChannelUrl.GetChannelUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetChannel
            </summary>
            <param name="code">User-defined code that identifies the channel to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ChannelUrl.CreateChannelUrl(System.String)">
            <summary>
            Get Resource Url for CreateChannel
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ChannelUrl.UpdateChannelUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateChannel
            </summary>
            <param name="code">User-defined code that identifies the channel to update.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ChannelUrl.DeleteChannelUrl(System.String)">
            <summary>
            Get Resource Url for DeleteChannel
            </summary>
            <param name="code">User-defined code that identifies the channel to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CardUrl.GetAccountCardUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for GetAccountCard
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the card associated with the customer account billing contact.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CardUrl.GetAccountCardsUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetAccountCards
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CardUrl.AddAccountCardUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for AddAccountCard
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CardUrl.UpdateAccountCardUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateAccountCard
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the credit card.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CardUrl.DeleteAccountCardUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for DeleteAccountCard
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="cardId">Unique identifier of the credit card to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerAttributeUrl.GetAccountAttributeUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for GetAccountAttribute
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attribute to retrieve.</param>
            <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerAttributeUrl.GetAccountAttributesUrl(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAccountAttributes
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attributes to retrieve.</param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerAttributeUrl.AddAccountAttributeUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for AddAccountAttribute
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerAttributeUrl.UpdateAccountAttributeUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateAccountAttribute
            </summary>
            <param name="accountId">Identifier of the customer account associated with the attribute.</param>
            <param name="attributeFQN"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerAttributeUrl.DeleteAccountAttributeUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for DeleteAccountAttribute
            </summary>
            <param name="accountId"></param>
            <param name="attributeFQN"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerContactUrl.GetAccountContactUrl(System.Int32,System.Int32,System.String)">
            <summary>
            Get Resource Url for GetAccountContact
            </summary>
            <param name="accountId">Unique identifier of the customer account whose contact information is being retrieved.</param>
            <param name="contactId">Unique identifier of the customer account contact to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerContactUrl.GetAccountContactsUrl(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAccountContacts
            </summary>
            <param name="accountId">Unique identifier of the customer account associated with the contact information to retrieve.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerContactUrl.AddAccountContactUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for AddAccountContact
            </summary>
            <param name="accountId">Unique identifier of the customer account containing the new contact.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerContactUrl.UpdateAccountContactUrl(System.Int32,System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateAccountContact
            </summary>
            <param name="accountId">Unique identifier of the customer account whose contact information is being updated.</param>
            <param name="contactId">Unique identifer of the customer account contact being updated.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerContactUrl.DeleteAccountContactUrl(System.Int32,System.Int32)">
            <summary>
            Get Resource Url for DeleteAccountContact
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="contactId">Unique identifier of the customer account contact to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerNoteUrl.GetAccountNoteUrl(System.Int32,System.Int32,System.String)">
            <summary>
            Get Resource Url for GetAccountNote
            </summary>
            <param name="accountId">Unique identifier of the customer account that contains the note being retrieved.</param>
            <param name="noteId">Unique identifier of a particular note to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerNoteUrl.GetAccountNotesUrl(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAccountNotes
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerNoteUrl.AddAccountNoteUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for AddAccountNote
            </summary>
            <param name="accountId">Unique identifier of the customer account for which to create the note.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerNoteUrl.UpdateAccountNoteUrl(System.Int32,System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateAccountNote
            </summary>
            <param name="accountId">Unique identifier of the customer account note to modify.</param>
            <param name="noteId">Unique identifier of the note to update.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerNoteUrl.DeleteAccountNoteUrl(System.Int32,System.Int32)">
            <summary>
            Get Resource Url for DeleteAccountNote
            </summary>
            <param name="accountId">Unique identifier of the customer account that contains the note being deleted.</param>
            <param name="noteId">Unique identifier of the customer account note being deleted.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.CustomerSegmentUrl.GetAccountSegmentsUrl(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAccountSegments
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.TransactionUrl.GetTransactionsUrl(System.Int32)">
            <summary>
            Get Resource Url for GetTransactions
            </summary>
            <param name="accountId">Unique identifier of the customer account for which to retrieve transactions.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.TransactionUrl.AddTransactionUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for AddTransaction
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Accounts.TransactionUrl.RemoveTransactionUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for RemoveTransaction
            </summary>
            <param name="accountId">Unique identifier of the customer account from which to delete the transaction.</param>
            <param name="transactionId">Unique identifier of the transaction to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.AddressValidationRequestUrl.ValidateAddressUrl(System.String)">
            <summary>
            Get Resource Url for ValidateAddress
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Attributedefinition.AttributeUrl.GetAttributesUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAttributes
            </summary>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Attributedefinition.AttributeUrl.GetAttributeVocabularyValuesUrl(System.String)">
            <summary>
            Get Resource Url for GetAttributeVocabularyValues
            </summary>
            <param name="attributeFQN"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Attributedefinition.AttributeUrl.GetAttributeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAttribute
            </summary>
            <param name="attributeFQN"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Credits.CreditAuditEntryUrl.GetAuditEntriesUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAuditEntries
            </summary>
            <param name="code">User-defined code of the credit for which to retrieve audit entries.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Credits.CreditTransactionUrl.GetTransactionsUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetTransactions
            </summary>
            <param name="code">User-defined code that identifies the customer credit.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.Credits.CreditTransactionUrl.AddTransactionUrl(System.String,System.String)">
            <summary>
            Get Resource Url for AddTransaction
            </summary>
            <param name="code">User-defined code that identifies the customer credit to update.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CreditUrl.GetCreditsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetCredits
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CreditUrl.GetCreditUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetCredit
            </summary>
            <param name="code">User-defined code that identifies the store credit to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CreditUrl.AddCreditUrl(System.String)">
            <summary>
            Get Resource Url for AddCredit
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CreditUrl.AssociateCreditToShopperUrl(System.String,System.String)">
            <summary>
            Get Resource Url for AssociateCreditToShopper
            </summary>
            <param name="code">The code that represents the credit to claim for the shopper.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CreditUrl.UpdateCreditUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateCredit
            </summary>
            <param name="code">User-defined code of the store credit to update.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CreditUrl.DeleteCreditUrl(System.String)">
            <summary>
            Get Resource Url for DeleteCredit
            </summary>
            <param name="code">User-defined code of the store credit to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.GetAccountsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetAccounts
            </summary>
            <param name="fields">The fields to include in the response.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="isAnonymous">If true, retrieve anonymous shopper accounts in the response.</param>
            <param name="pageSize"></param>
            <param name="q">A list of customer account search terms to use in the query when searching across customer name and email. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.GetLoginStateUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetLoginState
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.GetAccountUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetAccount
            </summary>
            <param name="accountId">Unique identifier of the customer account to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.AddAccountUrl(System.String)">
            <summary>
            Get Resource Url for AddAccount
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.ChangePasswordUrl(System.Int32)">
            <summary>
            Get Resource Url for ChangePassword
            </summary>
            <param name="accountId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.AddLoginToExistingCustomerUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for AddLoginToExistingCustomer
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.RecomputeCustomerLifetimeValueUrl(System.Int32)">
            <summary>
            Get Resource Url for RecomputeCustomerLifetimeValue
            </summary>
            <param name="accountId">The unique identifier of the customer account for which to calculate customer lifetime value.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.SetLoginLockedUrl(System.Int32)">
            <summary>
            Get Resource Url for SetLoginLocked
            </summary>
            <param name="accountId">The unique identifier of the customer account.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.SetPasswordChangeRequiredUrl(System.Int32)">
            <summary>
            Get Resource Url for SetPasswordChangeRequired
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.AddAccountAndLoginUrl(System.String)">
            <summary>
            Get Resource Url for AddAccountAndLogin
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.AddAccountsUrl(System.String)">
            <summary>
            Get Resource Url for AddAccounts
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.GetLoginStateByEmailAddressUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetLoginStateByEmailAddress
            </summary>
            <param name="emailAddress">The email address associated with the customer account.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.GetLoginStateByUserNameUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetLoginStateByUserName
            </summary>
            <param name="responseFields"></param>
            <param name="userName">The user name associated with the customer account.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.ResetPasswordUrl">
            <summary>
            Get Resource Url for ResetPassword
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.UpdateAccountUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateAccount
            </summary>
            <param name="accountId">Unique identifier of the customer account.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAccountUrl.DeleteAccountUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteAccount
            </summary>
            <param name="accountId">Unique identifier of the customer account to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAuthTicketUrl.CreateAnonymousShopperAuthTicketUrl">
            <summary>
            Get Resource Url for CreateAnonymousShopperAuthTicket
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAuthTicketUrl.CreateUserAuthTicketUrl(System.String)">
            <summary>
            Get Resource Url for CreateUserAuthTicket
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerAuthTicketUrl.RefreshUserAuthTicketUrl(System.String,System.String)">
            <summary>
            Get Resource Url for RefreshUserAuthTicket
            </summary>
            <param name="refreshToken">The refresh token string required to refresh a user's authentication ticket.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerSegmentUrl.GetSegmentsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetSegments
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerSegmentUrl.GetSegmentUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetSegment
            </summary>
            <param name="id">Unique identifier of the customer segment to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerSegmentUrl.AddSegmentUrl(System.String)">
            <summary>
            Get Resource Url for AddSegment
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerSegmentUrl.AddSegmentAccountsUrl(System.Int32)">
            <summary>
            Get Resource Url for AddSegmentAccounts
            </summary>
            <param name="id">Unique identifier of the customer segment for which to add the associated customer accounts.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerSegmentUrl.UpdateSegmentUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateSegment
            </summary>
            <param name="id">Unique identifier of the customer segment.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerSegmentUrl.DeleteSegmentUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteSegment
            </summary>
            <param name="id">Unique identifier of the customer segment to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.CustomerSegmentUrl.DeleteSegmentAccountsUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteSegmentAccounts
            </summary>
            <param name="id">Unique identifier of the segment from which to remove the customer accounts.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.VisitUrl.GetVisitsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetVisits
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.VisitUrl.GetVisitUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetVisit
            </summary>
            <param name="responseFields"></param>
            <param name="visitId">Unique identifier of the customer visit to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.VisitUrl.AddVisitUrl(System.String)">
            <summary>
            Get Resource Url for AddVisit
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Customer.VisitUrl.UpdateVisitUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateVisit
            </summary>
            <param name="responseFields"></param>
            <param name="visitId">Unique identifier of the customer visit to update.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.InStockNotificationSubscriptionUrl.GetInStockNotificationSubscriptionsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetInStockNotificationSubscriptions
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.InStockNotificationSubscriptionUrl.GetInStockNotificationSubscriptionUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetInStockNotificationSubscription
            </summary>
            <param name="id">Unique identifier of the in-stock notification subscription to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.InStockNotificationSubscriptionUrl.AddInStockNotificationSubscriptionUrl(System.String)">
            <summary>
            Get Resource Url for AddInStockNotificationSubscription
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.InStockNotificationSubscriptionUrl.DeleteInStockNotificationSubscriptionUrl(System.Int32)">
            <summary>
            Get Resource Url for DeleteInStockNotificationSubscription
            </summary>
            <param name="id">Unique identifier of the customer in-stock notification subscription to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.LocationUrl.GetLocationUrl(System.String)">
            <summary>
            Get Resource Url for GetLocation
            </summary>
            <param name="code">User-defined code that identifies the location.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.LocationUrl.GetLocationInUsageTypeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetLocationInUsageType
            </summary>
            <param name="code">Retrieves the details of a location associated with a defined location usage type for the site specified in the request.</param>
            <param name="locationUsageType">System-defined location usage type code, which is DS for direct ship, SP for in-store pickup, or storeFinder.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.LocationUrl.GetLocationsInUsageTypeUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get Resource Url for GetLocationsInUsageType
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="locationUsageType">System-defined location usage type code, which is DS for direct ship, SP for in-store pickup, or storeFinder.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.LocationUrl.GetDirectShipLocationUrl">
            <summary>
            Get Resource Url for GetDirectShipLocation
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.LocationUrl.GetInStorePickupLocationUrl(System.String)">
            <summary>
            Get Resource Url for GetInStorePickupLocation
            </summary>
            <param name="code">The user-defined code that identifies the location to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.LocationUrl.GetInStorePickupLocationsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get Resource Url for GetInStorePickupLocations
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AdjustmentUrl.ApplyShippingAdjustmentUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for ApplyShippingAdjustment
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipping adjustment.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to apply the shipping adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AdjustmentUrl.ApplyAdjustmentUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for ApplyAdjustment
            </summary>
            <param name="orderId">Unique identifier of the order for which to apply the adjustment.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to apply the adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AdjustmentUrl.RemoveShippingAdjustmentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for RemoveShippingAdjustment
            </summary>
            <param name="orderId">Unique identifier of the order with the applied shipping adjustment.</param>
            <param name="updateMode">Specifies whether to remove the shipping adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AdjustmentUrl.RemoveAdjustmentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for RemoveAdjustment
            </summary>
            <param name="orderId">Unique identifier of the order for which to delete the adjustment.</param>
            <param name="updateMode">Specifies whether to remove the adjustment by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AppliedDiscountUrl.ApplyCouponUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for ApplyCoupon
            </summary>
            <param name="couponCode">Alphanumeric code associated with the coupon or promotion that results in a discounted price.</param>
            <param name="orderId">Unique identifier of the order to associate the coupon. System-supplied and read-only.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to apply the coupon by updating the original order, updating the order in draft mode, or updating the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AppliedDiscountUrl.RemoveCouponUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for RemoveCoupon
            </summary>
            <param name="couponCode">Alphanumeric code associated with the coupon or promotion that results in a discounted price.</param>
            <param name="orderId">Unique identifier of the order with the coupon to remove.</param>
            <param name="updateMode">Specifies whether to remove the coupon by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.AppliedDiscountUrl.RemoveCouponsUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for RemoveCoupons
            </summary>
            <param name="orderId">Unique identifier of the order with the coupons to remove.</param>
            <param name="updateMode">Specifies whether to remove coupons by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeUrl.GetAttributesUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetAttributes
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeUrl.GetAttributeVocabularyValuesUrl(System.String)">
            <summary>
            Get Resource Url for GetAttributeVocabularyValues
            </summary>
            <param name="attributeFQN"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.Attributedefinition.AttributeUrl.GetAttributeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAttribute
            </summary>
            <param name="attributeFQN"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.BillingInfoUrl.GetBillingInfoUrl(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetBillingInfo
            </summary>
            <param name="draft">If true, retrieve the draft version of the order billing information, which might include uncommitted changes.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.BillingInfoUrl.SetBillingInfoUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for SetBillingInfo
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to set the billing information by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.DigitalPackageUrl.GetAvailableDigitalPackageFulfillmentActionsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAvailableDigitalPackageFulfillmentActions
            </summary>
            <param name="digitalPackageId"></param>
            <param name="orderId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.DigitalPackageUrl.GetDigitalPackageUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetDigitalPackage
            </summary>
            <param name="digitalPackageId"></param>
            <param name="orderId"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.DigitalPackageUrl.CreateDigitalPackageUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreateDigitalPackage
            </summary>
            <param name="orderId"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.DigitalPackageUrl.UpdateDigitalPackageUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateDigitalPackage
            </summary>
            <param name="digitalPackageId"></param>
            <param name="orderId"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.DigitalPackageUrl.DeleteDigitalPackageUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteDigitalPackage
            </summary>
            <param name="digitalPackageId"></param>
            <param name="orderId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.FulfillmentActionUrl.PerformFulfillmentActionUrl(System.String,System.String)">
            <summary>
            Get Resource Url for PerformFulfillmentAction
            </summary>
            <param name="orderId">Unique identifier of the order for which to perform the fulfillment action.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.FulfillmentInfoUrl.GetFulfillmentInfoUrl(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetFulfillmentInfo
            </summary>
            <param name="draft">If true, retrieve the draft version of the order's fulfillment information, which might include uncommitted changes.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.FulfillmentInfoUrl.SetFulFillmentInfoUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for SetFulFillmentInfo
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to set the fulfillment information by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderAttributeUrl.GetOrderAttributesUrl(System.String)">
            <summary>
            Get Resource Url for GetOrderAttributes
            </summary>
            <param name="orderId">Unique identifier of the order for which to retrieve a list of defined attributes.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderAttributeUrl.CreateOrderAttributesUrl(System.String)">
            <summary>
            Get Resource Url for CreateOrderAttributes
            </summary>
            <param name="orderId">Unique identifier of the order for which to assign the attributes.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderAttributeUrl.UpdateOrderAttributesUrl(System.String,System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for UpdateOrderAttributes
            </summary>
            <param name="orderId">Identifier of the order for which to update attributes.</param>
            <param name="removeMissing">If true, the operation removes missing properties so that the updated order attributes will not show properties with a null value.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.GetOrderItemUrl(System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetOrderItem
            </summary>
            <param name="draft">If true, retrieve the draft version of this order item, which might include uncommitted changes to the order item, the order, or other order components.</param>
            <param name="orderId">Unique identifier of the order item to retrieve.</param>
            <param name="orderItemId">Unique identifier of the order item details to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.GetOrderItemsUrl(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetOrderItems
            </summary>
            <param name="draft">If true, retrieve the draft version of the order's items, which might include uncommitted changes to one or more order items, the order itself, or other order components.</param>
            <param name="orderId">Unique identifier of the order items to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.CreateOrderItemUrl(System.String,System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for CreateOrderItem
            </summary>
            <param name="orderId">Unique identifier of the order for which to add the item.</param>
            <param name="responseFields"></param>
            <param name="skipInventoryCheck">If true, do not validate the product inventory when adding this item to the order.</param>
            <param name="updateMode">Specifies whether to add the item by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.UpdateOrderItemDiscountUrl(System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateOrderItemDiscount
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order associated with the item discount.</param>
            <param name="orderItemId">Unique identifier of the item in the order.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to change the item discount by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.UpdateItemFulfillmentUrl(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateItemFulfillment
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="orderItemId">Unique identifier of the item in the order.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to apply the coupon by updating the original order, updating the order in draft mode, or updating the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.UpdateItemProductPriceUrl(System.String,System.String,System.Decimal,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateItemProductPrice
            </summary>
            <param name="orderId">Unique identifier of the order containing the item to price override.</param>
            <param name="orderItemId">Unique identifier of the item in the order to price override.</param>
            <param name="price">The override price to specify for this item in the specified order.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to change the product price by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.UpdateItemQuantityUrl(System.String,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateItemQuantity
            </summary>
            <param name="orderId">Unique identifier of the order containing the item to update quantity.</param>
            <param name="orderItemId">Unique identifier of the item in the order to update quantity.</param>
            <param name="quantity">The quantity of the item in the order to update.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to change the item quantity by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderItemUrl.DeleteOrderItemUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for DeleteOrderItem
            </summary>
            <param name="orderId">Unique identifier of the order with the item to remove.</param>
            <param name="orderItemId">Unique identifier of the item to remove from the order.</param>
            <param name="updateMode">Specifies whether to remove the item by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderNoteUrl.GetOrderNotesUrl(System.String)">
            <summary>
            Get Resource Url for GetOrderNotes
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderNoteUrl.GetOrderNoteUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetOrderNote
            </summary>
            <param name="noteId">Unique identifier of the order note to retrieve.</param>
            <param name="orderId">Unique identifier of the order associated with the note.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderNoteUrl.CreateOrderNoteUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreateOrderNote
            </summary>
            <param name="orderId">Unique identifier of the order for which to add a note.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderNoteUrl.UpdateOrderNoteUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateOrderNote
            </summary>
            <param name="noteId">Unique identifier of the order note.</param>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderNoteUrl.DeleteOrderNoteUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteOrderNote
            </summary>
            <param name="noteId">Unique identifier of the order note to delete.</param>
            <param name="orderId">Unique identifier of the order associated with the note.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderValidationResultUrl.GetValidationResultsUrl(System.String)">
            <summary>
            Get Resource Url for GetValidationResults
            </summary>
            <param name="orderId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.OrderValidationResultUrl.AddValidationResultUrl(System.String,System.String)">
            <summary>
            Get Resource Url for AddValidationResult
            </summary>
            <param name="orderId"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PackageUrl.GetAvailablePackageFulfillmentActionsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAvailablePackageFulfillmentActions
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package fulfillment.</param>
            <param name="packageId">Unique identifier of the package associated with the fulfillment actions to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PackageUrl.GetPackageLabelUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetPackageLabel
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package label to retrieve.</param>
            <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PackageUrl.GetPackageUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetPackage
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package to retrieve.</param>
            <param name="packageId">Unique identifier of the package to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PackageUrl.CreatePackageUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreatePackage
            </summary>
            <param name="orderId">Unique identifier of the order associated with this package.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PackageUrl.UpdatePackageUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdatePackage
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package to update.</param>
            <param name="packageId">Unique identifier of the package of order items to update.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PackageUrl.DeletePackageUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeletePackage
            </summary>
            <param name="orderId">Unique identifier of the order associated with the package to delete.</param>
            <param name="packageId">Unique identifier of the package to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PaymentUrl.GetPaymentsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetPayments
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PaymentUrl.GetAvailablePaymentActionsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAvailablePaymentActions
            </summary>
            <param name="orderId">Unique identifier of the order associated with the payment.</param>
            <param name="paymentId">Unique identifer of the payment for which to retrieve available actions.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PaymentUrl.GetPaymentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetPayment
            </summary>
            <param name="orderId">Unique identifier of the order associated with the payment transaction.</param>
            <param name="paymentId">Unique identifier of the payment transaction submitted for the order.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PaymentUrl.PerformPaymentActionUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for PerformPaymentAction
            </summary>
            <param name="orderId">Unique identifier of the order associated with the payment.</param>
            <param name="paymentId">Unique identifer of the payment for which to perform the action.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PaymentUrl.CreatePaymentActionUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreatePaymentAction
            </summary>
            <param name="orderId">Unique identifier of the order for which to apply the payment.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PickupUrl.GetAvailablePickupFulfillmentActionsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAvailablePickupFulfillmentActions
            </summary>
            <param name="orderId">Unique identifier of the order associated with the pickup.</param>
            <param name="pickupId">Unique identifier of the pickup for which to retrieve available actions.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PickupUrl.GetPickupUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetPickup
            </summary>
            <param name="orderId">Unique identifier of the order associated with the pickup.</param>
            <param name="pickupId">Unique identifier of the pickup to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PickupUrl.CreatePickupUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreatePickup
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PickupUrl.UpdatePickupUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdatePickup
            </summary>
            <param name="orderId">Unique identifier of the order associated with the in-store pickup.</param>
            <param name="pickupId">Unique identifier of the pickup to update.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.PickupUrl.DeletePickupUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeletePickup
            </summary>
            <param name="orderId">Unique identifier of the order associated with the pickup.</param>
            <param name="pickupId">Unique identifier of the pickup to remove.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ShipmentUrl.GetShipmentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetShipment
            </summary>
            <param name="orderId">Unique identifier of the order associated with the shipment to retrieve.</param>
            <param name="responseFields"></param>
            <param name="shipmentId">Unique identifier of the shipment to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ShipmentUrl.GetAvailableShipmentMethodsUrl(System.String,System.Nullable{System.Boolean})">
            <summary>
            Get Resource Url for GetAvailableShipmentMethods
            </summary>
            <param name="draft"></param>
            <param name="orderId">Unique identifier of the order for the available shipment methods being retrieved.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ShipmentUrl.CreatePackageShipmentsUrl(System.String)">
            <summary>
            Get Resource Url for CreatePackageShipments
            </summary>
            <param name="orderId">Unique identifier of the order for this shipment.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Orders.ShipmentUrl.DeleteShipmentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteShipment
            </summary>
            <param name="orderId">Unique identifier of the order to cancel shipment.</param>
            <param name="shipmentId">Unique identifier of the shipment to cancel.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.GetOrdersUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for GetOrders
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter an order's search results by any of its properties, including status, contact information, or total. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=Status+eq+Submitted"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of order search terms to use in the query when searching across order number and the name or email of the billing contact. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.GetAvailableActionsUrl(System.String)">
            <summary>
            Get Resource Url for GetAvailableActions
            </summary>
            <param name="orderId">Unique identifier of the available order actions to get.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.GetTaxableOrdersUrl(System.String)">
            <summary>
            Get Resource Url for GetTaxableOrders
            </summary>
            <param name="orderId">Unique identifier of the order to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.GetOrderUrl(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Get Resource Url for GetOrder
            </summary>
            <param name="draft">If true, retrieve the draft version of the order, which might include uncommitted changes to the order or its components.</param>
            <param name="orderId">Unique identifier of the order details to get.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.CreateOrderFromCartUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreateOrderFromCart
            </summary>
            <param name="cartId">Unique identifier of the cart. This is the original cart ID expressed as a GUID.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.CreateOrderUrl(System.String)">
            <summary>
            Get Resource Url for CreateOrder
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.PerformOrderActionUrl(System.String,System.String)">
            <summary>
            Get Resource Url for PerformOrderAction
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.UpdateOrderDiscountUrl(System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateOrderDiscount
            </summary>
            <param name="discountId">Unique identifier of the discount. System-supplied and read only.</param>
            <param name="orderId">Unique identifier of the order discount. System-supplied and read only.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to modify the discount by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.DeleteOrderDraftUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteOrderDraft
            </summary>
            <param name="orderId">Unique identifier of the order associated with the draft to delete.</param>
            <param name="version">If applicable, the version of the order draft to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.ChangeOrderUserIdUrl(System.String,System.String)">
            <summary>
            Get Resource Url for ChangeOrderUserId
            </summary>
            <param name="orderId">Unique identifier of the order.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.OrderUrl.UpdateOrderUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateOrder
            </summary>
            <param name="orderId">Unique identifier of the order to update.</param>
            <param name="responseFields"></param>
            <param name="updateMode">Specifies whether to update the original order, update the order in draft mode, or update the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."</param>
            <param name="version">System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.PackageUrl.GetPackageLabelUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetPackageLabel
            </summary>
            <param name="packageId">Unique identifier of the return replacement package for which to retrieve the label.</param>
            <param name="returnId">Unique identifier of the return associated with the replacement package label to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.PackageUrl.GetPackageUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetPackage
            </summary>
            <param name="packageId">Unique identifier of the return replacement package to retrieve.</param>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return associated with the replacement package to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.PackageUrl.CreatePackageUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreatePackage
            </summary>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return for which to create a replacement package.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.PackageUrl.UpdatePackageUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdatePackage
            </summary>
            <param name="packageId">Unique identifier of the return replacement package to update.</param>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return associated with the replacement package to update.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.PackageUrl.DeletePackageUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeletePackage
            </summary>
            <param name="packageId">Unique identifier of the return replacement package to delete.</param>
            <param name="returnId">Unique identifier of the return associated with the replacement package to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.ShipmentUrl.GetShipmentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetShipment
            </summary>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return associated with the replacement shipment to retrieve.</param>
            <param name="shipmentId">Unique identifier of the return replacement shipment to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.ShipmentUrl.CreatePackageShipmentsUrl(System.String)">
            <summary>
            Get Resource Url for CreatePackageShipments
            </summary>
            <param name="returnId">Unique identifier of the return for which to create replacement package shipments.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Returns.ShipmentUrl.DeleteShipmentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteShipment
            </summary>
            <param name="returnId">Unique identifier of the return associated with the replacement shipment to delete.</param>
            <param name="shipmentId">Unique identifier of the return replacement shipment to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetReturnsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetReturns
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetAvailableReturnActionsUrl(System.String)">
            <summary>
            Get Resource Url for GetAvailableReturnActions
            </summary>
            <param name="returnId">Unique identifier of the return for which to retrieve available actions.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetReturnItemUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetReturnItem
            </summary>
            <param name="responseFields"></param>
            <param name="returnId"></param>
            <param name="returnItemId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetReturnItemsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetReturnItems
            </summary>
            <param name="responseFields"></param>
            <param name="returnId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetAvailablePaymentActionsForReturnUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetAvailablePaymentActionsForReturn
            </summary>
            <param name="paymentId">Unique identifier of the payment for which to perform the action.</param>
            <param name="returnId">Unique identifier of the return associated with the payment.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetPaymentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetPayment
            </summary>
            <param name="paymentId">Unique identifier of the return payment to retrieve.</param>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return associated with the payment.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetPaymentsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetPayments
            </summary>
            <param name="responseFields"></param>
            <param name="returnId">Returns the details of the refund payment associated with the return specified in the request.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.GetReturnUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetReturn
            </summary>
            <param name="responseFields"></param>
            <param name="returnId">Returns the properties of the return specified in the request as well as system-supplied information.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.CreateReturnUrl(System.String)">
            <summary>
            Get Resource Url for CreateReturn
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.CreateReturnItemUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreateReturnItem
            </summary>
            <param name="responseFields"></param>
            <param name="returnId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.PerformPaymentActionForReturnUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for PerformPaymentActionForReturn
            </summary>
            <param name="paymentId">Unique identifier of the return payment to update.</param>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return associated with the refund payment.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.CreatePaymentActionForReturnUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreatePaymentActionForReturn
            </summary>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return associated with the payment action.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.PerformReturnActionsUrl(System.String)">
            <summary>
            Get Resource Url for PerformReturnActions
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.UpdateReturnUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateReturn
            </summary>
            <param name="responseFields"></param>
            <param name="returnId">Unique identifier of the return.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.DeleteOrderItemUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteOrderItem
            </summary>
            <param name="returnId"></param>
            <param name="returnItemId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.ReturnUrl.DeleteReturnUrl(System.String)">
            <summary>
            Get Resource Url for DeleteReturn
            </summary>
            <param name="returnId">Unique identifier of the return to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.ApplicationUrl.ThirdPartyGetApplicationUrl(System.String)">
            <summary>
            Get Resource Url for ThirdPartyGetApplication
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.ApplicationUrl.ThirdPartyUpdateApplicationUrl(System.String)">
            <summary>
            Get Resource Url for ThirdPartyUpdateApplication
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Checkout.CustomerCheckoutSettingsUrl.GetCustomerCheckoutSettingsUrl(System.String)">
            <summary>
            Get Resource Url for GetCustomerCheckoutSettings
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Checkout.CustomerCheckoutSettingsUrl.UpdateCustomerCheckoutSettingsUrl(System.String)">
            <summary>
            Get Resource Url for UpdateCustomerCheckoutSettings
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Checkout.PaymentSettingsUrl.GetThirdPartyPaymentWorkflowsUrl">
            <summary>
            Get Resource Url for GetThirdPartyPaymentWorkflows
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.CheckoutSettingsUrl.GetCheckoutSettingsUrl(System.String)">
            <summary>
            Get Resource Url for GetCheckoutSettings
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.General.TaxableTerritoryUrl.GetTaxableTerritoriesUrl">
            <summary>
            Get Resource Url for GetTaxableTerritories
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.General.TaxableTerritoryUrl.AddTaxableTerritoryUrl(System.String)">
            <summary>
            Get Resource Url for AddTaxableTerritory
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.General.TaxableTerritoryUrl.UpdateTaxableTerritoriesUrl">
            <summary>
            Get Resource Url for UpdateTaxableTerritories
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.GeneralSettingsUrl.GetGeneralSettingsUrl(System.String)">
            <summary>
            Get Resource Url for GetGeneralSettings
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.GeneralSettingsUrl.UpdateGeneralSettingsUrl(System.String)">
            <summary>
            Get Resource Url for UpdateGeneralSettings
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.LocationUsageUrl.GetLocationUsagesUrl">
            <summary>
            Get Resource Url for GetLocationUsages
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.LocationUsageUrl.GetLocationUsageUrl(System.String)">
            <summary>
            Get Resource Url for GetLocationUsage
            </summary>
            <param name="code">Code that identifies the location usage type, which is "DS" for direct ship, "SP" for in-store pickup, or "storeFinder" for store finder.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.LocationUsageUrl.UpdateLocationUsageUrl(System.String)">
            <summary>
            Get Resource Url for UpdateLocationUsage
            </summary>
            <param name="code">Code that identifies the location usage type, which is "DS" for direct ship, "SP" for in-store pickup, or "storeFinder" for store finder.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Shipping.SiteShippingHandlingFeeUrl.GetOrderHandlingFeeUrl(System.String)">
            <summary>
            Get Resource Url for GetOrderHandlingFee
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Shipping.SiteShippingHandlingFeeUrl.CreateOrderHandlingFeeUrl(System.String)">
            <summary>
            Get Resource Url for CreateOrderHandlingFee
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.Shipping.SiteShippingHandlingFeeUrl.UpdateOrderHandlingFeeUrl(System.String)">
            <summary>
            Get Resource Url for UpdateOrderHandlingFee
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Settings.SiteShippingSettingsUrl.GetSiteShippingSettingsUrl(System.String)">
            <summary>
            Get Resource Url for GetSiteShippingSettings
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Wishlists.WishlistItemUrl.GetWishlistItemUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetWishlistItem
            </summary>
            <param name="responseFields"></param>
            <param name="wishlistId">Unique identifier of the wish list item to retrieve.</param>
            <param name="wishlistItemId">Unique identifier of the wish list associated with the item to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Wishlists.WishlistItemUrl.GetWishlistItemsUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetWishlistItems
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="wishlistId">Unique identifier of the wish list associated with the items to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Wishlists.WishlistItemUrl.GetWishlistItemsByWishlistNameUrl(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetWishlistItemsByWishlistName
            </summary>
            <param name="customerAccountId">The unique identifier of the customer account associated with the wish list.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <param name="wishlistName">The name of the wish list that contains the items to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Wishlists.WishlistItemUrl.AddItemToWishlistUrl(System.String,System.String)">
            <summary>
            Get Resource Url for AddItemToWishlist
            </summary>
            <param name="responseFields"></param>
            <param name="wishlistId">Unique identifier of the wish list associated with the item to add.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Wishlists.WishlistItemUrl.UpdateWishlistItemQuantityUrl(System.String,System.String,System.Int32,System.String)">
            <summary>
            Get Resource Url for UpdateWishlistItemQuantity
            </summary>
            <param name="quantity">The quantity of the item in the wish list.</param>
            <param name="responseFields"></param>
            <param name="wishlistId">Unique identifier of the wish list associated with the item quantity to update.</param>
            <param name="wishlistItemId">Unique identifier of the item in the wish list to update quantity.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Wishlists.WishlistItemUrl.UpdateWishlistItemUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateWishlistItem
            </summary>
            <param name="responseFields"></param>
            <param name="wishlistId">Unique identifier of the wish list associated with the item to update.</param>
            <param name="wishlistItemId">Unique identifier of the item in the shopper wish list to update.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Wishlists.WishlistItemUrl.RemoveAllWishlistItemsUrl(System.String)">
            <summary>
            Get Resource Url for RemoveAllWishlistItems
            </summary>
            <param name="wishlistId">Unique identifier of the wish list associated with the items to remove.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.Wishlists.WishlistItemUrl.DeleteWishlistItemUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteWishlistItem
            </summary>
            <param name="wishlistId">Unique identifier of the wish list associated with the item to remove.</param>
            <param name="wishlistItemId">Unique identifier of the item to remove from the shopper wish list.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.WishlistUrl.GetWishlistsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for GetWishlists
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="q">A list of search terms to use in the query when searching across wish list name. Separate multiple search terms with a space character.</param>
            <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.WishlistUrl.GetWishlistUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetWishlist
            </summary>
            <param name="responseFields"></param>
            <param name="wishlistId">Unique identifier of the shopper wish list to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.WishlistUrl.GetWishlistByNameUrl(System.Int32,System.String,System.String)">
            <summary>
            Get Resource Url for GetWishlistByName
            </summary>
            <param name="customerAccountId">The unique identifier of the customer account for which to retrieve wish lists.</param>
            <param name="responseFields"></param>
            <param name="wishlistName">The name of the wish list to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.WishlistUrl.CreateWishlistUrl(System.String)">
            <summary>
            Get Resource Url for CreateWishlist
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.WishlistUrl.UpdateWishlistUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateWishlist
            </summary>
            <param name="responseFields"></param>
            <param name="wishlistId">Unique identifier of the shopper wish list to update.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Commerce.WishlistUrl.DeleteWishlistUrl(System.String)">
            <summary>
            Get Resource Url for DeleteWishlist
            </summary>
            <param name="wishlistId">Unique identifier of the wish list to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentDraftSummaryUrl.ListDocumentDraftSummariesUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get Resource Url for ListDocumentDraftSummaries
            </summary>
            <param name="documentLists">Lists that contain the document drafts.</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentDraftSummaryUrl.DeleteDocumentDraftsUrl(System.String)">
            <summary>
            Get Resource Url for DeleteDocumentDrafts
            </summary>
            <param name="documentLists">List of document lists that contain documents to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentDraftSummaryUrl.PublishDocumentsUrl(System.String)">
            <summary>
            Get Resource Url for PublishDocuments
            </summary>
            <param name="documentLists">List of document lists that contain documents to publish.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentTreeUrl.GetTreeDocumentContentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetTreeDocumentContent
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentTreeUrl.GetTreeDocumentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetTreeDocument
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentTreeUrl.UpdateTreeDocumentContentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateTreeDocumentContent
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentTreeUrl.DeleteTreeDocumentContentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteTreeDocumentContent
            </summary>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <param name="documentName">The name of the document, which is unique within its folder.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.GetDocumentContentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetDocumentContent
            </summary>
            <param name="documentId">Unique identifier of the document.</param>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.GetDocumentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetDocument
            </summary>
            <param name="documentId">Identifier of the document being retrieved.</param>
            <param name="documentListName">The name of the document list associated with the document to retrieve.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.GetDocumentsUrl(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for GetDocuments
            </summary>
            <param name="documentListName">The name of the document list.</param>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter a document's search results by any of its properties, including its name or folder path. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=Name+sw+Events"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
            <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.CreateDocumentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreateDocument
            </summary>
            <param name="documentListName">The descriptive alphanumeric document list name being created.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.UpdateDocumentContentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateDocumentContent
            </summary>
            <param name="documentId">Unique identifier of the document.</param>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.UpdateDocumentUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateDocument
            </summary>
            <param name="documentId">Unique identifier of the document to update.</param>
            <param name="documentListName">Name of the document list associated with the document.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.DeleteDocumentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteDocument
            </summary>
            <param name="documentId">Identifier of the document being deleted.</param>
            <param name="documentListName">The name of the document list associated with the document list being deleted.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.DocumentUrl.DeleteDocumentContentUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteDocumentContent
            </summary>
            <param name="documentId">Unique identifier of the document.</param>
            <param name="documentListName">The name of the document list associated with the document.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.FacetUrl.GetFacetsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetFacets
            </summary>
            <param name="documentListName">The document list associated with the facets to retrieve.</param>
            <param name="propertyName">The property name associated with the facets to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.ViewUrl.GetViewDocumentsUrl(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for GetViewDocuments
            </summary>
            <param name="documentListName"></param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="viewName"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.ViewUrl.GetDocumentListViewUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetDocumentListView
            </summary>
            <param name="documentListName"></param>
            <param name="responseFields"></param>
            <param name="viewName"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.ViewUrl.GetDocumentListViewsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetDocumentListViews
            </summary>
            <param name="documentListName"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.ViewUrl.UpdateDocumentListViewUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateDocumentListView
            </summary>
            <param name="documentListName"></param>
            <param name="responseFields"></param>
            <param name="viewName"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.Documentlists.ViewUrl.DeleteDocumentListViewUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteDocumentListView
            </summary>
            <param name="documentListName"></param>
            <param name="viewName"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentListTypeUrl.CreateDocumentListTypeUrl(System.String)">
            <summary>
            Get Resource Url for CreateDocumentListType
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentListTypeUrl.UpdateDocumentListTypeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateDocumentListType
            </summary>
            <param name="documentListTypeFQN"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentListUrl.GetDocumentListsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for GetDocumentLists
            </summary>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentListUrl.GetDocumentListUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetDocumentList
            </summary>
            <param name="documentListName">The name of the document list.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentListUrl.CreateDocumentListUrl(System.String)">
            <summary>
            Get Resource Url for CreateDocumentList
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentListUrl.UpdateDocumentListUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateDocumentList
            </summary>
            <param name="documentListName"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentListUrl.LegacyR4_UpdateDocumentContentUrl(System.String)">
            <summary>
            Get Resource Url for LegacyR4_UpdateDocumentContent
            </summary>
            <param name="documentId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentListUrl.DeleteDocumentListUrl(System.String)">
            <summary>
            Get Resource Url for DeleteDocumentList
            </summary>
            <param name="documentListName"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentTypeUrl.GetDocumentTypesUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for GetDocumentTypes
            </summary>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentTypeUrl.GetDocumentTypeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetDocumentType
            </summary>
            <param name="documentTypeName"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentTypeUrl.CreateDocumentTypeUrl(System.String)">
            <summary>
            Get Resource Url for CreateDocumentType
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.DocumentTypeUrl.UpdateDocumentTypeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateDocumentType
            </summary>
            <param name="documentTypeName"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.PropertyTypeUrl.GetPropertyTypesUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for GetPropertyTypes
            </summary>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.PropertyTypeUrl.GetPropertyTypeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetPropertyType
            </summary>
            <param name="propertyTypeName"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.PropertyTypeUrl.CreatePropertyTypeUrl(System.String)">
            <summary>
            Get Resource Url for CreatePropertyType
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.PropertyTypeUrl.UpdatePropertyTypeUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdatePropertyType
            </summary>
            <param name="propertyTypeName"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Content.PropertyTypeUrl.DeletePropertyTypeUrl(System.String)">
            <summary>
            Get Resource Url for DeletePropertyType
            </summary>
            <param name="propertyTypeName"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Event.EventNotificationUrl.GetEventsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetEvents
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Event.EventNotificationUrl.GetEventUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetEvent
            </summary>
            <param name="eventId">The unique identifier of the event being retrieved. An event is a notification about a create, read, update, or delete on an order, product, discount or category.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Event.Push.Subscriptions.EventDeliverySummaryUrl.GetDeliveryAttemptSummaryUrl(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for GetDeliveryAttemptSummary
            </summary>
            <param name="id"></param>
            <param name="responseFields"></param>
            <param name="subscriptionId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Event.Push.Subscriptions.EventDeliverySummaryUrl.GetDeliveryAttemptSummariesUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetDeliveryAttemptSummaries
            </summary>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <param name="subscriptionId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Event.Push.SubscriptionUrl.GetSubscriptionsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetSubscriptions
            </summary>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Adminuser.AdminUserUrl.GetTenantScopesForUserUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetTenantScopesForUser
            </summary>
            <param name="responseFields"></param>
            <param name="userId">Unique identifier of the user whose tenant scopes you want to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Adminuser.AdminUserUrl.GetUserUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetUser
            </summary>
            <param name="responseFields"></param>
            <param name="userId">Unique identifier of the administrator account to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Adminuser.TenantAdminUserAuthTicketUrl.CreateUserAuthTicketUrl(System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for CreateUserAuthTicket
            </summary>
            <param name="responseFields"></param>
            <param name="tenantId">Unique identifier of the development or production tenant for which to generate the user authentication ticket.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Adminuser.TenantAdminUserAuthTicketUrl.RefreshAuthTicketUrl(System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for RefreshAuthTicket
            </summary>
            <param name="responseFields"></param>
            <param name="tenantId"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Adminuser.TenantAdminUserAuthTicketUrl.DeleteUserAuthTicketUrl(System.String)">
            <summary>
            Get Resource Url for DeleteUserAuthTicket
            </summary>
            <param name="refreshToken">Refresh token string associated with the user authentication ticket.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Applications.AuthTicketUrl.AuthenticateAppUrl(System.String)">
            <summary>
            Get Resource Url for AuthenticateApp
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Applications.AuthTicketUrl.RefreshAppAuthTicketUrl(System.String)">
            <summary>
            Get Resource Url for RefreshAppAuthTicket
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Applications.AuthTicketUrl.DeleteAppAuthTicketUrl(System.String)">
            <summary>
            Get Resource Url for DeleteAppAuthTicket
            </summary>
            <param name="refreshToken">The refresh token string from the application's authentication ticket.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ApplicationUrl.GetApplicationUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetApplication
            </summary>
            <param name="appId"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ApplicationUrl.UpdateApplicationUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateApplication
            </summary>
            <param name="appId"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Developer.DeveloperAdminUserAuthTicketUrl.CreateDeveloperUserAuthTicketUrl(System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for CreateDeveloperUserAuthTicket
            </summary>
            <param name="developerAccountId">Unique identifier of the developer account.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Developer.DeveloperAdminUserAuthTicketUrl.RefreshDeveloperAuthTicketUrl(System.Nullable{System.Int32},System.String)">
            <summary>
            Get Resource Url for RefreshDeveloperAuthTicket
            </summary>
            <param name="developerAccountId">Unique identifier of the developer account.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Developer.DeveloperAdminUserAuthTicketUrl.DeleteUserAuthTicketUrl(System.String)">
            <summary>
            Get Resource Url for DeleteUserAuthTicket
            </summary>
            <param name="refreshToken">Refresh token string associated with the developer account authentication ticket.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.EntityContainerUrl.GetEntityContainerUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetEntityContainer
            </summary>
            <param name="entityListFullName"></param>
            <param name="id"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.EntityContainerUrl.GetEntityContainersUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetEntityContainers
            </summary>
            <param name="entityListFullName"></param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.EntityUrl.GetEntityUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetEntity
            </summary>
            <param name="entityListFullName"></param>
            <param name="id"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.EntityUrl.GetEntitiesUrl(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetEntities
            </summary>
            <param name="entityListFullName"></param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.EntityUrl.InsertEntityUrl(System.String,System.String)">
            <summary>
            Get Resource Url for InsertEntity
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.EntityUrl.UpdateEntityUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateEntity
            </summary>
            <param name="entityListFullName"></param>
            <param name="id"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.EntityUrl.DeleteEntityUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteEntity
            </summary>
            <param name="entityListFullName"></param>
            <param name="id"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.ListViewUrl.GetViewEntityUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetViewEntity
            </summary>
            <param name="entityId"></param>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <param name="viewName"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.ListViewUrl.GetViewEntitiesUrl(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get Resource Url for GetViewEntities
            </summary>
            <param name="entityListFullName"></param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="startIndex"></param>
            <param name="viewName"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.ListViewUrl.GetViewEntityContainerUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetViewEntityContainer
            </summary>
            <param name="entityId"></param>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <param name="viewName"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.ListViewUrl.GetViewEntityContainersUrl(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Get Resource Url for GetViewEntityContainers
            </summary>
            <param name="entityListFullName"></param>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="startIndex"></param>
            <param name="viewName"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.ListViewUrl.GetEntityListViewUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetEntityListView
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <param name="viewName"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.ListViewUrl.GetEntityListViewsUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetEntityListViews
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.ListViewUrl.CreateEntityListViewUrl(System.String,System.String)">
            <summary>
            Get Resource Url for CreateEntityListView
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.ListViewUrl.UpdateEntityListViewUrl(System.String,System.String,System.String)">
            <summary>
            Get Resource Url for UpdateEntityListView
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <param name="viewName"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.Entitylists.ListViewUrl.DeleteEntityListViewUrl(System.String,System.String)">
            <summary>
            Get Resource Url for DeleteEntityListView
            </summary>
            <param name="entityListFullName"></param>
            <param name="viewName"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.EntityListUrl.GetEntityListsUrl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get Resource Url for GetEntityLists
            </summary>
            <param name="filter"></param>
            <param name="pageSize"></param>
            <param name="responseFields"></param>
            <param name="sortBy"></param>
            <param name="startIndex"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.EntityListUrl.GetEntityListUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetEntityList
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.EntityListUrl.CreateEntityListUrl(System.String)">
            <summary>
            Get Resource Url for CreateEntityList
            </summary>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.EntityListUrl.UpdateEntityListUrl(System.String,System.String)">
            <summary>
            Get Resource Url for UpdateEntityList
            </summary>
            <param name="entityListFullName"></param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.EntityListUrl.DeleteEntityListUrl(System.String)">
            <summary>
            Get Resource Url for DeleteEntityList
            </summary>
            <param name="entityListFullName"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetAddressSchemaUrl(System.String)">
            <summary>
            Get Resource Url for GetAddressSchema
            </summary>
            <param name="countryCode">The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetAddressSchemasUrl">
            <summary>
            Get Resource Url for GetAddressSchemas
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetBehaviorUrl(System.Int32)">
            <summary>
            Get Resource Url for GetBehavior
            </summary>
            <param name="behaviorId">Unique identifier of the behavior.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetBehaviorCategoriesUrl">
            <summary>
            Get Resource Url for GetBehaviorCategories
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetBehaviorCategoryUrl(System.Int32)">
            <summary>
            Get Resource Url for GetBehaviorCategory
            </summary>
            <param name="categoryId">Unique identifier of the behavior category.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetBehaviorsUrl(System.String)">
            <summary>
            Get Resource Url for GetBehaviors
            </summary>
            <param name="userType">The user type associated with the behaviors to retrieve.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetContentLocalesUrl">
            <summary>
            Get Resource Url for GetContentLocales
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetCountriesUrl">
            <summary>
            Get Resource Url for GetCountries
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetCurrenciesUrl">
            <summary>
            Get Resource Url for GetCurrencies
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetTimeZonesUrl">
            <summary>
            Get Resource Url for GetTimeZones
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetTopLevelDomainsUrl">
            <summary>
            Get Resource Url for GetTopLevelDomains
            </summary>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.ReferenceDataUrl.GetUnitsOfMeasureUrl(System.String)">
            <summary>
            Get Resource Url for GetUnitsOfMeasure
            </summary>
            <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.SiteDataUrl.GetDBValueUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetDBValue
            </summary>
            <param name="dbEntryQuery">The database entry query string used to retrieve the record information.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.SiteDataUrl.CreateDBValueUrl(System.String)">
            <summary>
            Get Resource Url for CreateDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.SiteDataUrl.UpdateDBValueUrl(System.String)">
            <summary>
            Get Resource Url for UpdateDBValue
            </summary>
            <param name="dbEntryQuery">The database entry query string used to update the record information.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.SiteDataUrl.DeleteDBValueUrl(System.String)">
            <summary>
            Get Resource Url for DeleteDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.TenantDataUrl.GetDBValueUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetDBValue
            </summary>
            <param name="dbEntryQuery">The database entry query string used to retrieve the record information.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.TenantDataUrl.CreateDBValueUrl(System.String)">
            <summary>
            Get Resource Url for CreateDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.TenantDataUrl.UpdateDBValueUrl(System.String)">
            <summary>
            Get Resource Url for UpdateDBValue
            </summary>
            <param name="dbEntryQuery">The database entry query string used to update the record information.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.TenantDataUrl.DeleteDBValueUrl(System.String)">
            <summary>
            Get Resource Url for DeleteDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.TenantUrl.GetTenantUrl(System.Int32,System.String)">
            <summary>
            Get Resource Url for GetTenant
            </summary>
            <param name="responseFields"></param>
            <param name="tenantId">Unique identifier of the Mozu tenant.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.UserDataUrl.GetDBValueUrl(System.String,System.String)">
            <summary>
            Get Resource Url for GetDBValue
            </summary>
            <param name="dbEntryQuery">The database entry query string used to retrieve the record information.</param>
            <param name="responseFields"></param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.UserDataUrl.CreateDBValueUrl(System.String)">
            <summary>
            Get Resource Url for CreateDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to create.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.UserDataUrl.UpdateDBValueUrl(System.String)">
            <summary>
            Get Resource Url for UpdateDBValue
            </summary>
            <param name="dbEntryQuery">The database entry query string used to update the record information.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
        <member name="M:Mozu.Api.Urls.Platform.UserDataUrl.DeleteDBValueUrl(System.String)">
            <summary>
            Get Resource Url for DeleteDBValue
            </summary>
            <param name="dbEntryQuery">The database entry string to delete.</param>
            <returns>
            String - Resource Url
            </returns>
        </member>
    </members>
</doc>
