
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;


namespace Mozu.Api.Resources.Commerce
{
	/// <summary>
	/// Use the Channel Groups resource to manage groups of channels with common information.
	/// </summary>
	public partial class ChannelGroupResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		public ChannelGroupResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves a list of defined channel groups according to any filter and sort criteria specified in the request.
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var channelgroup = new ChannelGroup();
		///   var channelGroupCollection = channelgroup.GetChannelGroups();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection GetChannelGroups()
		{
			return GetChannelGroups( null,  null,  null,  null);
		}

		/// <summary>
		/// Retrieves a list of defined channel groups according to any filter and sort criteria specified in the request.
		/// </summary>
		/// <param name="filter">FilterSetAll</param>
		/// <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
		/// <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
		/// <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var channelgroup = new ChannelGroup();
		///   var channelGroupCollection = channelgroup.GetChannelGroups( startIndex,  pageSize,  sortBy,  filter);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection GetChannelGroups(int? startIndex =  null, int? pageSize =  null, string sortBy =  null, string filter =  null)
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroupCollection> response;
			var client = Mozu.Api.Clients.Commerce.ChannelGroupClient.GetChannelGroupsClient( startIndex,  pageSize,  sortBy,  filter);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves the details of a defined channel group.
		/// </summary>
		/// <param name="code">The code that uniquely identifies the channel group.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var channelgroup = new ChannelGroup();
		///   var channelGroup = channelgroup.GetChannelGroup( code);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup GetChannelGroup(string code)
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup> response;
			var client = Mozu.Api.Clients.Commerce.ChannelGroupClient.GetChannelGroupClient( code);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Creates a new group of channels with common information.
		/// </summary>
		/// <param name="channelGroup">Properties of the channel group to create.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var channelgroup = new ChannelGroup();
		///   var channelGroup = channelgroup.CreateChannelGroup( channelGroup);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup CreateChannelGroup(Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup channelGroup)
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup> response;
			var client = Mozu.Api.Clients.Commerce.ChannelGroupClient.CreateChannelGroupClient( channelGroup);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Updates one or more properties of a defined channel group.
		/// </summary>
		/// <param name="code">Code that identifies the channel group.</param>
		/// <param name="channelGroup">Properties of the channel group to update.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var channelgroup = new ChannelGroup();
		///   var channelGroup = channelgroup.UpdateChannelGroup( channelGroup,  code);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup UpdateChannelGroup(Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup channelGroup, string code)
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Channels.ChannelGroup> response;
			var client = Mozu.Api.Clients.Commerce.ChannelGroupClient.UpdateChannelGroupClient( channelGroup,  code);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Deletes a defined group of channels, which removes the group association with each channel in the group but does not delete the channel definitions themselves.
		/// </summary>
		/// <param name="code">User-defined code that uniqely identifies the channel group.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var channelgroup = new ChannelGroup();
		///   channelgroup.DeleteChannelGroup( code);
		/// </code>
		/// </example>
		public virtual void DeleteChannelGroup(string code)
		{
			MozuClient response;
			var client = Mozu.Api.Clients.Commerce.ChannelGroupClient.DeleteChannelGroupClient( code);
			client.WithContext(_apiContext);
			response= client.Execute();

		}


	}

}


