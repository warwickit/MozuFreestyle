
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;


namespace Mozu.Api.Resources.Commerce.Catalog.Admin
{
	/// <summary>
	/// Define and manage discounts to apply to products, product categories, or orders. The discounts can be a specified amount off the price, percentage off the price, or for free shipping. Create a coupon code that shoppers can use to redeem the discount.
	/// </summary>
	public partial class DiscountResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		public DiscountResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves a list of discounts according to any specified filter criteria and sort options.
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.DiscountCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   var discountCollection = discount.GetDiscounts(dataViewMode);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.DiscountCollection GetDiscounts(DataViewMode dataViewMode)
		{
			return GetDiscounts(dataViewMode,  null,  null,  null,  null);
		}

		/// <summary>
		/// Retrieves a list of discounts according to any specified filter criteria and sort options.
		/// </summary>
		/// <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
		/// <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
		/// <param name="sortBy"></param>
		/// <param name="startIndex"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.DiscountCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   var discountCollection = discount.GetDiscounts(dataViewMode,  startIndex,  pageSize,  sortBy,  filter);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.DiscountCollection GetDiscounts(DataViewMode dataViewMode, int? startIndex =  null, int? pageSize =  null, string sortBy =  null, string filter =  null)
		{
			MozuClient<Mozu.Api.Contracts.ProductAdmin.DiscountCollection> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GetDiscountsClient(dataViewMode,  startIndex,  pageSize,  sortBy,  filter);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves the details of a single discount.
		/// </summary>
		/// <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.Discount"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   var discount = discount.GetDiscount(dataViewMode,  discountId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.Discount GetDiscount(DataViewMode dataViewMode, int discountId)
		{
			MozuClient<Mozu.Api.Contracts.ProductAdmin.Discount> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GetDiscountClient(dataViewMode,  discountId);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves the localized content specified for the specified discount.
		/// </summary>
		/// <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   var discountLocalizedContent = discount.GetDiscountContent(dataViewMode,  discountId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent GetDiscountContent(DataViewMode dataViewMode, int discountId)
		{
			MozuClient<Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GetDiscountContentClient(dataViewMode,  discountId);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Generates a random code for a coupon.
		/// </summary>
		/// <returns>
		/// string
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   var string = discount.GenerateRandomCoupon(dataViewMode);
		/// </code>
		/// </example>
		public virtual string GenerateRandomCoupon(DataViewMode dataViewMode)
		{
			MozuClient<string> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.GenerateRandomCouponClient(dataViewMode);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Creates a discount.
		/// </summary>
		/// <param name="discount">Properties of the discount to create. Required properties: Content.Name, AmountType, StartDate, and Target.Type.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.Discount"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   var discount = discount.CreateDiscount(dataViewMode,  discount);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.Discount CreateDiscount(DataViewMode dataViewMode, Mozu.Api.Contracts.ProductAdmin.Discount discount)
		{
			MozuClient<Mozu.Api.Contracts.ProductAdmin.Discount> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.CreateDiscountClient(dataViewMode,  discount);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Modifies a discount.
		/// </summary>
		/// <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
		/// <param name="discount">Properties of the discount to update. Required properties: Content.Name, AmountType, StartDate, and Target.Type. Any unspecified properties are set to null and boolean variables are set to false.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.Discount"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   var discount = discount.UpdateDiscount(dataViewMode,  discount,  discountId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.Discount UpdateDiscount(DataViewMode dataViewMode, Mozu.Api.Contracts.ProductAdmin.Discount discount, int discountId)
		{
			MozuClient<Mozu.Api.Contracts.ProductAdmin.Discount> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.UpdateDiscountClient(dataViewMode,  discount,  discountId);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Modifies the localized content for the specified discount. Rename the discount without modifying any other discount properties.
		/// </summary>
		/// <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
		/// <param name="content">New Name and/or LocaleCode. Properties of the content to update. Required property: Name.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   var discountLocalizedContent = discount.UpdateDiscountContent(dataViewMode,  content,  discountId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent UpdateDiscountContent(DataViewMode dataViewMode, Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent content, int discountId)
		{
			MozuClient<Mozu.Api.Contracts.ProductAdmin.DiscountLocalizedContent> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.UpdateDiscountContentClient(dataViewMode,  content,  discountId);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Deletes a discount specified by its discount ID.
		/// </summary>
		/// <param name="discountId">Unique identifier of the discount. System-supplied and read-only.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var discount = new Discount();
		///   discount.DeleteDiscount(dataViewMode,  discountId);
		/// </code>
		/// </example>
		public virtual void DeleteDiscount(DataViewMode dataViewMode, int discountId)
		{
			MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.DiscountClient.DeleteDiscountClient(dataViewMode,  discountId);
			client.WithContext(_apiContext);
			response= client.Execute();

		}


	}

}


