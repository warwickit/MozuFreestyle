
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;


namespace Mozu.Api.Resources.Commerce.Catalog.Admin
{
	/// <summary>
	/// Use the Facets resource to manage the facets shoppers use to filter product display results on a storefront. Facets can include categories, product attributes, or prices, and use either a range of values or discrete values.
	/// </summary>
	public partial class FacetResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		public FacetResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves a facet specified by its unique identifier and displays its properties.
		/// </summary>
		/// <param name="facetId">Unique identifier of the facet to retrieve.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.Facet"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var facet = new Facet();
		///   var facet = facet.GetFacet(dataViewMode,  facetId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.Facet GetFacet(DataViewMode dataViewMode, int facetId)
		{
			return GetFacet(dataViewMode,  facetId,  null);
		}

		/// <summary>
		/// Retrieves a facet specified by its unique identifier and displays its properties.
		/// </summary>
		/// <param name="facetId">Unique identifier of the facet to retrieve.</param>
		/// <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.Facet"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var facet = new Facet();
		///   var facet = facet.GetFacet(dataViewMode,  facetId,  validate);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.Facet GetFacet(DataViewMode dataViewMode, int facetId, bool? validate =  null)
		{
			MozuClient<Mozu.Api.Contracts.ProductAdmin.Facet> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.GetFacetClient(dataViewMode,  facetId,  validate);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves a list of the facets defined for the specified category.
		/// </summary>
		/// <param name="categoryId">Unique identifier of the category associated with the facets to retrieve.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.FacetSet"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var facet = new Facet();
		///   var facetSet = facet.GetFacetCategoryList(dataViewMode,  categoryId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.FacetSet GetFacetCategoryList(DataViewMode dataViewMode, int categoryId)
		{
			return GetFacetCategoryList(dataViewMode,  categoryId,  null,  null);
		}

		/// <summary>
		/// Retrieves a list of the facets defined for the specified category.
		/// </summary>
		/// <param name="categoryId">Unique identifier of the category associated with the facets to retrieve.</param>
		/// <param name="includeAvailable">If true, returns a list of the attributes and categories associated with a product type that have not been defined as a facet for the category.</param>
		/// <param name="validate">Validates that the product category associated with a facet is active. System-supplied and read only.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.FacetSet"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var facet = new Facet();
		///   var facetSet = facet.GetFacetCategoryList(dataViewMode,  categoryId,  includeAvailable,  validate);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.FacetSet GetFacetCategoryList(DataViewMode dataViewMode, int categoryId, bool? includeAvailable =  null, bool? validate =  null)
		{
			MozuClient<Mozu.Api.Contracts.ProductAdmin.FacetSet> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.GetFacetCategoryListClient(dataViewMode,  categoryId,  includeAvailable,  validate);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Creates a new category, price, or attribute facet. Supply the category or attribute source to use for the facet values.
		/// </summary>
		/// <param name="facet">Properties of the new facet to create. Required properties: Source, FacetType, IsHidden, and CategoryId.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.Facet"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var facet = new Facet();
		///   var facet = facet.AddFacet(dataViewMode,  facet);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.Facet AddFacet(DataViewMode dataViewMode, Mozu.Api.Contracts.ProductAdmin.Facet facet)
		{
			MozuClient<Mozu.Api.Contracts.ProductAdmin.Facet> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.AddFacetClient(dataViewMode,  facet);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Modifies one or more properties of a defined facet.
		/// </summary>
		/// <param name="facetId">Unique identifier of the facet to modify.</param>
		/// <param name="facet">Properties of the defined facet to modify. Required properties: Source, FacetType, IsHidden, and CategoryId.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.Facet"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var facet = new Facet();
		///   var facet = facet.UpdateFacet(dataViewMode,  facet,  facetId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.Facet UpdateFacet(DataViewMode dataViewMode, Mozu.Api.Contracts.ProductAdmin.Facet facet, int facetId)
		{
			MozuClient<Mozu.Api.Contracts.ProductAdmin.Facet> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.UpdateFacetClient(dataViewMode,  facet,  facetId);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Deletes the facet specified by its unique identifier.
		/// </summary>
		/// <param name="facetId">Unique identifier of the facet to delete.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var facet = new Facet();
		///   facet.DeleteFacetById(dataViewMode,  facetId);
		/// </code>
		/// </example>
		public virtual void DeleteFacetById(DataViewMode dataViewMode, int facetId)
		{
			MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.FacetClient.DeleteFacetByIdClient(dataViewMode,  facetId);
			client.WithContext(_apiContext);
			response= client.Execute();

		}


	}

}


