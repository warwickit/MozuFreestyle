
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;


namespace Mozu.Api.Resources.Commerce.Catalog.Admin.Products
{
	/// <summary>
	/// Use the Properties resource to configure a property attribute for an individual product associated with a product type that uses the property attribute, as well as set property values for the product.
	/// </summary>
	public partial class ProductPropertyResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		public ProductPropertyResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves a list of the property attributes configured for the product specified in the request.
		/// </summary>
		/// <param name="productCode"></param>
		/// <returns>
		/// List{<see cref="Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var productproperty = new ProductProperty();
		///   var productProperty = productproperty.GetProperties(dataViewMode,  productCode);
		/// </code>
		/// </example>
		public virtual List<Mozu.Api.Contracts.ProductAdmin.ProductProperty> GetProperties(DataViewMode dataViewMode, string productCode)
		{
			MozuClient<List<Mozu.Api.Contracts.ProductAdmin.ProductProperty>> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.GetPropertiesClient(dataViewMode,  productCode);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves the details of a property attribute configuration for the product specified in the request.
		/// </summary>
		/// <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
		/// <param name="productCode"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var productproperty = new ProductProperty();
		///   var productProperty = productproperty.GetProperty(dataViewMode,  productCode,  attributeFQN);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.ProductProperty GetProperty(DataViewMode dataViewMode, string productCode, string attributeFQN)
		{
			MozuClient<Mozu.Api.Contracts.ProductAdmin.ProductProperty> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.GetPropertyClient(dataViewMode,  productCode,  attributeFQN);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Configures a property attribute for the product specified in the request.
		/// </summary>
		/// <param name="productCode"></param>
		/// <param name="productProperty">Properties of the property attribute to configure for a product.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var productproperty = new ProductProperty();
		///   var productProperty = productproperty.AddProperty(dataViewMode,  productProperty,  productCode);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.ProductProperty AddProperty(DataViewMode dataViewMode, Mozu.Api.Contracts.ProductAdmin.ProductProperty productProperty, string productCode)
		{
			MozuClient<Mozu.Api.Contracts.ProductAdmin.ProductProperty> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.AddPropertyClient(dataViewMode,  productProperty,  productCode);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Update one or more details of a property attribute configuration for the product specified in the request.
		/// </summary>
		/// <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
		/// <param name="productCode"></param>
		/// <param name="productProperty">Details of the property attribute to update for the product configuration.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.ProductAdmin.ProductProperty"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var productproperty = new ProductProperty();
		///   var productProperty = productproperty.UpdateProperty(dataViewMode,  productProperty,  productCode,  attributeFQN);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.ProductAdmin.ProductProperty UpdateProperty(DataViewMode dataViewMode, Mozu.Api.Contracts.ProductAdmin.ProductProperty productProperty, string productCode, string attributeFQN)
		{
			MozuClient<Mozu.Api.Contracts.ProductAdmin.ProductProperty> response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.UpdatePropertyClient(dataViewMode,  productProperty,  productCode,  attributeFQN);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Deletes the configuration of a property attribute for the product specified in the request.
		/// </summary>
		/// <param name="attributeFQN">The fully qualified name of the attribute, which is a user defined attribute identifier.</param>
		/// <param name="productCode"></param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var productproperty = new ProductProperty();
		///   productproperty.DeleteProperty(dataViewMode,  productCode,  attributeFQN);
		/// </code>
		/// </example>
		public virtual void DeleteProperty(DataViewMode dataViewMode, string productCode, string attributeFQN)
		{
			MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Catalog.Admin.Products.ProductPropertyClient.DeletePropertyClient(dataViewMode,  productCode,  attributeFQN);
			client.WithContext(_apiContext);
			response= client.Execute();

		}


	}

}


