
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;


namespace Mozu.Api.Resources.Commerce.Customer
{
	/// <summary>
	/// Use the Visits resource to manage all visits a customer makes to a tenant's sites and measure the level of transactions a customer performs during a unique visit for customer account analytics. Companies can track customer visits by site (including online and in-person interactions), the transactions a customer performs during the visit, and the device type associated with the visit, if any.
	/// </summary>
	public partial class VisitResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		public VisitResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves a list of customer visits according to any filter or sort criteria specified in the request.
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Customer.VisitCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var visit = new Visit();
		///   var visitCollection = visit.GetVisits();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Customer.VisitCollection GetVisits()
		{
			return GetVisits( null,  null,  null,  null);
		}

		/// <summary>
		/// Retrieves a list of customer visits according to any filter or sort criteria specified in the request.
		/// </summary>
		/// <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
		/// <param name="pageSize">The number of results to display on each page when creating paged results from a query. The maximum value is 200.</param>
		/// <param name="sortBy">The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"</param>
		/// <param name="startIndex">When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Customer.VisitCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var visit = new Visit();
		///   var visitCollection = visit.GetVisits( startIndex,  pageSize,  sortBy,  filter);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Customer.VisitCollection GetVisits(int? startIndex =  null, int? pageSize =  null, string sortBy =  null, string filter =  null)
		{
			MozuClient<Mozu.Api.Contracts.Customer.VisitCollection> response;
			var client = Mozu.Api.Clients.Commerce.Customer.VisitClient.GetVisitsClient( startIndex,  pageSize,  sortBy,  filter);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves the details of the customer visit specified in the request.
		/// </summary>
		/// <param name="visitId">Unique identifier of the customer visit to retrieve.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Customer.Visit"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var visit = new Visit();
		///   var visit = visit.GetVisit( visitId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Customer.Visit GetVisit(string visitId)
		{
			MozuClient<Mozu.Api.Contracts.Customer.Visit> response;
			var client = Mozu.Api.Clients.Commerce.Customer.VisitClient.GetVisitClient( visitId);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Creates a new visit for the customer account specified in the request.
		/// </summary>
		/// <param name="visit">Properties of the visit to add to the customer account.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Customer.Visit"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var visit = new Visit();
		///   var visit = visit.AddVisit( visit);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Customer.Visit AddVisit(Mozu.Api.Contracts.Customer.Visit visit)
		{
			MozuClient<Mozu.Api.Contracts.Customer.Visit> response;
			var client = Mozu.Api.Clients.Commerce.Customer.VisitClient.AddVisitClient( visit);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Updates one or more properties of a defined customer visit.
		/// </summary>
		/// <param name="visitId">Unique identifier of the customer visit to update.</param>
		/// <param name="visit">Properties of the customer visit to update.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Customer.Visit"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var visit = new Visit();
		///   var visit = visit.UpdateVisit( visit,  visitId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Customer.Visit UpdateVisit(Mozu.Api.Contracts.Customer.Visit visit, string visitId)
		{
			MozuClient<Mozu.Api.Contracts.Customer.Visit> response;
			var client = Mozu.Api.Clients.Commerce.Customer.VisitClient.UpdateVisitClient( visit,  visitId);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}


	}

}


