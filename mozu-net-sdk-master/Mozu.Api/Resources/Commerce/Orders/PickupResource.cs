
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;


namespace Mozu.Api.Resources.Commerce.Orders
{
	/// <summary>
	/// Use the Pickups resource to organize items submitted in an order into pickups that enable the shopper to fulfill the order items using the in-store pickup method.
	/// </summary>
	public partial class PickupResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		public PickupResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves the details of the in-store pickup specified in the request.
		/// </summary>
		/// <param name="orderId">Unique identifier of the order associated with the pickup.</param>
		/// <param name="pickupId">Unique identifier of the pickup to retrieve.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var pickup = new Pickup();
		///   var pickup = pickup.GetPickup( orderId,  pickupId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup GetPickup(string orderId, string pickupId)
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup> response;
			var client = Mozu.Api.Clients.Commerce.Orders.PickupClient.GetPickupClient( orderId,  pickupId);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves a list of the actions available to perform for the pickup specified in the request.
		/// </summary>
		/// <param name="orderId">Unique identifier of the order associated with the pickup.</param>
		/// <param name="pickupId">Unique identifier of the pickup for which to retrieve available actions.</param>
		/// <returns>
		/// List{string}
		/// </returns>
		/// <example>
		/// <code>
		///   var pickup = new Pickup();
		///   var string = pickup.GetAvailablePickupFulfillmentActions( orderId,  pickupId);
		/// </code>
		/// </example>
		public virtual List<string> GetAvailablePickupFulfillmentActions(string orderId, string pickupId)
		{
			MozuClient<List<string>> response;
			var client = Mozu.Api.Clients.Commerce.Orders.PickupClient.GetAvailablePickupFulfillmentActionsClient( orderId,  pickupId);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Create a new pickup for the order specified in the request for in-store fufillment.
		/// </summary>
		/// <param name="orderId">Unique identifier of the order.</param>
		/// <param name="pickup">Properties of the in-store pickup to create.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var pickup = new Pickup();
		///   var pickup = pickup.CreatePickup( pickup,  orderId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup CreatePickup(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup pickup, string orderId)
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup> response;
			var client = Mozu.Api.Clients.Commerce.Orders.PickupClient.CreatePickupClient( pickup,  orderId);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Updates one or more details of a defined in-store pickup.
		/// </summary>
		/// <param name="orderId">Unique identifier of the order associated with the in-store pickup.</param>
		/// <param name="pickupId">Unique identifier of the pickup to update.</param>
		/// <param name="pickup">Properties of the in-store pickup to update.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var pickup = new Pickup();
		///   var pickup = pickup.UpdatePickup( pickup,  orderId,  pickupId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup UpdatePickup(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup pickup, string orderId, string pickupId)
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Pickup> response;
			var client = Mozu.Api.Clients.Commerce.Orders.PickupClient.UpdatePickupClient( pickup,  orderId,  pickupId);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Removes a pickup previously defined for order item in-store pickup fulfillment.
		/// </summary>
		/// <param name="orderId">Unique identifier of the order associated with the pickup.</param>
		/// <param name="pickupId">Unique identifier of the pickup to remove.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var pickup = new Pickup();
		///   pickup.DeletePickup( orderId,  pickupId);
		/// </code>
		/// </example>
		public virtual void DeletePickup(string orderId, string pickupId)
		{
			MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Orders.PickupClient.DeletePickupClient( orderId,  pickupId);
			client.WithContext(_apiContext);
			response= client.Execute();

		}


	}

}


