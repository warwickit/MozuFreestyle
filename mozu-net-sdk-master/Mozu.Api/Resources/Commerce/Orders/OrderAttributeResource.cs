
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;


namespace Mozu.Api.Resources.Commerce.Orders
{
	/// <summary>
	/// Use the Order Attributes resource to define how an order attribute definition applies to a specific order.
	/// </summary>
	public partial class OrderAttributeResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		public OrderAttributeResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves a list of the attributes defined for the order specified in the request.
		/// </summary>
		/// <param name="orderId">Unique identifier of the order for which to retrieve a list of defined attributes.</param>
		/// <returns>
		/// List{<see cref="Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var orderattribute = new OrderAttribute();
		///   var orderAttribute = orderattribute.GetOrderAttributes( orderId);
		/// </code>
		/// </example>
		public virtual List<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute> GetOrderAttributes(string orderId)
		{
			MozuClient<List<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute>> response;
			var client = Mozu.Api.Clients.Commerce.Orders.OrderAttributeClient.GetOrderAttributesClient( orderId);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Applies a list of attributes to the order specified in the request and defines a value for each attribute in the request body.
		/// </summary>
		/// <param name="orderId">Unique identifier of the order for which to assign the attributes.</param>
		/// <param name="orderAttributes">The list of attributes to associate with the order, and the properties of each attribute to define for the order.</param>
		/// <returns>
		/// List{<see cref="Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var orderattribute = new OrderAttribute();
		///   var orderAttribute = orderattribute.CreateOrderAttributes( orderAttributes,  orderId);
		/// </code>
		/// </example>
		public virtual List<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute> CreateOrderAttributes(List<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute> orderAttributes, string orderId)
		{
			MozuClient<List<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute>> response;
			var client = Mozu.Api.Clients.Commerce.Orders.OrderAttributeClient.CreateOrderAttributesClient( orderAttributes,  orderId);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Updates one or more properties of an attribute defined for the order specified in the request.
		/// </summary>
		/// <param name="orderId">Identifier of the order for which to update attributes.</param>
		/// <param name="orderAttributes">List of order attributes to update, including the properties of each defined attribute in the list.</param>
		/// <returns>
		/// List{<see cref="Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var orderattribute = new OrderAttribute();
		///   var orderAttribute = orderattribute.UpdateOrderAttributes( orderAttributes,  orderId);
		/// </code>
		/// </example>
		public virtual List<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute> UpdateOrderAttributes(List<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute> orderAttributes, string orderId)
		{
			return UpdateOrderAttributes( orderAttributes,  orderId,  null);
		}

		/// <summary>
		/// Updates one or more properties of an attribute defined for the order specified in the request.
		/// </summary>
		/// <param name="orderId">Identifier of the order for which to update attributes.</param>
		/// <param name="removeMissing">If true, the operation removes missing properties so that the updated order attributes will not show properties with a null value.</param>
		/// <param name="orderAttributes">List of order attributes to update, including the properties of each defined attribute in the list.</param>
		/// <returns>
		/// List{<see cref="Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var orderattribute = new OrderAttribute();
		///   var orderAttribute = orderattribute.UpdateOrderAttributes( orderAttributes,  orderId,  removeMissing);
		/// </code>
		/// </example>
		public virtual List<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute> UpdateOrderAttributes(List<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute> orderAttributes, string orderId, bool? removeMissing =  null)
		{
			MozuClient<List<Mozu.Api.Contracts.CommerceRuntime.Orders.OrderAttribute>> response;
			var client = Mozu.Api.Clients.Commerce.Orders.OrderAttributeClient.UpdateOrderAttributesClient( orderAttributes,  orderId,  removeMissing);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}


	}

}


