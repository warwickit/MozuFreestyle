
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;


namespace Mozu.Api.Resources.Commerce.Orders
{
	/// <summary>
	/// Use the packages subresource to manage the physical packages to ship for an order.
	/// </summary>
	public partial class PackageResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		public PackageResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves the details of a package of order items.
		/// </summary>
		/// <param name="orderId">Unique identifier of the order associated with the package to retrieve.</param>
		/// <param name="packageId">Unique identifier of the package to retrieve.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var package = new Package();
		///   var package = package.GetPackage( orderId,  packageId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package GetPackage(string orderId, string packageId)
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package> response;
			var client = Mozu.Api.Clients.Commerce.Orders.PackageClient.GetPackageClient( orderId,  packageId);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves a list of the actions available to perform for a package associated with order fulfillment.
		/// </summary>
		/// <param name="orderId">Unique identifier of the order associated with the package fulfillment.</param>
		/// <param name="packageId">Unique identifier of the package associated with the fulfillment actions to retrieve.</param>
		/// <returns>
		/// List{string}
		/// </returns>
		/// <example>
		/// <code>
		///   var package = new Package();
		///   var string = package.GetAvailablePackageFulfillmentActions( orderId,  packageId);
		/// </code>
		/// </example>
		public virtual List<string> GetAvailablePackageFulfillmentActions(string orderId, string packageId)
		{
			MozuClient<List<string>> response;
			var client = Mozu.Api.Clients.Commerce.Orders.PackageClient.GetAvailablePackageFulfillmentActionsClient( orderId,  packageId);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves the package label image supplied by the carrier.
		/// </summary>
		/// <param name="orderId">Unique identifier of the order associated with the package label to retrieve.</param>
		/// <param name="packageId">Unique identifier of the package for which to retrieve the label.</param>
		/// <returns>
		/// <see cref="System.IO.Stream"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var package = new Package();
		///   var stream = package.GetPackageLabel( orderId,  packageId);
		/// </code>
		/// </example>
		public virtual System.IO.Stream GetPackageLabel(string orderId, string packageId)
		{
			MozuClient<System.IO.Stream> response;
			var client = Mozu.Api.Clients.Commerce.Orders.PackageClient.GetPackageLabelClient( orderId,  packageId);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Creates a new physical package of order items.
		/// </summary>
		/// <param name="orderId">Unique identifier of the order associated with this package.</param>
		/// <param name="package">Properties of the physical package of order items.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var package = new Package();
		///   var package = package.CreatePackage( pkg,  orderId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package CreatePackage(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package pkg, string orderId)
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package> response;
			var client = Mozu.Api.Clients.Commerce.Orders.PackageClient.CreatePackageClient( pkg,  orderId);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Updates one or more properties of a physical package of order items.
		/// </summary>
		/// <param name="orderId">Unique identifier of the order associated with the package to update.</param>
		/// <param name="packageId">Unique identifier of the package of order items to update.</param>
		/// <param name="package">Wrapper of properties for the package of order items to update.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var package = new Package();
		///   var package = package.UpdatePackage( pkg,  orderId,  packageId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package UpdatePackage(Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package pkg, string orderId, string packageId)
		{
			MozuClient<Mozu.Api.Contracts.CommerceRuntime.Fulfillment.Package> response;
			var client = Mozu.Api.Clients.Commerce.Orders.PackageClient.UpdatePackageClient( pkg,  orderId,  packageId);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Removes a physical package of items from the specified order.
		/// </summary>
		/// <param name="orderId">Unique identifier of the order associated with the package to delete.</param>
		/// <param name="packageId">Unique identifier of the package to delete.</param>
		/// <returns>
		/// 
		/// </returns>
		/// <example>
		/// <code>
		///   var package = new Package();
		///   package.DeletePackage( orderId,  packageId);
		/// </code>
		/// </example>
		public virtual void DeletePackage(string orderId, string packageId)
		{
			MozuClient response;
			var client = Mozu.Api.Clients.Commerce.Orders.PackageClient.DeletePackageClient( orderId,  packageId);
			client.WithContext(_apiContext);
			response= client.Execute();

		}


	}

}


