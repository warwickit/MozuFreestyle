
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;


namespace Mozu.Api.Resources.Platform
{
	/// <summary>
	/// The Reference resource retrieves collections of standards the Mozu system currently supports. This includes content locales, top-level domains, units of measure, countries, currencies, time zones, and shipping or billing address schemas.
	/// </summary>
	public partial class ReferenceDataResource  	{
		///
		/// <see cref="Mozu.Api.ApiContext"/>
		///
		private readonly IApiContext _apiContext;

		public ReferenceDataResource() 
		{
			_apiContext = null;
		}
		 public ReferenceDataResource(IApiContext apiContext) 
		{
			_apiContext = apiContext;
		}

		
		/// <summary>
		/// Retrieves a specific address schema based on the country code provided. This operation allows the creation of custom shipping and billing address fields.
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Reference.AddressSchema"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var referencedata = new ReferenceData();
		///   var addressSchema = referencedata.GetAddressSchema();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Reference.AddressSchema GetAddressSchema()
		{
			return GetAddressSchema( null);
		}

		/// <summary>
		/// Retrieves a specific address schema based on the country code provided. This operation allows the creation of custom shipping and billing address fields.
		/// </summary>
		/// <param name="countryCode">The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Reference.AddressSchema"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var referencedata = new ReferenceData();
		///   var addressSchema = referencedata.GetAddressSchema( countryCode);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Reference.AddressSchema GetAddressSchema(string countryCode =  null)
		{
			MozuClient<Mozu.Api.Contracts.Reference.AddressSchema> response;
			var client = Mozu.Api.Clients.Platform.ReferenceDataClient.GetAddressSchemaClient( countryCode);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves the entire list of address schemas that the system supports.
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Reference.AddressSchemaCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var referencedata = new ReferenceData();
		///   var addressSchemaCollection = referencedata.GetAddressSchemas();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Reference.AddressSchemaCollection GetAddressSchemas()
		{
			MozuClient<Mozu.Api.Contracts.Reference.AddressSchemaCollection> response;
			var client = Mozu.Api.Clients.Platform.ReferenceDataClient.GetAddressSchemasClient();
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// ***Always private and should not be published.***
		/// </summary>
		/// <param name="behaviorId">***Always private and should not be published.***</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.Behavior"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var referencedata = new ReferenceData();
		///   var behavior = referencedata.GetBehavior( behaviorId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.Behavior GetBehavior(int behaviorId)
		{
			MozuClient<Mozu.Api.Contracts.Core.Behavior> response;
			var client = Mozu.Api.Clients.Platform.ReferenceDataClient.GetBehaviorClient( behaviorId);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// ***Always private and should not be published.***
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.BehaviorCategoryCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var referencedata = new ReferenceData();
		///   var behaviorCategoryCollection = referencedata.GetBehaviorCategories();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.BehaviorCategoryCollection GetBehaviorCategories()
		{
			MozuClient<Mozu.Api.Contracts.Core.BehaviorCategoryCollection> response;
			var client = Mozu.Api.Clients.Platform.ReferenceDataClient.GetBehaviorCategoriesClient();
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// ***Always private and should not be published.***
		/// </summary>
		/// <param name="categoryId">***Always private and should not be published.***</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.BehaviorCategory"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var referencedata = new ReferenceData();
		///   var behaviorCategory = referencedata.GetBehaviorCategory( categoryId);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.BehaviorCategory GetBehaviorCategory(int categoryId)
		{
			MozuClient<Mozu.Api.Contracts.Core.BehaviorCategory> response;
			var client = Mozu.Api.Clients.Platform.ReferenceDataClient.GetBehaviorCategoryClient( categoryId);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// ***Always private and should not be published.***
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.BehaviorCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var referencedata = new ReferenceData();
		///   var behaviorCollection = referencedata.GetBehaviors();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.BehaviorCollection GetBehaviors()
		{
			return GetBehaviors( null);
		}

		/// <summary>
		/// ***Always private and should not be published.***
		/// </summary>
		/// <param name="userType"></param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Core.BehaviorCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var referencedata = new ReferenceData();
		///   var behaviorCollection = referencedata.GetBehaviors( userType);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Core.BehaviorCollection GetBehaviors(string userType =  null)
		{
			MozuClient<Mozu.Api.Contracts.Core.BehaviorCollection> response;
			var client = Mozu.Api.Clients.Platform.ReferenceDataClient.GetBehaviorsClient( userType);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves the list of content locales the system supports. Content locales indicate the language used and the country where the language is used.
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Reference.ContentLocaleCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var referencedata = new ReferenceData();
		///   var contentLocaleCollection = referencedata.GetContentLocales();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Reference.ContentLocaleCollection GetContentLocales()
		{
			MozuClient<Mozu.Api.Contracts.Reference.ContentLocaleCollection> response;
			var client = Mozu.Api.Clients.Platform.ReferenceDataClient.GetContentLocalesClient();
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves the entire list of countries that the system supports.
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Reference.CountryCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var referencedata = new ReferenceData();
		///   var countryCollection = referencedata.GetCountries();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Reference.CountryCollection GetCountries()
		{
			MozuClient<Mozu.Api.Contracts.Reference.CountryCollection> response;
			var client = Mozu.Api.Clients.Platform.ReferenceDataClient.GetCountriesClient();
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves the entire list of currencies that the system supports.
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Reference.CurrencyCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var referencedata = new ReferenceData();
		///   var currencyCollection = referencedata.GetCurrencies();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Reference.CurrencyCollection GetCurrencies()
		{
			MozuClient<Mozu.Api.Contracts.Reference.CurrencyCollection> response;
			var client = Mozu.Api.Clients.Platform.ReferenceDataClient.GetCurrenciesClient();
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves the entire list of time zones that the system supports.
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Reference.TimeZoneCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var referencedata = new ReferenceData();
		///   var timeZoneCollection = referencedata.GetTimeZones();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Reference.TimeZoneCollection GetTimeZones()
		{
			MozuClient<Mozu.Api.Contracts.Reference.TimeZoneCollection> response;
			var client = Mozu.Api.Clients.Platform.ReferenceDataClient.GetTimeZonesClient();
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves the entire list of top-level internet domains that the system supports.
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Reference.TopLevelDomainCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var referencedata = new ReferenceData();
		///   var topLevelDomainCollection = referencedata.GetTopLevelDomains();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Reference.TopLevelDomainCollection GetTopLevelDomains()
		{
			MozuClient<Mozu.Api.Contracts.Reference.TopLevelDomainCollection> response;
			var client = Mozu.Api.Clients.Platform.ReferenceDataClient.GetTopLevelDomainsClient();
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}

		/// <summary>
		/// Retrieves an array list of all units of measure the system supports.
		/// </summary>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Reference.UnitOfMeasureCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var referencedata = new ReferenceData();
		///   var unitOfMeasureCollection = referencedata.GetUnitsOfMeasure();
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Reference.UnitOfMeasureCollection GetUnitsOfMeasure()
		{
			return GetUnitsOfMeasure( null);
		}

		/// <summary>
		/// Retrieves an array list of all units of measure the system supports.
		/// </summary>
		/// <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
		/// <returns>
		/// <see cref="Mozu.Api.Contracts.Reference.UnitOfMeasureCollection"/>
		/// </returns>
		/// <example>
		/// <code>
		///   var referencedata = new ReferenceData();
		///   var unitOfMeasureCollection = referencedata.GetUnitsOfMeasure( filter);
		/// </code>
		/// </example>
		public virtual Mozu.Api.Contracts.Reference.UnitOfMeasureCollection GetUnitsOfMeasure(string filter =  null)
		{
			MozuClient<Mozu.Api.Contracts.Reference.UnitOfMeasureCollection> response;
			var client = Mozu.Api.Clients.Platform.ReferenceDataClient.GetUnitsOfMeasureClient( filter);
			client.WithContext(_apiContext);
			response= client.Execute();
			return response.Result();

		}


	}

}


