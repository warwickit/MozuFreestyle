
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace Mozu.Api.Urls.Commerce.Customer
{
	public partial class CustomerAccountUrl 
	{

		/// <summary>
        /// Get Resource Url for GetAccounts
        /// </summary>
        /// <param name="fields">The fields to include in the response.</param>
        /// <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
        /// <param name="isAnonymous"></param>
        /// <param name="pageSize"></param>
        /// <param name="q">A list of customer account search terms to use in the query when searching across customer name and email. Separate multiple search terms with a space character.</param>
        /// <param name="qLimit">The maximum number of search results to return in the response. You can limit any range between 1-100.</param>
        /// <param name="sortBy"></param>
        /// <param name="startIndex"></param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl GetAccountsUrl(string fields, string filter, bool? isAnonymous, int? pageSize, string q, int? qLimit, string sortBy, int? startIndex)
		{
			var url = "/api/commerce/customer/accounts/?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}&fields={fields}&q={q}&qLimit={qLimit}&isAnonymous={isAnonymous}";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "fields", fields);
			mozuUrl.FormatUrl( "filter", filter);
			mozuUrl.FormatUrl( "isAnonymous", isAnonymous);
			mozuUrl.FormatUrl( "pageSize", pageSize);
			mozuUrl.FormatUrl( "q", q);
			mozuUrl.FormatUrl( "qLimit", qLimit);
			mozuUrl.FormatUrl( "sortBy", sortBy);
			mozuUrl.FormatUrl( "startIndex", startIndex);
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for GetAccount
        /// </summary>
        /// <param name="accountId">Unique identifier of the customer account to retrieve.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl GetAccountUrl(int accountId)
		{
			var url = "/api/commerce/customer/accounts/{accountId}";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "accountId", accountId);
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for GetLoginState
        /// </summary>
        /// <param name="accountId"></param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl GetLoginStateUrl(int accountId)
		{
			var url = "/api/commerce/customer/accounts/{accountId}/loginstate";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "accountId", accountId);
			return mozuUrl;
		}

				/// <summary>
        /// Get Resource Url for AddAccount
        /// </summary>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl AddAccountUrl()
		{
			var url = "/api/commerce/customer/accounts/";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for ChangePassword
        /// </summary>
        /// <param name="accountId"></param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl ChangePasswordUrl(int accountId)
		{
			var url = "/api/commerce/customer/accounts/{accountId}/Change-Password";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "accountId", accountId);
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for AddLoginToExistingCustomer
        /// </summary>
        /// <param name="accountId"></param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl AddLoginToExistingCustomerUrl(int accountId)
		{
			var url = "/api/commerce/customer/accounts/{accountId}/Create-Login";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "accountId", accountId);
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for RecomputeCustomerLifetimeValue
        /// </summary>
        /// <param name="accountId"></param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl RecomputeCustomerLifetimeValueUrl(int accountId)
		{
			var url = "/api/commerce/customer/accounts/{accountId}/recomputelifetimevalue";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "accountId", accountId);
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for SetLoginLocked
        /// </summary>
        /// <param name="accountId"></param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl SetLoginLockedUrl(int accountId)
		{
			var url = "/api/commerce/customer/accounts/{accountId}/Set-Login-Locked";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "accountId", accountId);
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for SetPasswordChangeRequired
        /// </summary>
        /// <param name="accountId"></param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl SetPasswordChangeRequiredUrl(int accountId)
		{
			var url = "/api/commerce/customer/accounts/{accountId}/Set-Password-Change-Required";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "accountId", accountId);
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for AddAccountAndLogin
        /// </summary>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl AddAccountAndLoginUrl()
		{
			var url = "/api/commerce/customer/accounts/Add-Account-And-Login";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for AddAccounts
        /// </summary>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl AddAccountsUrl()
		{
			var url = "/api/commerce/customer/accounts/Bulk";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for GetLoginStateByEmailAddress
        /// </summary>
        /// <param name="emailAddress"></param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl GetLoginStateByEmailAddressUrl(string emailAddress)
		{
			var url = "/api/commerce/customer/accounts/loginstatebyemailaddress?emailAddress={emailAddress}";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "emailAddress", emailAddress);
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for GetLoginStateByUserName
        /// </summary>
        /// <param name="userName"></param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl GetLoginStateByUserNameUrl(string userName)
		{
			var url = "/api/commerce/customer/accounts/loginstatebyusername?userName={userName}";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "userName", userName);
			return mozuUrl;
		}

		/// <summary>
        /// Get Resource Url for ResetPassword
        /// </summary>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl ResetPasswordUrl()
		{
			var url = "/api/commerce/customer/accounts/Reset-Password";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			return mozuUrl;
		}

				/// <summary>
        /// Get Resource Url for UpdateAccount
        /// </summary>
        /// <param name="accountId">Unique identifier of the customer account.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl UpdateAccountUrl(int accountId)
		{
			var url = "/api/commerce/customer/accounts/{accountId}";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "accountId", accountId);
			return mozuUrl;
		}

				/// <summary>
        /// Get Resource Url for DeleteAccount
        /// </summary>
        /// <param name="accountId">Unique identifier of the customer account to delete.</param>
        /// <returns>
        /// String - Resource Url
        /// </returns>
        public static MozuUrl DeleteAccountUrl(int accountId)
		{
			var url = "/api/commerce/customer/accounts/{accountId}";
			var mozuUrl = new MozuUrl(url, MozuUrl.UrlLocation.TENANT_POD, false) ;
			mozuUrl.FormatUrl( "accountId", accountId);
			return mozuUrl;
		}

		
	}
}

