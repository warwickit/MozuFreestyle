
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;


namespace Mozu.Api.Clients.Commerce.Carts
{
	/// <summary>
	/// Use the cart items subresource to manage a collection of items in an active shopping cart.
	/// </summary>
	public partial class CartItemClient 	{
		
		/// <summary>
		/// Retrieves a list of cart items including the total number of items in the cart.
		/// </summary>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Carts.CartItemCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetCartItems();
		///   var cartItemCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.CartItemCollection> GetCartItemsClient()
		{
			var url = Mozu.Api.Urls.Commerce.Carts.CartItemUrl.GetCartItemsUrl();
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.CartItemCollection>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// Retrieves a particular cart item by providing the cart item ID.
		/// </summary>
		/// <param name="cartItemId">Identifier of the cart item to retrieve.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetCartItem( cartItemId);
		///   var cartItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem> GetCartItemClient(string cartItemId)
		{
			var url = Mozu.Api.Urls.Commerce.Carts.CartItemUrl.GetCartItemUrl(cartItemId);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// Adds a product to the current shopper's cart.
		/// </summary>
		/// <param name="cartItem">All properties of the new cart item. The product code is required.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=AddItemToCart( cartItem);
		///   var cartItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem> AddItemToCartClient(Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem cartItem)
		{
			var url = Mozu.Api.Urls.Commerce.Carts.CartItemUrl.AddItemToCartUrl();
			const string verb = "POST";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem>(cartItem);
			return mozuClient;

		}

		/// <summary>
		/// Update the product or product quantity of an item in the current shopper's cart.
		/// </summary>
		/// <param name="cartItemId">Identifier of the cart item to update.</param>
		/// <param name="cartItem">The properties of the cart item to update.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=UpdateCartItem( cartItem,  cartItemId);
		///   var cartItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem> UpdateCartItemClient(Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem cartItem, string cartItemId)
		{
			var url = Mozu.Api.Urls.Commerce.Carts.CartItemUrl.UpdateCartItemUrl(cartItemId);
			const string verb = "PUT";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem>()
									.WithVerb(verb).WithResourceUrl(url)
									.WithBody<Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem>(cartItem);
			return mozuClient;

		}

		/// <summary>
		/// Update the quantity of an individual cart item in the cart of the current shopper.
		/// </summary>
		/// <param name="cartItemId">Identifier of the cart item to update quantity.</param>
		/// <param name="quantity">The number of cart items in the shopper's active cart.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=UpdateCartItemQuantity( cartItemId,  quantity);
		///   var cartItemClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem> UpdateCartItemQuantityClient(string cartItemId, int quantity)
		{
			var url = Mozu.Api.Urls.Commerce.Carts.CartItemUrl.UpdateCartItemQuantityUrl(cartItemId, quantity);
			const string verb = "PUT";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.CartItem>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// Removes all items in the current shopper's active cart.
		/// </summary>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.CommerceRuntime.Carts.Cart"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=RemoveAllCartItems();
		///   var cartClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.Cart> RemoveAllCartItemsClient()
		{
			var url = Mozu.Api.Urls.Commerce.Carts.CartItemUrl.RemoveAllCartItemsUrl();
			const string verb = "DELETE";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.CommerceRuntime.Carts.Cart>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// Deletes a specific cart item by providing the cart item ID.
		/// </summary>
		/// <param name="cartItemId">Identifier of the cart item to delete.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=DeleteCartItem( cartItemId);
		///mozuClient.WithBaseAddress(url).Execute();
		/// </code>
		/// </example>
		public static MozuClient DeleteCartItemClient(string cartItemId)
		{
			var url = Mozu.Api.Urls.Commerce.Carts.CartItemUrl.DeleteCartItemUrl(cartItemId);
			const string verb = "DELETE";
			var mozuClient = new MozuClient()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}


	}

}


