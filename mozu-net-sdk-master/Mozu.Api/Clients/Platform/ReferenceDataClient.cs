
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Security;


namespace Mozu.Api.Clients.Platform
{
	/// <summary>
	/// The Reference resource retrieves collections of standards the Mozu system currently supports. This includes content locales, top-level domains, units of measure, countries, currencies, time zones, and shipping or billing address schemas.
	/// </summary>
	public partial class ReferenceDataClient 	{
		
		/// <summary>
		/// Retrieves a specific address schema based on the country code provided. This operation allows the creation of custom shipping and billing address fields.
		/// </summary>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Reference.AddressSchema"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetAddressSchema();
		///   var addressSchemaClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Reference.AddressSchema> GetAddressSchemaClient()
		{
			return GetAddressSchemaClient( null);
		}

		/// <summary>
		/// Retrieves a specific address schema based on the country code provided. This operation allows the creation of custom shipping and billing address fields.
		/// </summary>
		/// <param name="countryCode">The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Reference.AddressSchema"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetAddressSchema( countryCode);
		///   var addressSchemaClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Reference.AddressSchema> GetAddressSchemaClient(string countryCode =  null)
		{
			var url = Mozu.Api.Urls.Platform.ReferenceDataUrl.GetAddressSchemaUrl(countryCode);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.Reference.AddressSchema>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// Retrieves the entire list of address schemas that the system supports.
		/// </summary>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Reference.AddressSchemaCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetAddressSchemas();
		///   var addressSchemaCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Reference.AddressSchemaCollection> GetAddressSchemasClient()
		{
			var url = Mozu.Api.Urls.Platform.ReferenceDataUrl.GetAddressSchemasUrl();
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.Reference.AddressSchemaCollection>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// ***Always private and should not be published.***
		/// </summary>
		/// <param name="behaviorId">***Always private and should not be published.***</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Core.Behavior"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetBehavior( behaviorId);
		///   var behaviorClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Core.Behavior> GetBehaviorClient(int behaviorId)
		{
			var url = Mozu.Api.Urls.Platform.ReferenceDataUrl.GetBehaviorUrl(behaviorId);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.Core.Behavior>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// ***Always private and should not be published.***
		/// </summary>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Core.BehaviorCategoryCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetBehaviorCategories();
		///   var behaviorCategoryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Core.BehaviorCategoryCollection> GetBehaviorCategoriesClient()
		{
			var url = Mozu.Api.Urls.Platform.ReferenceDataUrl.GetBehaviorCategoriesUrl();
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.Core.BehaviorCategoryCollection>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// ***Always private and should not be published.***
		/// </summary>
		/// <param name="categoryId">***Always private and should not be published.***</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Core.BehaviorCategory"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetBehaviorCategory( categoryId);
		///   var behaviorCategoryClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Core.BehaviorCategory> GetBehaviorCategoryClient(int categoryId)
		{
			var url = Mozu.Api.Urls.Platform.ReferenceDataUrl.GetBehaviorCategoryUrl(categoryId);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.Core.BehaviorCategory>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// ***Always private and should not be published.***
		/// </summary>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Core.BehaviorCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetBehaviors();
		///   var behaviorCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Core.BehaviorCollection> GetBehaviorsClient()
		{
			return GetBehaviorsClient( null);
		}

		/// <summary>
		/// ***Always private and should not be published.***
		/// </summary>
		/// <param name="userType"></param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Core.BehaviorCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetBehaviors( userType);
		///   var behaviorCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Core.BehaviorCollection> GetBehaviorsClient(string userType =  null)
		{
			var url = Mozu.Api.Urls.Platform.ReferenceDataUrl.GetBehaviorsUrl(userType);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.Core.BehaviorCollection>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// Retrieves the list of content locales the system supports. Content locales indicate the language used and the country where the language is used.
		/// </summary>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Reference.ContentLocaleCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetContentLocales();
		///   var contentLocaleCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Reference.ContentLocaleCollection> GetContentLocalesClient()
		{
			var url = Mozu.Api.Urls.Platform.ReferenceDataUrl.GetContentLocalesUrl();
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.Reference.ContentLocaleCollection>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// Retrieves the entire list of countries that the system supports.
		/// </summary>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Reference.CountryCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetCountries();
		///   var countryCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Reference.CountryCollection> GetCountriesClient()
		{
			var url = Mozu.Api.Urls.Platform.ReferenceDataUrl.GetCountriesUrl();
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.Reference.CountryCollection>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// Retrieves the entire list of currencies that the system supports.
		/// </summary>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Reference.CurrencyCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetCurrencies();
		///   var currencyCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Reference.CurrencyCollection> GetCurrenciesClient()
		{
			var url = Mozu.Api.Urls.Platform.ReferenceDataUrl.GetCurrenciesUrl();
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.Reference.CurrencyCollection>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// Retrieves the entire list of time zones that the system supports.
		/// </summary>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Reference.TimeZoneCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetTimeZones();
		///   var timeZoneCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Reference.TimeZoneCollection> GetTimeZonesClient()
		{
			var url = Mozu.Api.Urls.Platform.ReferenceDataUrl.GetTimeZonesUrl();
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.Reference.TimeZoneCollection>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// Retrieves the entire list of top-level internet domains that the system supports.
		/// </summary>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Reference.TopLevelDomainCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetTopLevelDomains();
		///   var topLevelDomainCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Reference.TopLevelDomainCollection> GetTopLevelDomainsClient()
		{
			var url = Mozu.Api.Urls.Platform.ReferenceDataUrl.GetTopLevelDomainsUrl();
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.Reference.TopLevelDomainCollection>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}

		/// <summary>
		/// Retrieves an array list of all units of measure the system supports.
		/// </summary>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Reference.UnitOfMeasureCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetUnitsOfMeasure();
		///   var unitOfMeasureCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Reference.UnitOfMeasureCollection> GetUnitsOfMeasureClient()
		{
			return GetUnitsOfMeasureClient( null);
		}

		/// <summary>
		/// Retrieves an array list of all units of measure the system supports.
		/// </summary>
		/// <param name="filter">A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"</param>
		/// <returns>
		///  <see cref="Mozu.Api.MozuClient" />{<see cref="Mozu.Api.Contracts.Reference.UnitOfMeasureCollection"/>}
		/// </returns>
		/// <example>
		/// <code>
		///   var mozuClient=GetUnitsOfMeasure( filter);
		///   var unitOfMeasureCollectionClient = mozuClient.WithBaseAddress(url).Execute().Result();
		/// </code>
		/// </example>
		public static MozuClient<Mozu.Api.Contracts.Reference.UnitOfMeasureCollection> GetUnitsOfMeasureClient(string filter =  null)
		{
			var url = Mozu.Api.Urls.Platform.ReferenceDataUrl.GetUnitsOfMeasureUrl(filter);
			const string verb = "GET";
			var mozuClient = new MozuClient<Mozu.Api.Contracts.Reference.UnitOfMeasureCollection>()
									.WithVerb(verb).WithResourceUrl(url)
;
			return mozuClient;

		}


	}

}


