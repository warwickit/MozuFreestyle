
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace Mozu.Api.Contracts.ProductRuntime
{
		///
		///	Summary list of the product validation in a storefront, including options selected by the shopper.
		///
		public class ProductValidationSummary
		{
			public List<string> FulfillmentTypesSupported { get; set; }

			public bool? IsPackagedStandAlone { get; set; }

			///
			///If true, the entity is subject to tax based on the relevant tax rate.
			///
			public bool IsTaxable { get; set; }

			public string MfgPartNumber { get; set; }

			///
			///Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
			///
			public string ProductCode { get; set; }

			///
			///The descriptive brief product name.
			///
			public string ProductName { get; set; }

			///
			///Brief description of the product typically used when the product is displayed in a list or in search results.
			///
			public string ProductShortDescription { get; set; }

			public string ProductUsage { get; set; }

			public string Upc { get; set; }

			///
			///Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
			///
			public string VariationProductCode { get; set; }

			public List<BundledProductSummary> BundledProducts { get; set; }

			///
			///The list of product categories for the storefront.
			///
			public List<Category> Categories { get; set; }

			///
			///The image configured for the product on the storefront.
			///
			public ProductImage Image { get; set; }

			///
			///Properties of the active inventory level of the associated product.
			///
			public ProductInventoryInfo InventoryInfo { get; set; }

			///
			///Dimensions of the packaged product.
			///
			public PackageMeasurements Measurements { get; set; }

			///
			///Price that the merchant intends to sell the product which is not necessarily the list price. This is the price the merchant intends to sell the product if no sale price is present.
			///
			public ProductPrice Price { get; set; }

			public ProductPricingBehaviorInfo PricingBehavior { get; set; }

			///
			///The list of product properties configured in product admin.
			///
			public List<ProductProperty> Properties { get; set; }

			///
			///The current state of the product and whether or not it is available for purchasing. If the product is not eligible for purchase, the validation message is included.
			///
			public ProductPurchasableState PurchasableState { get; set; }

		}

}