
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Codezu.     
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using Mozu.Api.Contracts.Core;
using Mozu.Api.Contracts.CommerceRuntime.Commerce;
using Mozu.Api.Contracts.CommerceRuntime.Fulfillment;
using Mozu.Api.Contracts.CommerceRuntime.Discounts;

namespace Mozu.Api.Contracts.CommerceRuntime.Wishlists
{
		///
		///	Properties of a shopper wish list defined for a site, associated with a customer account.
		///
		public class Wishlist
		{
			///
			///Unique identifier of the channel associated with the wish list.
			///
			public string ChannelCode { get; set; }

			///
			///3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
			///
			public string CurrencyCode { get; set; }

			///
			///Unique identifier of the customer account associated with the wish list.
			///
			public int? CustomerAccountId { get; set; }

			///
			///The interaction type the shopper uses to create the wish list, wich is Website, Store, Call, or Unknown. This property is not used at this time and is reserved for future functionality.
			///
			public string CustomerInteractionType { get; set; }

			///
			///The discounted subtotal of items in the wish list. This property value is not calculated at this time and is reserved for future functionality.
			///
			public decimal? DiscountedSubtotal { get; set; }

			///
			///The subtotal of the cart including any applied discount calculations. This property value is not calculated at this time and is reserved for future functionality.
			///
			public decimal? DiscountedTotal { get; set; }

			///
			///Estimated amount of discounts applied to all items in the wish list, which is system-supplied and read-only.                                This property value is not calculated at this time and is reserved for future functionality.
			///
			public decimal? DiscountTotal { get; set; }

			///
			///The date and time this wish list expires. This property value is not calculated at this time and is reserved for future functionality.
			///
			public DateTime? ExpirationDate { get; set; }

			public string ExternalId { get; set; }

			///
			///The fee total of items in the wish list. This property value is not calculated at this time and is reserved for future functionality.
			///
			public decimal? FeeTotal { get; set; }

			///
			///The tax amount levied against the handling fee for items in the wish list. This property value is not calculated at this time and is reserved for future functionality.
			///
			public decimal? HandlingTaxTotal { get; set; }

			///
			///Unique identifier of this shopper wish list. System-supplied and read only.
			///
			public string Id { get; set; }

			public DateTime? ImportDate { get; set; }

			public bool? IsImport { get; set; }

			///
			///The total amount of tax for items in the wish list. This property value is not calculated at this time and is reserved for future functionality.
			///
			public decimal? ItemTaxTotal { get; set; }

			///
			///The date and time the wish list was last validated against the product catalog.
			///
			public DateTime? LastValidationDate { get; set; }

			///
			///The user-defined name of the shopper wish list. The name defined for a wish list does not have to be unique.
			///
			public string Name { get; set; }

			///
			///The type of privacy to apply to this wish list. Possible values are "Private" which makes the wish list viewable only to the shopper, "DirectShare" which makes the wish list viewable only to people with whom the shopper shares the wish list link, or "Public" which makes the wish list available to everyone. At this time, the system treats all shopper wish lists as "Public" regardless of the defined privacy type.
			///
			public string PrivacyType { get; set; }

			///
			///The subtotaled shipping amount for items in the wish list. This property value is not calculated at this time and is reserved for future functionality.
			///
			public decimal? ShippingSubTotal { get; set; }

			///
			///The total amount of tax levied against shipping charges for items in the wish list. This property value is not calculated at this time and is reserved for future functionality.
			///
			public decimal? ShippingTaxTotal { get; set; }

			///
			///The total shipping costs for items in the wish list. This property value is not calculated at this time and is reserved for future functionality.
			///
			public decimal? ShippingTotal { get; set; }

			///
			///Unique identifier of the site.
			///
			public int? SiteId { get; set; }

			///
			///The integer that represents the sequential order of this wish list in the customer's collection of wish lists.
			///
			public int? SortOrder { get; set; }

			///
			///The subtotal of items in the wish list. This property value is not calculated at this time and is reserved for future functionality.
			///
			public decimal? Subtotal { get; set; }

			///
			///The total tax amount for items in the wish list. This property value is not calculated at this time and is reserved for future functionality.
			///
			public decimal? TaxTotal { get; set; }

			///
			///Unique identifier of the Mozu tenant.
			///
			public int? TenantId { get; set; }

			///
			///The total amount of items in the wish list. This property value is not calculated at this time and is reserved for future functionality. If a site's structure distinguishes between wish list types, the site uses the value in this property to categorize the wish lists.
			///
			public decimal? Total { get; set; }

			///
			///User-defined string that defines the type of wish list to define, such as wish list, baby registry, or Christmas list.
			///
			public string TypeTag { get; set; }

			///
			///System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.
			///
			public string Version { get; set; }

			///
			///Unique identifier of the customer visit in which the wish list was created or last modified. System-supplied and read only.
			///
			public string VisitId { get; set; }

			///
			///Unique identifier of the web session in which the wish list was created or last modified. System-supplied and read only.
			///
			public string WebSessionId { get; set; }

			///
			///Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
			///
			public AuditInfo AuditInfo { get; set; }

			///
			///Collection of change messages logged for each modification to a shopper wish list. System-supplied and read only.
			///
			public List<ChangeMessage> ChangeMessages { get; set; }

			///
			///Properties that determine how items in the wish list are fulfilled.
			///
			public FulfillmentInfo FulfillmentInfo { get; set; }

			///
			///An array list of objects in the returned collection.
			///
			public List<WishlistItem> Items { get; set; }

			///
			///Any order discounts that apply to items in the wish list. This property is not used at this time and is reserved for future functionality.
			///
			public List<AppliedDiscount> OrderDiscounts { get; set; }

		}

}